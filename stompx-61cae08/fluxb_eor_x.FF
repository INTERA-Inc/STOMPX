!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGCB( IGC,N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive petroleum component nonaqueous-liquid fluxes on a 
!     bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE CCP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFGCB'
      ITFX = MOD(IBCT(2,NB),10)
      DXMGC = XMGCB(IGC,2,NB) - XMGC(IGC,2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FGCP = XGC(IGC,MP,N)*RHOG(MP,N)
        FGCB = XGCB(IGC,MP,NB)*RHOGB(MP,NB)
        INDX = 3
        FGC = DIFMN( FGCB,FGCP,DZGF(N),DZGF(N),WG(1,1,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( WG(1,1,N).LT.-EPSL ) THEN
            WGC(IGC,M,1,N) = WG(M,1,N)*FGC
          ELSE
            WGC(IGC,M,1,N) = 0.D+0
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( WG(1,1,N).GT.EPSL ) THEN
            WGC(IGC,M,1,N) = WG(M,1,N)*FGC
          ELSE
            WGC(IGC,M,1,N) = 0.D+0
          ENDIF
        ELSE
          DFP = TORG(MP,N)*PORD(MP,N)*SG(MP,N)*DFGC(IGC,MP,N)
     &      *RHOMG(MP,N)
          DFB = TORGB(MP,NB)*PORDB(MP,NB)*SGB(MP,NB)*DFGCB(IGC,MP,NB)
     &      *RHOMGB(MP,NB)
          INDX = 12
          DFM = DIFMN( DFB,DFP,DZGF(N),DZGF(N),DXMGC,INDX )
          WDGC(IGC,M,1,N) = 2.D+0*DFM*(XMGCB(IGC,MP,NB)-XMGC(IGC,MP,N))/
     &      DZGF(N)
          WGC(IGC,M,1,N) = WG(M,1,N)*FGC + GCPP(1,IGC)*WDGC(IGC,M,1,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFGCB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGCE( IGC,N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive petroleum component gas fluxes on an east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE CCP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFGCE'
      ITFX = MOD(IBCT(2,NB),10)
      DXMGC = XMGC(IGC,2,N) - XMGCB(IGC,2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FGCP = XGC(IGC,MN,N)*RHOG(MN,N)
        FGCB = XGCB(IGC,MN,NB)*RHOGB(MN,NB)
        INDX = 3
        FGC = DIFMN( FGCP,FGCB,DXGF(N),DXGF(N),UG(1,2,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( UG(1,2,N).GT.EPSL ) THEN
            UGC(IGC,M,2,N) = UG(M,2,N)*FGC
          ELSE
            UGC(IGC,M,2,N) = 0.D+0
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( UG(1,2,N).LT.-EPSL ) THEN
            UGC(IGC,M,2,N) = UG(M,2,N)*FGC
          ELSE
            UGC(IGC,M,2,N) = 0.D+0
          ENDIF
        ELSE
          DFP = TORG(MN,N)*PORD(MN,N)*SG(MN,N)*DFGC(IGC,MN,N)
     &      *RHOMG(MN,N)
          DFB = TORGB(MN,NB)*PORDB(MN,NB)*SGB(MN,NB)*DFGCB(IGC,MN,NB)
     &      *RHOMGB(MN,NB)
          INDX = 12
          DFM = DIFMN( DFP,DFB,DXGF(N),DXGF(N),DXMGC,INDX )
          UDGC(IGC,M,2,N) = 2.D+0*DFM*(XMGC(IGC,MN,N)-XMGCB(IGC,MN,NB))/
     &      DXGF(N)
          UGC(IGC,M,2,N) = UG(M,2,N)*FGC + GCPP(1,IGC)*UDGC(IGC,M,2,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFGCE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGCN( IGC,N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive petroleum component gas fluxes on a north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE CCP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFGCN'
      ITFX = MOD(IBCT(2,NB),10)
      DXMGW = XMGW(2,N) - XMGWB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FGCP = XGC(IGC,MN,N)*RHOG(MN,N)
        FGCB = XGCB(IGC,MN,NB)*RHOGB(MN,NB)
        INDX = 3
        FGC = DIFMN( FGCP,FGCB,DYGF(N),DYGF(N),VG(1,2,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( VG(1,2,N).GT.EPSL ) THEN
            VGW(M,2,N) = VG(M,2,N)*FGC
          ELSE
            VGW(M,2,N) = 0.D+0
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( VG(1,2,N).LT.-EPSL ) THEN
            VGW(M,2,N) = VG(M,2,N)*FGC
          ELSE
            VGW(M,2,N) = 0.D+0
          ENDIF
        ELSE
          DFP = TORG(MN,N)*PORD(MN,N)*SG(MN,N)*DFGC(IGC,MN,N)
     &      *RHOMG(MN,N)
          DFB = TORGB(MN,NB)*PORDB(MN,NB)*SGB(MN,NB)*DFGCB(IGC,MN,NB)
     &      *RHOMGB(MN,NB)
          INDX = 12
          DFM = DIFMN( DFP,DFB,DYGF(N),DYGF(N),DXMGC,INDX )
          VDGW(M,2,N) = 2.D+0*DFM*(XMGC(IGC,MN,N)-XMGCB(IGC,MN,NB))
     &      /(DYGF(N)*RP(N))
          VGC(IGC,M,2,N) = VG(M,2,N)*FGC + GCPP(1,IGC)*VDGC(IGC,M,2,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFGCN group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGCS( IGC,N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive petroleum component gas fluxes on a south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE CCP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFGCS'
      ITFX = MOD(IBCT(2,NB),10)
      DXMGC = XMGCB(IGC,2,NB) - XMGC(IGC,2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FGCP = XGC(IGC,MP,N)*RHOG(MP,N)
        FGCB = XGCB(IGC,MP,NB)*RHOGB(MP,NB)
        INDX = 3
        FGW = DIFMN( FGCB,FGCP,DYGF(N),DYGF(N),VG(1,1,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( VG(1,1,N).LT.-EPSL ) THEN
            VGC(IGC,M,1,N) = VG(M,1,N)*FGC
          ELSE
            VGC(IGC,M,1,N) = 0.D+0
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( VG(1,1,N).GT.EPSL ) THEN
            VGC(IGC,M,1,N) = VG(M,1,N)*FGC
          ELSE
            VGC(IGC,M,1,N) = 0.D+0
          ENDIF
        ELSE
          DFP = TORG(MP,N)*PORD(MP,N)*SG(MP,N)*DFGC(IGC,MP,N)
     &      *RHOMG(MP,N)
          DFB = TORGB(MP,NB)*PORDB(MP,NB)*SGB(MP,NB)*DFGCB(IGC,MP,NB)
     &      *RHOMGB(MP,NB)
          INDX = 12
          DFM = DIFMN( DFB,DFP,DYGF(N),DYGF(N),DXMGC,INDX )
          VDGC(IGC,M,1,N) = 2.D+0*DFM*(XMGCB(IGC,MP,NB)-XMGC(IGC,MP,N))
     &      /(DYGF(N)*RP(N))
          VGC(IGC,M,1,N) = VG(M,1,N)*FGW + GCPP(1,IGC)*VDGC(IGC,M,1,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFGCS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGCT( IGC,N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive petroleum component gas fluxes on a top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE CCP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFGCT'
      ITFX = MOD(IBCT(2,NB),10)
      DXMGC = XMGC(IGC,2,N)-XMGCB(IGC,2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FGCP = XGC(IGC,MN,N)*RHOG(MN,N)
        FGCB = XGCB(IGC,MN,NB)*RHOGB(MN,NB)
        INDX = 3
        FGC = DIFMN( FGCP,FGCB,DZGF(N),DZGF(N),WG(1,2,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( WG(1,2,N).GT.EPSL ) THEN
            WGC(IGC,M,2,N) = WG(M,2,N)*FGC
          ELSE
            WGC(IGC,M,2,N) = 0.D+0
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( WG(1,2,N).LT.-EPSL ) THEN
            WGC(IGC,M,2,N) = WG(M,2,N)*FGC
          ELSE
            WGC(IGC,M,2,N) = 0.D+0
          ENDIF
        ELSE
          DFP = TORG(MN,N)*PORD(MN,N)*SG(MN,N)*DFGC(IGC,MN,N)
     &      *RHOMG(MN,N)
          DFB = TORGB(MN,NB)*PORDB(MN,NB)*SGB(MN,NB)*DFGCB(IGC,MN,NB)
     &      *RHOMGB(MN,NB)
          INDX = 12
          DFM = DIFMN( DFP,DFB,DZGF(N),DZGF(N),DXMGC,INDX )
          WDGC(IGC,M,2,N) = 2.D+0*DFM*(XMGC(IGC,MN,N)-XMGCB(IGC,MN,NB))/
     &      DZGF(N)
          WGC(IGC,M,2,N) = WG(M,2,N)*FGC + GCPP(1,IGC)*WDGC(IGC,M,2,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFGCT group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGCW( IGC,N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive petroleum component gas fluxes on a west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE CCP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFGCW'
      ITFX = MOD(IBCT(2,NB),10)
      DXMGC = XMGCB(IGC,2,NB)-XMGC(IGC,2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FGCP = XGC(IGC,MP,N)*RHOG(MP,N)
        FGCB = XGCB(IGC,MP,NB)*RHOGB(MP,NB)
        INDX = 3
        FGC = DIFMN( FGCB,FGCP,DXGF(N),DXGF(N),UG(1,1,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( UG(1,1,N).LT.-EPSL ) THEN
            UGW(M,1,N) = UG(M,1,N)*FGW
          ELSE
            UGW(M,1,N) = 0.D+0
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( UG(1,1,N).GT.EPSL ) THEN
            UGW(M,1,N) = UG(M,1,N)*FGW
          ELSE
            UGW(M,1,N) = 0.D+0
          ENDIF
        ELSE
          DFP = TORG(MP,N)*PORD(MP,N)*SG(MP,N)*DFGC(IGC,MP,N)
     &      *RHOMG(MP,N)
          DFB = TORGB(MP,NB)*PORDB(MP,NB)*SGB(MP,NB)*DFGCB(IGC,MP,NB)
     &      *RHOMGB(MP,NB)
          INDX = 12
          DFM = DIFMN( DFB,DFP,DXGF(N),DXGF(N),DXMGC,INDX )
          UDGC(IGC,M,1,N) = 2.D+0*DFM*(XMGCB(IGC,MP,NB)-XMGC(IGC,MP,N))/
     &      DXGF(N)
          UGC(IGC,M,1,N) = UG(M,1,N)*FGC + GCPP(1,IGC)*UDGC(IGC,M,1,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFGCW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGWB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water gas fluxes on bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFGWB'
      ITFX = MOD(IBCT(2,NB),10)
      DXMGW = XMGWB(2,NB) - XMGW(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FGWB = XGWB(MP,NB)*RHOGB(MP,NB)
        FGWP = XGW(MP,N)*RHOG(MP,N)
        INDX = 3
        FGW = DIFMN( FGWB,FGWP,DZGF(N),DZGF(N),WG(1,1,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( WG(1,1,N).LT.-EPSL ) THEN
            WGW(M,1,N) = WG(M,1,N)*FGW
          ELSE
            WGW(M,1,N) = 0.D+0
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( WG(1,1,N).GT.EPSL ) THEN
            WGW(M,1,N) = WG(M,1,N)*FGW
          ELSE
            WGW(M,1,N) = 0.D+0
          ENDIF
        ELSE
          DFP = TORG(MP,N)*PORD(MP,N)*SG(MP,N)*DFGW(MP,N)
     &      *RHOMG(MP,N)
          DFB = TORGB(MP,NB)*PORDB(MP,NB)*SGB(MP,NB)*DFGWB(MP,NB)
     &      *RHOMGB(MP,NB)
          INDX = 12
          DFM = DIFMN( DFB,DFP,DZGF(N),DZGF(N),DXMGW,INDX )
          WDGW(M,1,N) = 2.D+0*DFM*(XMGWB(MP,NB)-XMGW(MP,N))/DZGF(N)
          WGW(M,1,N) = WG(M,1,N)*FGW + WTMW*WDGW(M,1,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFGWB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGWE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water gas fluxes on east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFGWE'
      ITFX = MOD(IBCT(2,NB),10)
      DXMGW = XMGW(2,N) - XMGWB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FGWB = XGWB(MN,NB)*RHOGB(MN,NB)
        FGWP = XGW(MN,N)*RHOG(MN,N)
        INDX = 3
        FGW = DIFMN( FGWP,FGWB,DXGF(N),DXGF(N),UG(1,2,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( UG(1,2,N).GT.EPSL ) THEN
            UGW(M,2,N) = UG(M,2,N)*FGW
          ELSE
            UGW(M,2,N) = 0.D+0
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( UG(1,2,N).LT.-EPSL ) THEN
            UGW(M,2,N) = UG(M,2,N)*FGW
          ELSE
            UGW(M,2,N) = 0.D+0
          ENDIF
        ELSE
          DFP = TORG(MN,N)*PORD(MN,N)*SG(MN,N)*DFGW(MN,N)
     &      *RHOMG(MN,N)
          DFB = TORGB(MN,NB)*PORDB(MN,NB)*SGB(MN,NB)*DFGWB(MN,NB)
     &      *RHOMGB(MN,NB)
          INDX = 12
          DFM = DIFMN( DFP,DFB,DXGF(N),DXGF(N),DXMGW,INDX )
          UDGW(M,2,N) = 2.D+0*DFM*(XMGW(MN,N)-XMGWB(MN,NB))/DXGF(N)
          UGW(M,2,N) = UG(M,2,N)*FGW + WTMW*UDGW(M,2,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFGWE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGWN( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water gas fluxes on north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFGWN'
      ITFX = MOD(IBCT(2,NB),10)
      DXMGW = XMGW(2,N) - XMGWB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FGWB = XGWB(MN,NB)*RHOGB(MN,NB)
        FGWP = XGW(MN,N)*RHOG(MN,N)
        INDX = 3
        FGW = DIFMN( FGWP,FGWB,DYGF(N),DYGF(N),VG(1,2,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( VG(1,2,N).GT.EPSL ) THEN
            VGW(M,2,N) = VG(M,2,N)*FGW
          ELSE
            VGW(M,2,N) = 0.D+0
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( VG(1,2,N).LT.-EPSL ) THEN
            VGW(M,2,N) = VG(M,2,N)*FGW
          ELSE
            VGW(M,2,N) = 0.D+0
          ENDIF
        ELSE
          DFP = TORG(MN,N)*PORD(MN,N)*SG(MN,N)*DFGW(MN,N)
     &      *RHOMG(MN,N)
          DFB = TORGB(MN,NB)*PORDB(MN,NB)*SGB(MN,NB)*DFGWB(MN,NB)
     &      *RHOMGB(MN,NB)
          INDX = 12
          DFM = DIFMN( DFP,DFB,DYGF(N),DYGF(N),DXMGW,INDX )
          VDGW(M,2,N) = 2.D+0*DFM*(XMGW(MN,N)-XMGWB(MN,NB))
     &      /(DYGF(N)*RP(N))
          VGW(M,2,N) = VG(M,2,N)*FGW + WTMW*VDGW(M,2,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFGWN group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGWS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water gas fluxes on south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFGWS'
      ITFX = MOD(IBCT(2,NB),10)
      DXMGW = XMGWB(2,NB) - XMGW(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FGWB = XGWB(MP,NB)*RHOGB(MP,NB)
        FGWP = XGW(MP,N)*RHOG(MP,N)
        INDX = 3
        FGW = DIFMN( FGWB,FGWP,DYGF(N),DYGF(N),VG(1,1,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( VG(1,1,N).LT.-EPSL ) THEN
            VGW(M,1,N) = VG(M,1,N)*FGW
          ELSE
            VGW(M,1,N) = 0.D+0
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( VG(1,1,N).GT.EPSL ) THEN
            VGW(M,1,N) = VG(M,1,N)*FGW
          ELSE
            VGW(M,1,N) = 0.D+0
          ENDIF
        ELSE
          DFP = TORG(MP,N)*PORD(MP,N)*SG(MP,N)*DFGW(MP,N)
     &      *RHOMG(MP,N)
          DFB = TORGB(MP,NB)*PORDB(MP,NB)*SGB(MP,NB)*DFGWB(MP,NB)
     &      *RHOMGB(MP,NB)
          INDX = 12
          DFM = DIFMN( DFB,DFP,DYGF(N),DYGF(N),DXMGW,INDX )
          VDGW(M,1,N) = 2.D+0*DFM*(XMGWB(MP,NB)-XMGW(MP,N))
     &      /(DYGF(N)*RP(N))
          VGW(M,1,N) = VG(M,1,N)*FGW + WTMW*VDGW(M,1,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFGWS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGWT( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water gas fluxes on top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFGWT'
      ITFX = MOD(IBCT(2,NB),10)
      DXMGW = XMGW(2,N)-XMGWB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FGWB = XGWB(MN,NB)*RHOGB(MN,NB)
        FGWP = XGW(MN,N)*RHOG(MN,N)
        INDX = 3
        FGW = DIFMN( FGWP,FGWB,DZGF(N),DZGF(N),WG(1,2,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( WG(1,2,N).GT.EPSL ) THEN
            WGW(M,2,N) = WG(M,2,N)*FGW
          ELSE
            WGW(M,2,N) = 0.D+0
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( WG(1,2,N).LT.-EPSL ) THEN
            WGW(M,2,N) = WG(M,2,N)*FGW
          ELSE
            WGW(M,2,N) = 0.D+0
          ENDIF
        ELSE
          DFP = TORG(MN,N)*PORD(MN,N)*SG(MN,N)*DFGW(MN,N)
     &      *RHOMG(MN,N)
          DFB = TORGB(MN,NB)*PORDB(MN,NB)*SGB(MN,NB)*DFGWB(MN,NB)
     &      *RHOMGB(MN,NB)
          INDX = 12
          DFM = DIFMN( DFP,DFB,DZGF(N),DZGF(N),DXMGW,INDX )
          WDGW(M,2,N) = 2.D+0*DFM*(XMGW(MN,N)-XMGWB(MN,NB))/DZGF(N)
          WGW(M,2,N) = WG(M,2,N)*FGW + WTMW*WDGW(M,2,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFGWT group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGWW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water gas fluxes on west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFGWW'
      ITFX = MOD(IBCT(2,NB),10)
      DXMGW = XMGWB(2,NB)-XMGW(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FGWB = XGWB(MP,NB)*RHOGB(MP,NB)
        FGWP = XGW(MP,N)*RHOG(MP,N)
        INDX = 3
        FGW = DIFMN( FGWB,FGWP,DXGF(N),DXGF(N),UG(1,1,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( UG(1,1,N).LT.-EPSL ) THEN
            UGW(M,1,N) = UG(M,1,N)*FGW
          ELSE
            UGW(M,1,N) = 0.D+0
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( UG(1,1,N).GT.EPSL ) THEN
            UGW(M,1,N) = UG(M,1,N)*FGW
          ELSE
            UGW(M,1,N) = 0.D+0
          ENDIF
        ELSE
          DFP = TORG(MP,N)*PORD(MP,N)*SG(MP,N)*DFGW(MP,N)
     &      *RHOMG(MP,N)
          DFB = TORGB(MP,NB)*PORDB(MP,NB)*SGB(MP,NB)*DFGWB(MP,NB)
     &      *RHOMGB(MP,NB)
          INDX = 12
          DFM = DIFMN( DFB,DFP,DXGF(N),DXGF(N),DXMGW,INDX )
          UDGW(M,1,N) = 2.D+0*DFM*(XMGWB(MP,NB)-XMGW(MP,N))/DXGF(N)
          UGW(M,1,N) = UG(M,1,N)*FGW + WTMW*UDGW(M,1,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFGWW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLAB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 aqueous fluxes on a bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFLAB'
      ITFX = MOD(IBCT(2,NB),10)
      DXMLA = XMLAB(2,NB) - XMLA(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FLAP = XLA(MP,N)*RHOL(MP,N)
        FLAB = XLAB(MP,NB)*RHOLB(MP,NB)
        INDX = 2
        FLA = DIFMN( FLAB,FLAP,DZGF(N),DZGF(N),WL(1,1,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( WL(1,1,N).LT.-EPSL ) THEN
            WLA(M,1,N) = WL(M,1,N)*FLA
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( WL(1,1,N).GT.EPSL ) THEN
            WLA(M,1,N) = WL(M,1,N)*FLA
          ENDIF
        ELSE
          DFP = TORL(MP,N)*PORD(MP,N)*SL(MP,N)*DFLA(MP,N)
     &      *RHOML(MP,N)
          DFB = TORLB(MP,NB)*PORDB(MP,NB)*SLB(MP,NB)*DFLAB(MP,NB)
     &      *RHOMLB(MP,NB)
          INDX = 14
          DFM = DIFMN( DFB,DFP,DZGF(N),DZGF(N),DXMLA,INDX )
          WDLA(M,1,N) = 2.D+0*DFM*(XMLAB(MP,NB)-XMLA(MP,N))/DZGF(N)
          WLA(M,1,N) = WL(M,1,N)*FLA + WTMA*WDLA(M,1,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFLAB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLAE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 aqueous flux on an east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFLAE'
      ITFX = MOD(IBCT(2,NB),10)
      DXMLA = XMLA(2,N) - XMLAB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FLAP = XLA(MN,N)*RHOL(MN,N)
        FLAB = XLAB(MN,NB)*RHOLB(MN,NB)
        INDX = 2
        FLA = DIFMN( FLAP,FLAB,DXGF(N),DXGF(N),UL(1,2,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( UL(1,2,N).GT.EPSL ) THEN
            ULA(M,2,N) = UL(M,2,N)*FLA
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( UL(1,2,N).LT.-EPSL ) THEN
            ULA(M,2,N) = UL(M,2,N)*FLA
          ENDIF
        ELSE
          DFP = TORL(MN,N)*PORD(MN,N)*SL(MN,N)*DFLA(MN,N)
     &      *RHOML(MN,N)
          DFB = TORLB(MN,NB)*PORDB(MN,NB)*SLB(MN,NB)*DFLAB(MN,NB)
     &      *RHOMLB(MN,NB)
          INDX = 14
          DFM = DIFMN( DFP,DFB,DXGF(N),DXGF(N),DXMLA,INDX )
          UDLA(M,2,N) = 2.D+0*DFM*(XMLA(MN,N)-XMLAB(MN,NB))/DXGF(N)
          ULA(M,2,N) = UL(M,2,N)*FLA + WTMA*UDLA(M,2,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFLAE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLAN( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 aqueous fluxes on a north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFLAWN'
      ITFX = MOD(IBCT(2,NB),10)
      DXMLA = XMLA(2,N) - XMLAB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FLAP = XLA(MN,N)*RHOL(MN,N)
        FLAB = XLAB(MN,NB)*RHOLB(MN,NB)
        INDX = 2
        FLA = DIFMN( FLAP,FLAB,DYGF(N),DYGF(N),VL(1,2,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( VL(1,2,N).GT.EPSL ) THEN
            VLA(M,2,N) = VL(M,2,N)*FLA
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( VL(1,2,N).LT.-EPSL ) THEN
            VLA(M,2,N) = VL(M,2,N)*FLA
          ENDIF
        ELSE
          DFP = TORL(MN,N)*PORD(MN,N)*SL(MN,N)*DFLA(MN,N)
     &      *RHOML(MN,N)
          DFB = TORLB(MN,NB)*PORDB(MN,NB)*SLB(MN,NB)*DFLAB(MN,NB)
     &      *RHOMLB(MN,NB)
          INDX = 14
          DFM = DIFMN( DFP,DFB,DYGF(N),DYGF(N),DXMLA,INDX )
          VDLA(M,2,N) = 2.D+0*DFM*(XMLA(MN,N)-XMLAB(MN,NB))
     &      /(DYGF(N)*RP(N))
          VLA(M,2,N) = VL(M,2,N)*FLA + WTMA*VDLA(M,2,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFLAWN group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLAS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 aqueous fluxes on a south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFLAS'
      ITFX = MOD(IBCT(2,NB),10)
      DXMLA = XMLAB(2,NB) - XMLA(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FLAP = XLA(MP,N)*RHOL(MP,N)
        FLAB = XLAB(MP,NB)*RHOLB(MP,NB)
        INDX = 2
        FLA = DIFMN( FLAB,FLAP,DYGF(N),DYGF(N),VL(1,1,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( VL(1,1,N).LT.-EPSL ) THEN
            VLA(M,1,N) = VL(M,1,N)*FLA
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( VL(1,1,N).GT.EPSL ) THEN
            VLA(M,1,N) = VL(M,1,N)*FLA
          ENDIF
        ELSE
          DFP = TORL(MP,N)*PORD(MP,N)*SL(MP,N)*DFLA(MP,N)
     &      *RHOML(MP,N)
          DFB = TORLB(MP,NB)*PORDB(MP,NB)*SLB(MP,NB)*DFLAB(MP,NB)
     &      *RHOMLB(MP,NB)
          INDX = 14
          DFM = DIFMN( DFB,DFP,DYGF(N),DYGF(N),DXMLA,INDX )
          VDLA(M,1,N) = 2.D+0*DFM*(XMLAB(MP,NB)-XMLA(MP,N))
     &      /(DYGF(N)*RP(N))
          VLA(M,1,N) = VL(M,1,N)*FLA + WTMA*VDLA(M,1,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFLAS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLAT( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 aqueous fluxes on a top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFLAWT'
      ITFX = MOD(IBCT(2,NB),10)
      DXMLA = XMLA(2,N)-XMLAB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FLAP = XLA(MN,N)*RHOL(MN,N)
        FLAB = XLAB(MN,NB)*RHOLB(MN,NB)
        INDX = 2
        FLA = DIFMN( FLAP,FLAB,DZGF(N),DZGF(N),WL(1,2,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( WL(1,2,N).GT.EPSL ) THEN
            WLA(M,2,N) = WL(M,2,N)*FLA
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( WL(1,2,N).LT.-EPSL ) THEN
            WLA(M,2,N) = WL(M,2,N)*FLA
          ENDIF
        ELSE
          DFP = TORL(MN,N)*PORD(MN,N)*SL(MN,N)*DFLA(MN,N)
     &      *RHOML(MN,N)
          DFB = TORLB(MN,NB)*PORDB(MN,NB)*SLB(MN,NB)*DFLAB(MN,NB)
     &      *RHOMLB(MN,NB)
          INDX = 14
          DFM = DIFMN( DFP,DFB,DZGF(N),DZGF(N),DXMLA,INDX )
          WDLA(M,2,N) = 2.D+0*DFM*(XMLA(MN,N)-XMLAB(MN,NB))/DZGF(N)
          WLA(M,2,N) = WL(M,2,N)*FLA + WTMA*WDLA(M,2,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFLAT group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLAW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 aqueous fluxes on a west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFLAW'
      ITFX = MOD(IBCT(2,NB),10)
      DXMLA = XMLAB(2,NB)-XMLA(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FLAP = XLA(MP,N)*RHOL(MP,N)
        FLAB = XLAB(MP,NB)*RHOLB(MP,NB)
        INDX = 2
        FLA = DIFMN( FLAB,FLAP,DXGF(N),DXGF(N),UL(1,1,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( UL(1,1,N).LT.-EPSL ) THEN
            ULA(M,1,N) = UL(M,1,N)*FLA
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( UL(1,1,N).GT.EPSL ) THEN
            ULA(M,1,N) = UL(M,1,N)*FLA
          ENDIF
        ELSE
          DFP = TORL(MP,N)*PORD(MP,N)*SL(MP,N)*DFLA(MP,N)
     &      *RHOML(MP,N)
          DFB = TORLB(MP,NB)*PORDB(MP,NB)*SLB(MP,NB)*DFLAB(MP,NB)
     &      *RHOMLB(MP,NB)
          INDX = 14
          DFM = DIFMN( DFB,DFP,DXGF(N),DXGF(N),DXMLA,INDX )
          UDLA(M,1,N) = 2.D+0*DFM*(XMLAB(MP,NB)-XMLA(MP,N))/DXGF(N)
          ULA(M,1,N) = UL(M,1,N)*FLA + WTMA*UDLA(M,1,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFLAW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLSB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive salt aqueous fluxes on bottom boundary surfaces.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFLSB'
      DO M = 1,ISVF
        MP = MPOS(M)
!
!---  Diffusion coefficients  ---
!
        IF( IEDLS.EQ.1 ) THEN
          TCOR = (T(MP,N)+TABS)/TSPRF
          SMDLP = DFLS(MP,N)*TCOR*(VISRL/VISL(MP,N))
          DFFLP = TORL(MP,N)*SL(MP,N)*PORD(MP,N)*SMDLP
          TCOR = (TB(MP,NB)+TABS)/TSPRF
          SMDLB = DFLSB(MP,NB)*TCOR*(VISRL/VISLB(MP,NB))
          DFFLB = TORLB(MP,NB)*SLB(MP,NB)*PORDB(MP,NB)*SMDLB
        ELSEIF( IEDLS.EQ.3 ) THEN
          DFFLP = TORL(MP,N)*SL(MP,N)*PORD(MP,N)*DFLS(MP,N)
          DFFLB = TORLB(MP,NB)*SLB(MP,NB)*PORDB(MP,NB)*DFLSB(MP,NB)
        ENDIF
        INDX = 18
        DFFLB = DIFMN(DFFLB,DFFLP,DZGF(N),DZGF(N),WL(1,1,N),INDX)
!
!---   Outflow boundary types  ---
!
        IF( IBCT(IEQS,NB).EQ.7 ) THEN
          ALP = MAX( -WL(M,1,N),ZERO )
          WS(M,1,N) = -XLS(MP,N)*RHOL(MP,N)*ALP
!
!---   Inflow boundary types  ---
!
        ELSEIF( IBCT(IEQS,NB).EQ.35 .OR. IBCT(IEQS,NB).EQ.37 ) THEN
          AL = MAX( WL(M,1,N),ZERO )
          WS(M,1,N) = XLSB(MP,NB)*RHOLB(MP,NB)*AL
!
!---   Dirichlet boundary types  ---
!
        ELSE
          DDLB = DFFLB/(5.D-1*DZGF(N))
          AL = MAX( WL(M,1,N),ZERO ) +
     &     DDLB*MAX((ONE-(TENTH*ABS(WL(M,1,N))/(DDLB+SMALL)))**5,ZERO)
          ALP = MAX( -WL(M,1,N),ZERO ) +
     &     DDLB*MAX((ONE-(TENTH*ABS(WL(M,1,N))/(DDLB+SMALL)))**5,ZERO)
          WS(M,1,N) = (XLSB(MP,NB)*RHOLB(MP,NB)*AL
     &     - XLS(MP,N)*RHOL(MP,N)*ALP)
          WDS(M,1,N) = DDLB*(XLSB(MP,NB)*RHOLB(MP,NB) -
     &      XLS(MP,N)*RHOL(MP,N))
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFLSB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLSS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive salt aqueous fluxes on south boundary surfaces.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFLSS'
      DO M = 1,ISVF
        MP = MPOS(M)
!
!---  Diffusion coefficients  ---
!
        IF( IEDLS.EQ.1 ) THEN
          TCOR = (T(MP,N)+TABS)/TSPRF
          SMDLP = DFLS(MP,N)*TCOR*(VISRL/VISL(MP,N))
          DFFLP = TORL(MP,N)*SL(MP,N)*PORD(MP,N)*SMDLP
          TCOR = (TB(MP,NB)+TABS)/TSPRF
          SMDLP = DFLSB(MP,NB)*TCOR*(VISRL/VISLB(MP,NB))
          DFFLS = TORLB(MP,NB)*SLB(MP,NB)*PORDB(MP,NB)*SMDLP
        ELSEIF( IEDLS.EQ.3 ) THEN
          DFFLP = TORL(MP,N)*SL(MP,N)*PORD(MP,N)*DFLS(MP,N)
          DFFLS = TORLB(MP,NB)*SLB(MP,NB)*PORDB(MP,NB)*DFLSB(MP,NB)
        ENDIF
        INDX = 18
        DFFLS = DIFMN(DFFLS,DFFLP,DYGF(N),DYGF(N),VL(1,1,N),INDX)
!
!---   Outflow boundary types  ---
!
        IF( IBCT(IEQS,NB).EQ.7 ) THEN
          ALP = MAX( -VL(M,1,N),ZERO )
          VS(M,1,N) = -XLS(MP,N)*RHOL(MP,N)*ALP
!
!---   Inflow boundary types  ---
!
        ELSEIF( IBCT(IEQS,NB).EQ.35 .OR. IBCT(IEQS,NB).EQ.37 ) THEN
          AL = MAX( VL(M,1,N),ZERO )
          VS(M,1,N) = XLSB(MP,NB)*RHOLB(MP,NB)*AL
!
!---   Dirichlet boundary types  ---
!
        ELSE
          DDLS = DFFLS/RP(N)/(5.D-1*DYGF(N))
          AL = MAX( VL(M,1,N),ZERO ) +
     &     DDLS*MAX((ONE-(TENTH*ABS(VL(M,1,N))/(DDLS+SMALL)))**5,ZERO)
          ALP = MAX( -VL(M,1,N),ZERO ) +
     &     DDLS*MAX((ONE-(TENTH*ABS(VL(M,1,N))/(DDLS+SMALL)))**5,ZERO)
          VS(M,1,N) = (XLSB(MP,NB)*RHOLB(MP,NB)*AL
     &      - XLS(MP,N)*RHOL(MP,N)*ALP)
          VDS(M,1,N) = DDLS*(XLSB(MP,NB)*RHOLB(MP,NB) -
     &      XLS(MP,N)*RHOL(MP,N))
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFLSS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLSW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive salt aqueous fluxes on west boundary surfaces.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFLSW'
      DO M = 1,ISVF
        MP = MPOS(M)
!
!---  Diffusion coefficients  ---
!
        IF( IEDLS.EQ.1 ) THEN
          TCOR = (T(MP,N)+TABS)/TSPRF
          SMDLP = DFLS(MP,N)*TCOR*(VISRL/VISL(MP,N))
          DFFLP = TORL(MP,N)*SL(MP,N)*PORD(MP,N)*SMDLP
          TCOR = (TB(MP,NB)+TABS)/TSPRF
          SMDLP = DFLSB(MP,NB)*TCOR*(VISRL/VISLB(MP,NB))
          DFFLW = TORLB(MP,NB)*SLB(MP,NB)*PORDB(MP,NB)*SMDLP
        ELSEIF( IEDLS.EQ.3 ) THEN
          DFFLP = TORL(MP,N)*SL(MP,N)*PORD(MP,N)*DFLS(MP,N)
          DFFLW = TORLB(MP,NB)*SLB(MP,NB)*PORDB(MP,NB)*DFLSB(MP,NB)
        ENDIF
        INDX = 18
        DFFLW = DIFMN(DFFLW,DFFLP,DXGF(N),DXGF(N),UL(1,1,N),INDX)
!
!---   Outflow boundary types  ---
!
        IF( IBCT(IEQS,NB).EQ.7 ) THEN
          ALP = MAX( -UL(M,1,N),ZERO )
          US(M,1,N) = -XLS(MP,N)*RHOL(MP,N)*ALP
!
!---   Inflow boundary types  ---
!
        ELSEIF( IBCT(IEQS,NB).EQ.35 .OR. IBCT(IEQS,NB).EQ.37 ) THEN
          AL = MAX( UL(M,1,N),ZERO )
          US(M,1,N) = XLSB(MP,NB)*RHOLB(MP,NB)*AL
!
!---   Dirichlet boundary types  ---
!
        ELSE
          DDLW = DFFLW/(5.D-1*DXGF(N))
          AL = MAX( UL(M,1,N),ZERO ) +
     &     DDLW*MAX((ONE-(TENTH*ABS(UL(M,1,N))/(DDLW+SMALL)))**5,ZERO)
          ALP = MAX( -UL(M,1,N),ZERO ) +
     &     DDLW*MAX((ONE-(TENTH*ABS(UL(M,1,N))/(DDLW+SMALL)))**5,ZERO)
          US(M,1,N) = (XLSB(MP,NB)*RHOLB(MP,NB)*AL
     &      - XLS(MP,N)*RHOL(MP,N)*ALP)
          UDS(M,1,N) = DDLW*(XLSB(MP,NB)*RHOLB(MP,NB) -
     &      XLS(MP,N)*RHOL(MP,N))
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFLSW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLSE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive salt aqueous fluxes on west boundary surfaces.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFLSE'
      DO M = 1,ISVF
        MN = MNEG(M)
!
!---  Diffusion coefficients  ---
!
        IF( IEDLS.EQ.1 ) THEN
          TCOR = (T(MN,N)+TABS)/TSPRF
          SMDLP = DFLS(MN,N)*TCOR*(VISRL/VISL(MN,N))
          DFFLP = TORL(MN,N)*SL(MN,N)*PORD(MN,N)*SMDLP
          TCOR = (TB(MN,NB)+TABS)/TSPRF
          SMDLP = DFLSB(MN,NB)*TCOR*(VISRL/VISLB(MN,NB))
          DFFLE = TORLB(MN,NB)*SLB(MN,NB)*PORDB(MN,NB)*SMDLP
        ELSEIF( IEDLS.EQ.3 ) THEN
          DFFLP = TORL(MN,N)*SL(MN,N)*PORD(MN,N)*DFLS(MN,N)
          DFFLE = TORLB(MN,NB)*SLB(MN,NB)*PORDB(MN,NB)*DFLSB(MN,NB)
        ENDIF
        INDX = 18
        DFFLE = DIFMN(DFFLP,DFFLE,DXGF(N),DXGF(N),UL(1,2,N),INDX)
!
!---   Outflow boundary types  ---
!
        IF( IBCT(IEQS,NB).EQ.7 ) THEN
          ALP = MAX( UL(M,2,N),ZERO )
          US(M,2,N) = XLS(MN,N)*RHOL(MN,N)*ALP
!
!---   Inflow boundary types  ---
!
        ELSEIF( IBCT(IEQS,NB).EQ.35 .OR. IBCT(IEQS,NB).EQ.37 ) THEN
          AL = MAX( -UL(M,2,N),ZERO )
          US(M,2,N) = -XLSB(MN,NB)*RHOLB(MN,NB)*AL
!
!---   Dirichlet boundary types  ---
!
        ELSE
          DDLE = DFFLE/(5.D-1*DXGF(N))
          AL = MAX( -UL(M,2,N),ZERO ) +
     &     DDLE*MAX((ONE-(TENTH*ABS(UL(M,2,N))/(DDLE+SMALL)))**5,ZERO)
          ALP = MAX( UL(M,2,N),ZERO ) +
     &     DDLE*MAX((ONE-(TENTH*ABS(UL(M,2,N))/(DDLE+SMALL)))**5,ZERO)
          US(M,2,N) = (XLS(MN,N)*RHOL(MN,N)*ALP
     &     - XLSB(MN,NB)*RHOLB(MN,NB)*AL)
          UDS(M,2,N) = DDLE*(XLS(MN,N)*RHOL(MN,N) -
     &     XLSB(MN,NB)*RHOLB(MN,NB))
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFLSE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLSN( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive salt aqueous fluxes on north boundary surfaces.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFLSN'
      DO M = 1,ISVF
        MN = MNEG(M)
!
!---  Diffusion coefficients  ---
!
        IF( IEDLS.EQ.1 ) THEN
          TCOR = (T(MN,N)+TABS)/TSPRF
          SMDLP = DFLS(MN,N)*TCOR*(VISRL/VISL(MN,N))
          DFFLP = TORL(MN,N)*SL(MN,N)*PORD(MN,N)*SMDLP
          TCOR = (TB(MN,NB)+TABS)/TSPRF
          SMDLP = DFLSB(MN,NB)*TCOR*(VISRL/VISLB(MN,NB))
          DFFLN = TORLB(MN,NB)*SLB(MN,NB)*PORDB(MN,NB)*SMDLP
        ELSEIF( IEDLS.EQ.3 ) THEN
          DFFLP = TORL(MN,N)*SL(MN,N)*PORD(MN,N)*DFLS(MN,N)
          DFFLN = TORLB(MN,NB)*SLB(MN,NB)*PORDB(MN,NB)*DFLSB(MN,NB)
        ENDIF
        INDX = 18
        DFFLN = DIFMN(DFFLP,DFFLN,DYGF(N),DYGF(N),VL(1,2,N),INDX)
!
!---   Outflow boundary types  ---
!
        IF( IBCT(IEQS,NB).EQ.7 ) THEN
          ALP = MAX( VL(M,2,N),ZERO )
          VS(M,2,N) = XLS(MN,N)*RHOL(MN,N)*ALP
!
!---   Inflow boundary types  ---
!
        ELSEIF( IBCT(IEQS,NB).EQ.35 .OR. IBCT(IEQS,NB).EQ.37 ) THEN
          AL = MAX( -VL(M,2,N),ZERO )
          VS(M,2,N) = -XLSB(MN,NB)*RHOLB(MN,NB)*AL
!
!---   Dirichlet boundary types  ---
!
        ELSE
          DDLN = DFFLN/RP(N)/(5.D-1*DYGF(N))
          AL = MAX( -VL(M,2,N),ZERO ) +
     &     DDLN*MAX((ONE-(TENTH*ABS(VL(M,2,N))/(DDLN+SMALL)))**5,ZERO)
          ALP = MAX( VL(M,2,N),ZERO ) +
     &     DDLN*MAX((ONE-(TENTH*ABS(VL(M,2,N))/(DDLN+SMALL)))**5,ZERO)
          VS(M,2,N) = (XLS(MN,N)*RHOL(MN,N)*ALP -
     &      XLSB(MN,NB)*RHOLB(MN,NB)*AL)
          VDS(M,2,N) = DDLN*(XLS(MN,N)*RHOL(MN,N) -
     &      XLSB(MN,NB)*RHOLB(MN,NB))
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFLSN group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLST( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive salt aqueous fluxes on top boundary surfaces.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFLST'
      DO M = 1,ISVF
        MN = MNEG(M)
!
!---  Diffusion coefficients  ---
!
        IF( IEDLS.EQ.1 ) THEN
          TCOR = (T(MN,N)+TABS)/TSPRF
          SMDLP = DFLS(MN,N)*TCOR*(VISRL/VISL(MN,N))
          DFFLP = TORL(MN,N)*SL(MN,N)*PORD(MN,N)*SMDLP
          TCOR = (TB(MN,NB)+TABS)/TSPRF
          SMDLP = DFLSB(MN,NB)*TCOR*(VISRL/VISLB(MN,NB))
          DFFLT = TORLB(MN,NB)*SLB(MN,NB)*PORDB(MN,NB)*SMDLP
        ELSEIF( IEDLS.EQ.3 ) THEN
          DFFLP = TORL(MN,N)*SL(MN,N)*PORD(MN,N)*DFLS(MN,N)
          DFFLT = TORLB(MN,NB)*SLB(MN,NB)*PORDB(MN,NB)*DFLSB(MN,NB)
        ENDIF
        INDX = 18
        DFFLT = DIFMN(DFFLP,DFFLT,DZGF(N),DZGF(N),WL(1,2,N),INDX)
!
!---   Outflow boundary types  ---
!
        IF( IBCT(IEQS,NB).EQ.7 ) THEN
          ALP = MAX( WL(M,2,N),ZERO )
          WS(M,2,N) = XLS(MN,N)*RHOL(MN,N)*ALP
!
!---   Inflow boundary types  ---
!
        ELSEIF( IBCT(IEQS,NB).EQ.35 .OR. IBCT(IEQS,NB).EQ.37 ) THEN
          AL = MAX( -WL(M,2,N),ZERO )
          WS(M,2,N) = -XLSB(MN,NB)*RHOLB(MN,NB)*AL
!
!---   Dirichlet boundary types  ---
!
        ELSE
          DDLT = DFFLT/(5.D-1*DZGF(N))
          AL = MAX( -WL(M,2,N),ZERO ) +
     &     DDLT*MAX((ONE-(TENTH*ABS(WL(M,2,N))/(DDLT+SMALL)))**5,ZERO)
          ALP = MAX( WL(M,2,N),ZERO ) +
     &     DDLT*MAX((ONE-(TENTH*ABS(WL(M,2,N))/(DDLT+SMALL)))**5,ZERO)
          WS(M,2,N) = (XLS(MN,N)*RHOL(MN,N)*ALP
     &      - XLSB(MN,NB)*RHOLB(MN,NB)*AL)
          WDS(M,2,N) = DDLT*(XLS(MN,N)*RHOL(MN,N) -
     &      XLSB(MN,NB)*RHOLB(MN,NB))
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFLST group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLWB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water aqueous fluxes on a bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFLWB'
      ITFX = MOD(IBCT(2,NB),10)
      DO M = 1,ISVF
        MP = MPOS(M)
        FLWP = XLW(MP,N)*RHOL(MP,N)
        FLWB = XLWB(MP,NB)*RHOLB(MP,NB)
        INDX = 2
        FLW = DIFMN( FLWB,FLWP,DZGF(N),DZGF(N),WL(1,1,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( WL(1,1,N).LT.-EPSL ) THEN
            WLW(M,1,N) = WL(M,1,N)*FLW
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( WL(1,1,N).GT.EPSL ) THEN
            WLW(M,1,N) = WL(M,1,N)*FLW
          ENDIF
        ELSE
          WDLW(M,1,N) = -(WDLA(M,1,N) + WDS(M,1,N)/WTMS)
          WLW(M,1,N) = WL(M,1,N)*FLW + WTMW*WDLW(M,1,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFLWB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLWE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water aqueous flux on an east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFLWE'
      ITFX = MOD(IBCT(2,NB),10)
      DO M = 1,ISVF
        MN = MNEG(M)
        FLWP = XLW(MN,N)*RHOL(MN,N)
        FLWB = XLWB(MN,NB)*RHOLB(MN,NB)
        INDX = 2
        FLW = DIFMN( FLWP,FLWB,DXGF(N),DXGF(N),UL(1,2,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( UL(1,2,N).GT.EPSL ) THEN
            ULW(M,2,N) = UL(M,2,N)*FLW
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( UL(1,2,N).LT.-EPSL ) THEN
            ULW(M,2,N) = UL(M,2,N)*FLW
          ENDIF
        ELSE
          UDLW(M,2,N) = -(UDLA(M,2,N) + UDS(M,2,N)/WTMS)
          ULW(M,2,N) = UL(M,2,N)*FLW + WTMW*UDLW(M,2,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFLWE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLWN( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water aqueous fluxes on a north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFLWN'
      ITFX = MOD(IBCT(2,NB),10)
      DO M = 1,ISVF
        MN = MNEG(M)
        FLWP = XLW(MN,N)*RHOL(MN,N)
        FLWB = XLWB(MN,NB)*RHOLB(MN,NB)
        INDX = 2
        FLW = DIFMN( FLWP,FLWB,DYGF(N),DYGF(N),VL(1,2,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( VL(1,2,N).GT.EPSL ) THEN
            VLW(M,2,N) = VL(M,2,N)*FLW
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( VL(1,2,N).LT.-EPSL ) THEN
            VLW(M,2,N) = VL(M,2,N)*FLW
          ENDIF
        ELSE
          VDLW(M,2,N) = -(VDLA(M,2,N) + VDS(M,2,N)/WTMS)
          VLW(M,2,N) = VL(M,2,N)*FLW + WTMW*VDLW(M,2,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFLWN group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLWS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water aqueous fluxes on a south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFLWS'
      DO M = 1,ISVF
        MP = MPOS(M)
        FLWP = XLW(MP,N)*RHOL(MP,N)
        FLWB = XLWB(MP,NB)*RHOLB(MP,NB)
        INDX = 2
        FLW = DIFMN( FLWB,FLWP,DYGF(N),DYGF(N),VL(1,1,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( VL(1,1,N).LT.-EPSL ) THEN
            VLW(M,1,N) = VL(M,1,N)*FLW
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( VL(1,1,N).GT.EPSL ) THEN
            VLW(M,1,N) = VL(M,1,N)*FLW
          ENDIF
        ELSE
          VDLW(M,1,N) = -(VDLA(M,1,N) + VDS(M,1,N)/WTMS)
          VLW(M,1,N) = VL(M,1,N)*FLW + WTMW*VDLW(M,1,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFLWS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLWT( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water aqueous fluxes on a top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFLWT'
      ITFX = MOD(IBCT(2,NB),10)
      DO M = 1,ISVF
        MN = MNEG(M)
        FLWP = XLW(MN,N)*RHOL(MN,N)
        FLWB = XLWB(MN,NB)*RHOLB(MN,NB)
        INDX = 2
        FLW = DIFMN( FLWP,FLWB,DZGF(N),DZGF(N),WL(1,2,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( WL(1,2,N).GT.EPSL ) THEN
            WLW(M,2,N) = WL(M,2,N)*FLW
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( WL(1,2,N).LT.-EPSL ) THEN
            WLW(M,2,N) = WL(M,2,N)*FLW
          ENDIF
        ELSE
          WDLW(M,2,N) = -(WDLA(M,2,N) + WDS(M,2,N)/WTMS)
          WLW(M,2,N) = WL(M,2,N)*FLW + WTMW*WDLW(M,2,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFLWT group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLWW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water aqueous fluxes on a west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFLWW'
      ITFX = MOD(IBCT(2,NB),10)
      DO M = 1,ISVF
        MP = MPOS(M)
        FLWP = XLW(MP,N)*RHOL(MP,N)
        FLWB = XLWB(MP,NB)*RHOLB(MP,NB)
        INDX = 2
        FLW = DIFMN( FLWB,FLWP,DXGF(N),DXGF(N),UL(1,1,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( UL(1,1,N).LT.-EPSL ) THEN
            ULW(M,1,N) = UL(M,1,N)*FLW
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( UL(1,1,N).GT.EPSL ) THEN
            ULW(M,1,N) = UL(M,1,N)*FLW
          ENDIF
        ELSE
          UDLW(M,1,N) = -(UDLA(M,1,N) + UDS(M,1,N)/WTMS)
          ULW(M,1,N) = UL(M,1,N)*FLW + WTMW*UDLW(M,1,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFLAWW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNCB( IGC,N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive petroleum component nonaqueous-liquid fluxes on a 
!     bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE CCP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFNCB'
      ITFX = MOD(IBCT(2,NB),10)
      DXMNC = XMNCB(IGC,2,NB) - XMNC(IGC,2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FNCP = XNC(IGC,MP,N)*RHON(MP,N)
        FNCB = XNCB(IGC,MP,NB)*RHONB(MP,NB)
        INDX = 3
        FNC = DIFMN( FNCB,FNCP,DZGF(N),DZGF(N),WN(1,1,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( WN(1,1,N).LT.-EPSL ) THEN
            WNC(IGC,M,1,N) = WN(M,1,N)*FNC
          ELSE
            WNC(IGC,M,1,N) = 0.D+0
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( WN(1,1,N).GT.EPSL ) THEN
            WNC(IGC,M,1,N) = WN(M,1,N)*FNC
          ELSE
            WNC(IGC,M,1,N) = 0.D+0
          ENDIF
        ELSE
          DFP = TORN(MP,N)*PORD(MP,N)*SN(MP,N)*DFNC(IGC,MP,N)
     &      *RHOMN(MP,N)
          DFB = TORNB(MP,NB)*PORDB(MP,NB)*SNB(MP,NB)*DFNCB(IGC,MP,NB)
     &      *RHOMNB(MP,NB)
          INDX = 12
          DFM = DIFMN( DFB,DFP,DZGF(N),DZGF(N),DXMNC,INDX )
          WDNC(IGC,M,1,N) = 2.D+0*DFM*(XMNCB(IGC,MP,NB)-XMNC(IGC,MP,N))/
     &      DZGF(N)
          WNC(IGC,M,1,N) = WN(M,1,N)*FNC + GCPP(1,IGC)*WDNC(IGC,M,1,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFNCB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNCE( IGC,N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive petroleum component gas fluxes on an east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE CCP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFNCE'
      ITFX = MOD(IBCT(2,NB),10)
      DXMNC = XMNC(IGC,2,N) - XMNCB(IGC,2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FNCP = XNC(IGC,MN,N)*RHON(MN,N)
        FNCB = XNCB(IGC,MN,NB)*RHONB(MN,NB)
        INDX = 3
        FNC = DIFMN( FNCP,FNCB,DXGF(N),DXGF(N),UN(1,2,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( UN(1,2,N).GT.EPSL ) THEN
            UNC(IGC,M,2,N) = UN(M,2,N)*FNC
          ELSE
            UNC(IGC,M,2,N) = 0.D+0
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( UN(1,2,N).LT.-EPSL ) THEN
            UNC(IGC,M,2,N) = UN(M,2,N)*FNC
          ELSE
            UNC(IGC,M,2,N) = 0.D+0
          ENDIF
        ELSE
          DFP = TORN(MN,N)*PORD(MN,N)*SN(MN,N)*DFNC(IGC,MN,N)
     &      *RHOMN(MN,N)
          DFB = TORNB(MN,NB)*PORDB(MN,NB)*SNB(MN,NB)*DFNCB(IGC,MN,NB)
     &      *RHOMNB(MN,NB)
          INDX = 12
          DFM = DIFMN( DFP,DFB,DXGF(N),DXGF(N),DXMNC,INDX )
          UDNC(IGC,M,2,N) = 2.D+0*DFM*(XMNC(IGC,MN,N)-XMNCB(IGC,MN,NB))/
     &      DXGF(N)
          UNC(IGC,M,2,N) = UN(M,2,N)*FNC + GCPP(1,IGC)*UDNC(IGC,M,2,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFNCE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNCN( IGC,N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive petroleum component nonaqueous-liquid fluxes on a 
!     north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE CCP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFNCN'
      ITFX = MOD(IBCT(2,NB),10)
      DXMNC = XMNC(IGC,2,N) - XMNCB(IGC,2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FNCP = XNC(IGC,MN,N)*RHON(MN,N)
        FNCB = XNCB(IGC,MN,NB)*RHONB(MN,NB)
        INDX = 3
        FNC = DIFMN( FNCP,FNCB,DYGF(N),DYGF(N),VN(1,2,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( VN(1,2,N).GT.EPSL ) THEN
            VNC(IGC,M,2,N) = VN(M,2,N)*FNC
          ELSE
            VNC(IGC,M,2,N) = 0.D+0
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( VN(1,2,N).LT.-EPSL ) THEN
            VNC(IGC,M,2,N) = VN(M,2,N)*FNC
          ELSE
            VNC(IGC,M,2,N) = 0.D+0
          ENDIF
        ELSE
          DFP = TORN(MN,N)*PORD(MN,N)*SN(MN,N)*DFNC(IGC,MN,N)
     &      *RHOMN(MN,N)
          DFB = TORNB(MN,NB)*PORDB(MN,NB)*SNB(MN,NB)*DFNCB(IGC,MN,NB)
     &      *RHOMNB(MN,NB)
          INDX = 12
          DFM = DIFMN( DFP,DFB,DYGF(N),DYGF(N),DXMNC,INDX )
          VDNC(IGC,M,2,N) = 2.D+0*DFM*(XMNC(IGC,MN,N)-XMNCB(IGC,MN,NB))
     &      /(DYGF(N)*RP(N))
          VNC(IGC,M,2,N) = VN(M,2,N)*FNC + GCPP(1,IGC)*VDNC(IGC,M,2,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFNCN group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNCS( IGC,N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive petroleum component nonaqueous-liquid fluxes on a 
!     south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE CCP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFNCS'
      ITFX = MOD(IBCT(2,NB),10)
      DXMNC = XMNCB(IGC,2,NB) - XMNC(IGC,2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FNCP = XNC(IGC,MP,N)*RHON(MP,N)
        FNCB = XNCB(IGC,MP,NB)*RHONB(MP,NB)
        INDX = 3
        FNW = DIFMN( FNCB,FNCP,DYGF(N),DYGF(N),VN(1,1,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( VN(1,1,N).LT.-EPSL ) THEN
            VNC(IGC,M,1,N) = VN(M,1,N)*FNC
          ELSE
            VNC(IGC,M,1,N) = 0.D+0
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( VN(1,1,N).GT.EPSL ) THEN
            VNC(IGC,M,1,N) = VN(M,1,N)*FNC
          ELSE
            VNC(IGC,M,1,N) = 0.D+0
          ENDIF
        ELSE
          DFP = TORN(MP,N)*PORD(MP,N)*SN(MP,N)*DFNC(IGC,MP,N)
     &      *RHOMN(MP,N)
          DFB = TORNB(MP,NB)*PORDB(MP,NB)*SNB(MP,NB)*DFNCB(IGC,MP,NB)
     &      *RHOMNB(MP,NB)
          INDX = 12
          DFM = DIFMN( DFB,DFP,DYGF(N),DYGF(N),DXMNC,INDX )
          VDNC(IGC,M,1,N) = 2.D+0*DFM*(XMNCB(IGC,MP,NB)-XMNC(IGC,MP,N))
     &      /(DYGF(N)*RP(N))
          VNC(IGC,M,1,N) = VN(M,1,N)*FNW + GCPP(1,IGC)*VDNC(IGC,M,1,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFNCS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNCT( IGC,N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive petroleum component nonaqueous-liquid fluxes on a 
!     top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE CCP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFNCT'
      ITFX = MOD(IBCT(2,NB),10)
      DXMNC = XMNC(IGC,2,N)-XMNCB(IGC,2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FNCP = XNC(IGC,MN,N)*RHON(MN,N)
        FNCB = XNCB(IGC,MN,NB)*RHONB(MN,NB)
        INDX = 3
        FNC = DIFMN( FNCP,FNCB,DZGF(N),DZGF(N),WN(1,2,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( WN(1,2,N).GT.EPSL ) THEN
            WNC(IGC,M,2,N) = WN(M,2,N)*FNC
          ELSE
            WNC(IGC,M,2,N) = 0.D+0
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( WN(1,2,N).LT.-EPSL ) THEN
            WNC(IGC,M,2,N) = WN(M,2,N)*FNC
          ELSE
            WNC(IGC,M,2,N) = 0.D+0
          ENDIF
        ELSE
          DFP = TORN(MN,N)*PORD(MN,N)*SN(MN,N)*DFNC(IGC,MN,N)
     &      *RHOMN(MN,N)
          DFB = TORNB(MN,NB)*PORDB(MN,NB)*SNB(MN,NB)*DFNCB(IGC,MN,NB)
     &      *RHOMNB(MN,NB)
          INDX = 12
          DFM = DIFMN( DFP,DFB,DZGF(N),DZGF(N),DXMNC,INDX )
          WDNC(IGC,M,2,N) = 2.D+0*DFM*(XMNC(IGC,MN,N)-XMNCB(IGC,MN,NB))/
     &      DZGF(N)
          WNC(IGC,M,2,N) = WN(M,2,N)*FNC + GCPP(1,IGC)*WDNC(IGC,M,2,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFNCT group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNCW( IGC,N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive petroleum component nonaqueous-liquid fluxes on a 
!     west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE CCP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DFFNCW'
      ITFX = MOD(IBCT(2,NB),10)
      DXMNC = XMNCB(IGC,2,NB)-XMNC(IGC,2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FNCP = XNC(IGC,MP,N)*RHON(MP,N)
        FNCB = XNCB(IGC,MP,NB)*RHONB(MP,NB)
        INDX = 3
        FNC = DIFMN( FNCB,FNCP,DXGF(N),DXGF(N),UN(1,1,N),INDX )
!
!---    Dirichlet-Outflow or Neumann-Outflow boundary condition  ---
!
        IF( ITFX.EQ.6 .OR. ITFX.EQ.9 ) THEN
          IF( UN(1,1,N).LT.-EPSL ) THEN
            UNC(IGC,M,1,N) = UN(M,1,N)*FNW
          ELSE
            UNC(IGC,M,1,N) = 0.D+0
          ENDIF
!
!---    Dirichlet-Inflow or Neumann-Inflow boundary condition  ---
!
        ELSEIF( ITFX.EQ.5 .OR. ITFX.EQ.7 ) THEN
          IF( UN(1,1,N).GT.EPSL ) THEN
            UNC(IGC,M,1,N) = UN(M,1,N)*FNW
          ELSE
            UNC(IGC,M,1,N) = 0.D+0
          ENDIF
        ELSE
          DFP = TORN(MP,N)*PORD(MP,N)*SN(MP,N)*DFNC(IGC,MP,N)
     &      *RHOMN(MP,N)
          DFB = TORNB(MP,NB)*PORDB(MP,NB)*SNB(MP,NB)*DFNCB(IGC,MP,NB)
     &      *RHOMNB(MP,NB)
          INDX = 12
          DFM = DIFMN( DFB,DFP,DXGF(N),DXGF(N),DXMNC,INDX )
          UDNC(IGC,M,1,N) = 2.D+0*DFM*(XMNCB(IGC,MP,NB)-XMNC(IGC,MP,N))/
     &      DXGF(N)
          UNC(IGC,M,1,N) = UN(M,1,N)*FNC + GCPP(1,IGC)*UDNC(IGC,M,1,N)
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DFFNCW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVGB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the gas-phase Darcy flux from pressure gradients
!     and gravitational body forces on a bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DRCVGB'
      DO M = 1,ISVF
        MP = MPOS(M)
        HZ = PGB(MP,NB)-PG(MP,N)-5.D-1*GRVZ(1,N)
     &    *DZGF(N)*RHOGB(MP,NB)
        IF( M.EQ.1 ) HD = HZ
        INDX = 9
        RKM = DIFMN(RKGB(MP,NB),RKG(MP,N),DZGF(N),DZGF(N),HD,INDX)
        INDX = 6
        VM = DIFMN(VISGB(MP,NB),VISG(MP,N),DZGF(N),DZGF(N),HD,INDX)
        PERM_PX = PERMRF(MP,N)*PERM(3,N)
        WG(M,1,N) = 2.D+0*PERM_PX*RKM*HZ/(VM*DZGF(N))
!
!---    Outflow boundary condition  ---
!
        IF( ABS(IBCT(IEQW,NB)).EQ.7 ) THEN
          WG(M,1,N) = MIN( 0.D+0,WG(M,1,N) )
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DRCVGB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVGS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the gas-phase Darcy flux from pressure gradients
!     and gravitational body forces on a south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DRCVGS'
      DO M = 1,ISVF
        MP = MPOS(M)
        HY = PGB(MP,NB)-PG(MP,N)-5.D-1*GRVY(1,N)
     &    *DYGF(N)*RP(N)*RHOGB(MP,NB)
        IF( M.EQ.1 ) HD = HY
        INDX = 9
        RKM = DIFMN(RKGB(MP,NB),RKG(MP,N),DYGF(N),DYGF(N),HD,INDX)
        INDX = 6
        VM = DIFMN(VISGB(MP,NB),VISG(MP,N),DYGF(N),DYGF(N),HD,INDX)
        PERM_PX = PERMRF(MP,N)*PERM(2,N)
        VG(M,1,N) = 2.D+0*PERM_PX*RKM*HY/(VM*RP(N)*DYGF(N))
!
!---    Outflow boundary condition  ---
!
        IF( ABS(IBCT(IEQW,NB)).EQ.7 ) THEN
          VG(M,1,N) = MIN( 0.D+0,VG(M,1,N) )
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DRCVGS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVGW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the gas-phase Darcy flux from pressure gradients
!     and gravitational body forces on a west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DRCVGW'
      DO M = 1,ISVF
        MP = MPOS(M)
        HX = PGB(MP,NB)-PG(MP,N)-5.D-1*GRVX(1,N)
     &    *DXGF(N)*RHOGB(MP,NB)
        IF( M.EQ.1 ) HD = HX
        INDX = 9
        RKM = DIFMN(RKGB(MP,NB),RKG(MP,N),DXGF(N),DXGF(N),HD,INDX)
        INDX = 6
        VM = DIFMN(VISGB(MP,NB),VISG(MP,N),DXGF(N),DXGF(N),HD,INDX)
        PERM_PX = PERMRF(MP,N)*PERM(1,N)
        UG(M,1,N) = 2.D+0*PERM_PX*RKM*HX/(VM*DXGF(N))
!
!---    Outflow boundary condition  ---
!
        IF( ABS(IBCT(IEQW,NB)).EQ.7 ) THEN
          UG(M,1,N) = MIN( 0.D+0,UG(M,1,N) )
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DRCVGW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVGE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the gas-phase Darcy flux from pressure gradients
!     and gravitational body forces on a east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DRCVGE'
      DO M = 1,ISVF
        MN = MNEG(M)
        HX = PG(MN,N)-PGB(MN,NB)-5.D-1*GRVX(2,N)
     &    *DXGF(N)*RHOGB(MN,NB)
        IF( M.EQ.1 ) HD = HX
        INDX = 9
        RKM = DIFMN(RKG(MN,N),RKGB(MN,NB),DXGF(N),DXGF(N),HD,INDX)
        INDX = 6
        VM = DIFMN(VISG(MN,N),VISGB(MN,NB),DXGF(N),DXGF(N),HD,INDX)
        PERM_PX = PERMRF(MN,N)*PERM(1,N)
        UG(M,2,N) = 2.D+0*PERM_PX*RKM*HX/(VM*DXGF(N))
!
!---    Outflow boundary condition  ---
!
        IF( ABS(IBCT(IEQW,NB)).EQ.7 ) THEN
          UG(M,2,N) = MAX( 0.D+0,UG(M,2,N) )
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DRCVGE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVGN( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the gas-phase Darcy flux from pressure gradients
!     and gravitational body forces on a north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DRCVGN'
      DO M = 1,ISVF
        MN = MNEG(M)
        HY = PG(MN,N)-PGB(MN,NB)-5.D-1*GRVY(2,N)
     &    *DYGF(N)*RP(N)*RHOGB(MN,NB)
        IF( M.EQ.1 ) HD = HY
        INDX = 9
        RKM = DIFMN(RKG(MN,N),RKGB(MN,NB),DYGF(N),DYGF(N),HD,INDX)
        INDX = 6
        VM = DIFMN(VISG(MN,N),VISGB(MN,NB),DYGF(N),DYGF(N),HD,INDX)
        PERM_PX = PERMRF(MN,N)*PERM(2,N)
        VG(M,2,N) = 2.D+0*PERM_PX*RKM*HY/(VM*RP(N)*DYGF(N))
!
!---    Outflow boundary condition  ---
!
        IF( ABS(IBCT(IEQW,NB)).EQ.7 ) THEN
          VG(M,2,N) = MAX( 0.D+0,VG(M,2,N))
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DRCVGN group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVGT( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the gas-phase Darcy flux from pressure gradients
!     and gravitational body forces on a top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DRCVGT'
      DO M = 1,ISVF
        MN = MNEG(M)
        HZ = PG(MN,N)-PGB(MN,NB)-5.D-1*GRVZ(2,N)
     &    *DZGF(N)*RHOGB(MN,NB)
        IF( M.EQ.1 ) HD = HZ
        INDX = 9
        RKM = DIFMN(RKG(MN,N),RKGB(MN,NB),DZGF(N),DZGF(N),HD,INDX)
        INDX = 6
        VM = DIFMN(VISG(MN,N),VISGB(MN,NB),DZGF(N),DZGF(N),HD,INDX)
        PERM_PX = PERMRF(MN,N)*PERM(3,N)
        WG(M,2,N) = 2.D+0*PERM_PX*RKM*HZ/(VM*DZGF(N))
!
!---    Outflow boundary condition  ---
!
        IF( ABS(IBCT(IEQW,NB)).EQ.7 ) THEN
          WG(M,2,N) = MAX( 0.D+0,WG(M,2,N) )
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DRCVGT group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVLB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the aqueous-phase Darcy flux from pressure gradients
!     and gravitational body forces on a bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DRCVLB'
      DO M = 1,ISVF
        MP = MPOS(M)
        HZ = PLB(MP,NB)-PL(MP,N)-5.D-1*GRVZ(1,N)
     &    *DZGF(N)*RHOLB(MP,NB)
        IF( M.EQ.1 ) HD = HZ
        INDX = 8
        RKM = DIFMN(RKLB(MP,NB),RKL(MP,N),DZGF(N),DZGF(N),HD,INDX)
        INDX = 5
        VM = DIFMN(VISLB(MP,NB),VISL(MP,N),DZGF(N),DZGF(N),HD,INDX)
        PERM_PX = PERMRF(MP,N)*PERM(3,N)
        WL(M,1,N) = 2.D+0*PERM_PX*RKM*HZ/(VM*DZGF(N))
!
!---    Outflow boundary condition  ---
!
        IF( ABS(IBCT(IEQW,NB)).EQ.7 ) THEN
          WL(M,1,N) = MIN( 0.D+0,WL(M,1,N) )
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DRCVLB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVLS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the aqueous-phase Darcy flux from pressure gradients
!     and gravitational body forces on a south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DRCVLS'
      DO M = 1,ISVF
        MP = MPOS(M)
        HY = PLB(MP,NB)-PL(MP,N)-5.D-1*GRVY(1,N)
     &    *DYGF(N)*RP(N)*RHOLB(MP,NB)
        IF( M.EQ.1 ) HD = HY
        INDX = 8
        RKM = DIFMN(RKLB(MP,NB),RKL(MP,N),DYGF(N),DYGF(N),HD,INDX)
        INDX = 5
        VM = DIFMN(VISLB(MP,NB),VISL(MP,N),DYGF(N),DYGF(N),HD,INDX)
        PERM_PX = PERMRF(MP,N)*PERM(2,N)
        VL(M,1,N) = 2.D+0*PERM_PX*RKM*HY/(VM*RP(N)*DYGF(N))
!
!---    Outflow boundary condition  ---
!
        IF( ABS(IBCT(IEQW,NB)).EQ.7 ) THEN
          VL(M,1,N) = MIN( 0.D+0,VL(M,1,N) )
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DRCVLS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVLW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the aqueous-phase Darcy flux from pressure gradients
!     and gravitational body forces on a west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DRCVLW'
      DO M = 1,ISVF
        MP = MPOS(M)
        HX = PLB(MP,NB)-PL(MP,N)-5.D-1*GRVX(1,N)
     &    *DXGF(N)*RHOLB(MP,NB)
        IF( M.EQ.1 ) HD = HX
        INDX = 8
        RKM = DIFMN(RKLB(MP,NB),RKL(MP,N),DXGF(N),DXGF(N),HD,INDX)
        INDX = 5
        VM = DIFMN(VISLB(MP,NB),VISL(MP,N),DXGF(N),DXGF(N),HD,INDX)
        PERM_PX = PERMRF(MP,N)*PERM(1,N)
        UL(M,1,N) = 2.D+0*PERM_PX*RKM*HX/(VM*DXGF(N))
!
!---    Outflow boundary condition  ---
!
        IF( ABS(IBCT(IEQW,NB)).EQ.7 ) THEN
          UL(M,1,N) = MIN( 0.D+0,UL(M,1,N) )
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DRCVLW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVLE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the aqueous-phase Darcy flux from pressure gradients
!     and gravitational body forces on a east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DRCVLE'
      DO M = 1,ISVF
        MN = MNEG(M)
        HX = PL(MN,N)-PLB(MN,NB)-5.D-1*GRVX(2,N)
     &    *DXGF(N)*RHOLB(MN,NB)
        IF( M.EQ.1 ) HD = HX
        INDX = 8
        RKM = DIFMN(RKL(MN,N),RKLB(MN,NB),DXGF(N),DXGF(N),HD,INDX)
        INDX = 5
        VM = DIFMN(VISL(MN,N),VISLB(MN,NB),DXGF(N),DXGF(N),HD,INDX)
        PERM_PX = PERMRF(MN,N)*PERM(1,N)
        UL(M,2,N) = 2.D+0*PERM_PX*RKM*HX/(VM*DXGF(N))
!
!---    Outflow boundary condition  ---
!
        IF( ABS(IBCT(IEQW,NB)).EQ.7 ) THEN
          UL(M,2,N) = MAX( 0.D+0,UL(M,2,N) )
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DRCVLE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVLN( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the aqueous-phase Darcy flux from pressure gradients
!     and gravitational body forces on a north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DRCVLN'
      DO M = 1,ISVF
        MN = MNEG(M)
        HY = PL(MN,N)-PLB(MN,NB)-5.D-1*GRVY(2,N)
     &    *DYGF(N)*RP(N)*RHOLB(MN,NB)
        IF( M.EQ.1 ) HD = HY
        INDX = 8
        RKM = DIFMN(RKL(MN,N),RKLB(MN,NB),DYGF(N),DYGF(N),HD,INDX)
        INDX = 5
        VM = DIFMN(VISL(MN,N),VISLB(MN,NB),DYGF(N),DYGF(N),HD,INDX)
        PERM_PX = PERMRF(MN,N)*PERM(2,N)
        VL(M,2,N) = 2.D+0*PERM_PX*RKM*HY/(VM*RP(N)*DYGF(N))
!
!---    Outflow boundary condition  ---
!
        IF( ABS(IBCT(IEQW,NB)).EQ.7 ) THEN
          VL(M,2,N) = MAX( 0.D+0,VL(M,2,N))
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DRCVLN group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVLT( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the aqueous-phase Darcy flux from pressure gradients
!     and gravitational body forces on a top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DRCVLT'
      DO M = 1,ISVF
        MN = MNEG(M)
        HZ = PL(MN,N)-PLB(MN,NB)-5.D-1*GRVZ(2,N)
     &    *DZGF(N)*RHOLB(MN,NB)
        IF( M.EQ.1 ) HD = HZ
        INDX = 8
        RKM = DIFMN(RKL(MN,N),RKLB(MN,NB),DZGF(N),DZGF(N),HD,INDX)
        INDX = 5
        VM = DIFMN(VISL(MN,N),VISLB(MN,NB),DZGF(N),DZGF(N),HD,INDX)
        PERM_PX = PERMRF(MN,N)*PERM(3,N)
        WL(M,2,N) = 2.D+0*PERM_PX*RKM*HZ/(VM*DZGF(N))
!
!---    Outflow boundary condition  ---
!
        IF( ABS(IBCT(IEQW,NB)).EQ.7 ) THEN
          WL(M,2,N) = MAX( 0.D+0,WL(M,2,N) )
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DRCVLT group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVNB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the aqueous-phase Darcy flux from pressure gradients
!     and gravitational body forces on a bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DRCVNB'
      DO M = 1,ISVF
        MP = MPOS(M)
        HZ = PNB(MP,NB)-PN(MP,N)-5.D-1*GRVZ(1,N)
     &    *DZGF(N)*RHONB(MP,NB)
        IF( M.EQ.1 ) HD = HZ
        INDX = 8
        RKM = DIFMN(RKNB(MP,NB),RKN(MP,N),DZGF(N),DZGF(N),HD,INDX)
        INDX = 5
        VM = DIFMN(VISNB(MP,NB),VISN(MP,N),DZGF(N),DZGF(N),HD,INDX)
        PERM_PX = PERMRF(MP,N)*PERM(3,N)
        WN(M,1,N) = 2.D+0*PERM_PX*RKM*HZ/(VM*DZGF(N))
!
!---    Outflow boundary condition  ---
!
        IF( ABS(IBCT(IEQW,NB)).EQ.7 ) THEN
          WN(M,1,N) = MIN( 0.D+0,WN(M,1,N) )
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DRCVNB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVNS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the aqueous-phase Darcy flux from pressure gradients
!     and gravitational body forces on a south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DRCVNS'
      DO M = 1,ISVF
        MP = MPOS(M)
        HY = PNB(MP,NB)-PN(MP,N)-5.D-1*GRVY(1,N)
     &    *DYGF(N)*RP(N)*RHONB(MP,NB)
        IF( M.EQ.1 ) HD = HY
        INDX = 8
        RKM = DIFMN(RKNB(MP,NB),RKN(MP,N),DYGF(N),DYGF(N),HD,INDX)
        INDX = 5
        VM = DIFMN(VISNB(MP,NB),VISN(MP,N),DYGF(N),DYGF(N),HD,INDX)
        PERM_PX = PERMRF(MP,N)*PERM(2,N)
        VN(M,1,N) = 2.D+0*PERM_PX*RKM*HY/(VM*RP(N)*DYGF(N))
!
!---    Outflow boundary condition  ---
!
        IF( ABS(IBCT(IEQW,NB)).EQ.7 ) THEN
          VN(M,1,N) = MIN( 0.D+0,VN(M,1,N) )
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DRCVNS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVNW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the aqueous-phase Darcy flux from pressure gradients
!     and gravitational body forces on a west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DRCVNW'
      DO M = 1,ISVF
        MP = MPOS(M)
        HX = PNB(MP,NB)-PN(MP,N)-5.D-1*GRVX(1,N)
     &    *DXGF(N)*RHONB(MP,NB)
        IF( M.EQ.1 ) HD = HX
        INDX = 8
        RKM = DIFMN(RKNB(MP,NB),RKN(MP,N),DXGF(N),DXGF(N),HD,INDX)
        INDX = 5
        VM = DIFMN(VISNB(MP,NB),VISN(MP,N),DXGF(N),DXGF(N),HD,INDX)
        PERM_PX = PERMRF(MP,N)*PERM(1,N)
        UN(M,1,N) = 2.D+0*PERM_PX*RKM*HX/(VM*DXGF(N))
!
!---    Outflow boundary condition  ---
!
        IF( ABS(IBCT(IEQW,NB)).EQ.7 ) THEN
          UN(M,1,N) = MIN( 0.D+0,UN(M,1,N) )
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DRCVNW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVNE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the aqueous-phase Darcy flux from pressure gradients
!     and gravitational body forces on a east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DRCVNE'
      DO M = 1,ISVF
        MN = MNEG(M)
        HX = PN(MN,N)-PNB(MN,NB)-5.D-1*GRVX(2,N)
     &    *DXGF(N)*RHONB(MN,NB)
        IF( M.EQ.1 ) HD = HX
        INDX = 8
        RKM = DIFMN(RKN(MN,N),RKNB(MN,NB),DXGF(N),DXGF(N),HD,INDX)
        INDX = 5
        VM = DIFMN(VISN(MN,N),VISNB(MN,NB),DXGF(N),DXGF(N),HD,INDX)
        PERM_PX = PERMRF(MN,N)*PERM(1,N)
        UN(M,2,N) = 2.D+0*PERM_PX*RKM*HX/(VM*DXGF(N))
!
!---    Outflow boundary condition  ---
!
        IF( ABS(IBCT(IEQW,NB)).EQ.7 ) THEN
          UN(M,2,N) = MAX( 0.D+0,UN(M,2,N) )
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DRCVNE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVNN( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the aqueous-phase Darcy flux from pressure gradients
!     and gravitational body forces on a north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DRCVNN'
      DO M = 1,ISVF
        MN = MNEG(M)
        HY = PN(MN,N)-PNB(MN,NB)-5.D-1*GRVY(2,N)
     &    *DYGF(N)*RP(N)*RHONB(MN,NB)
        IF( M.EQ.1 ) HD = HY
        INDX = 8
        RKM = DIFMN(RKN(MN,N),RKNB(MN,NB),DYGF(N),DYGF(N),HD,INDX)
        INDX = 5
        VM = DIFMN(VISN(MN,N),VISNB(MN,NB),DYGF(N),DYGF(N),HD,INDX)
        PERM_PX = PERMRF(MN,N)*PERM(2,N)
        VN(M,2,N) = 2.D+0*PERM_PX*RKM*HY/(VM*RP(N)*DYGF(N))
!
!---    Outflow boundary condition  ---
!
        IF( ABS(IBCT(IEQW,NB)).EQ.7 ) THEN
          VN(M,2,N) = MAX( 0.D+0,VN(M,2,N))
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DRCVNN group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVNT( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the aqueous-phase Darcy flux from pressure gradients
!     and gravitational body forces on a top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 29 November 2022.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/DRCVNT'
      DO M = 1,ISVF
        MN = MNEG(M)
        HZ = PN(MN,N)-PNB(MN,NB)-5.D-1*GRVZ(2,N)
     &    *DZGF(N)*RHONB(MN,NB)
        IF( M.EQ.1 ) HD = HZ
        INDX = 8
        RKM = DIFMN(RKN(MN,N),RKNB(MN,NB),DZGF(N),DZGF(N),HD,INDX)
        INDX = 5
        VM = DIFMN(VISN(MN,N),VISNB(MN,NB),DZGF(N),DZGF(N),HD,INDX)
        PERM_PX = PERMRF(MN,N)*PERM(3,N)
        WN(M,2,N) = 2.D+0*PERM_PX*RKM*HZ/(VM*DZGF(N))
!
!---    Outflow boundary condition  ---
!
        IF( ABS(IBCT(IEQW,NB)).EQ.7 ) THEN
          WN(M,2,N) = MAX( 0.D+0,WN(M,2,N) )
        ENDIF
      ENDDO
!
!---  Reset subroutine string sequence  ---
!
      ISUB_LOG = ISUB_LOG-1
!
!---  End of DRCVNT group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THGB_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a bottom boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THGB_EOR'
      DO M = 1,ISVF
        MP = MPOS(M)
        HP = HG(MP,N)*RHOG(MP,N)
        HB = HGB(MP,NB)*RHOGB(MP,NB)
!
!---    Energy inflow boundary condition  ---
!
        IF( IBCT(IEQT,NB).EQ.5 ) THEN
          WQ(M,1,N) = WQ(M,1,N) + HB*MAX(WG(M,1,N),ZERO)
!
!---    Energy outflow boundary condition  ---
!
        ELSEIF( IBCT(IEQT,NB).EQ.6 ) THEN
          WQ(M,1,N) = WQ(M,1,N) - HP*MAX(-WG(M,1,N),ZERO)
        ELSE
          WQ(M,1,N) = WQ(M,1,N) + HB*MAX(WG(M,1,N),ZERO)
     &      - HP*MAX(-WG(M,1,N),ZERO)
        ENDIF 
      ENDDO
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THGB_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THGE_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a east boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THGE_EOR'
      DO M = 1,ISVF
        MN = MNEG(M)
        HP = HG(MN,N)*RHOG(MN,N)
        HB = HGB(MN,NB)*RHOGB(MN,NB)
!
!---    Energy inflow boundary condition  ---
!
        IF( IBCT(IEQT,NB).EQ.5 ) THEN
          UQ(M,2,N) = UQ(M,2,N) - HB*MAX(-UG(M,2,N),ZERO)
!
!---    Energy outflow boundary condition  ---
!
        ELSEIF( IBCT(IEQT,NB).EQ.6 ) THEN
          UQ(M,2,N) = UQ(M,2,N) + HP*MAX(UG(M,2,N),ZERO)
        ELSE
          UQ(M,2,N) = UQ(M,2,N) + HP*MAX(UG(M,2,N),ZERO)
     &      - HB*MAX(-UG(M,2,N),ZERO)
        ENDIF 
      ENDDO
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THGE_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THGN_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a north boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THGN_EOR'
      DO M = 1,ISVF
        MN = MNEG(M)
        HP = HG(MN,N)*RHOG(MN,N)
        HB = HGB(MN,NB)*RHOGB(MN,NB)
!
!---    Energy inflow boundary condition  ---
!
        IF( IBCT(IEQT,NB).EQ.5 ) THEN
          VQ(M,2,N) = VQ(M,2,N) - HB*MAX(-VG(M,2,N),ZERO)
!
!---    Energy outflow boundary condition  ---
!
        ELSEIF( IBCT(IEQT,NB).EQ.6 ) THEN
          VQ(M,2,N) = VQ(M,2,N) + HP*MAX(VG(M,2,N),ZERO)
        ELSE
          VQ(M,2,N) = VQ(M,2,N) + HP*MAX(VG(M,2,N),ZERO)
     &      - HB*MAX(-VG(M,2,N),ZERO)
        ENDIF 
      ENDDO
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THGN_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THGS_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a south boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THGS_EOR'
      DO M = 1,ISVF
        MP = MPOS(M)
        HP = HG(MP,N)*RHOG(MP,N)
        HB = HGB(MP,NB)*RHOGB(MP,NB)
!
!---    Energy inflow boundary condition  ---
!
        IF( IBCT(IEQT,NB).EQ.5 ) THEN
          VQ(M,1,N) = VQ(M,1,N) + HB*MAX(VG(M,1,N),ZERO)
!
!---    Energy outflow boundary condition  ---
!
        ELSEIF( IBCT(IEQT,NB).EQ.6 ) THEN
          VQ(M,1,N) = VQ(M,1,N) - HP*MAX(-VG(M,1,N),ZERO)
        ELSE
          VQ(M,1,N) = VQ(M,1,N) + HB*MAX(VG(M,1,N),ZERO)
     &      - HP*MAX(-VG(M,1,N),ZERO)
        ENDIF 
      ENDDO
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THGS_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THGT_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a top boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THGT_EOR'
      DO M = 1,ISVF
        MN = MNEG(M)
        HP = HG(MN,N)*RHOG(MN,N)
        HB = HGB(MN,NB)*RHOGB(MN,NB)
!
!---    Energy inflow boundary condition  ---
!
        IF( IBCT(IEQT,NB).EQ.5 ) THEN
          WQ(M,2,N) = WQ(M,2,N) - HB*MAX(-WG(M,2,N),ZERO)
!
!---    Energy outflow boundary condition  ---
!
        ELSEIF( IBCT(IEQT,NB).EQ.6 ) THEN
          WQ(M,2,N) = WQ(M,2,N) + HP*MAX(WG(M,2,N),ZERO)
        ELSE
          WQ(M,2,N) = WQ(M,2,N) + HP*MAX(WG(M,2,N),ZERO)
     &      - HB*MAX(-WG(M,2,N),ZERO)
        ENDIF 
      ENDDO
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THGT_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THGW_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a west boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THGW_EOR'
      DO M = 1,ISVF
        MP = MPOS(M)
        HP = HG(MP,N)*RHOG(MP,N)
        HB = HGB(MP,NB)*RHOGB(MP,NB)
!
!---    Energy inflow boundary condition  ---
!
        IF( IBCT(IEQT,NB).EQ.5 ) THEN
          UQ(M,1,N) = UQ(M,1,N) + HB*MAX(UG(M,1,N),ZERO)
!
!---    Energy outflow boundary condition  ---
!
        ELSEIF( IBCT(IEQT,NB).EQ.6 ) THEN
          UQ(M,1,N) = UQ(M,1,N) - HP*MAX(-UG(M,1,N),ZERO)
        ELSE
          UQ(M,1,N) = UQ(M,1,N) + HB*MAX(UG(M,1,N),ZERO)
     &      - HP*MAX(-UG(M,1,N),ZERO)
        ENDIF 
      ENDDO
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THGW_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THLB_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by aqueous advection
!     on a bottom boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THLB_EOR'
      DO M = 1,ISVF
        MP = MPOS(M)
        HP = HL(MP,N)*RHOL(MP,N)
        HB = HLB(MP,NB)*RHOLB(MP,NB)
!
!---    Energy inflow boundary condition  ---
!
        IF( IBCT(IEQT,NB).EQ.5 ) THEN
          WQ(M,1,N) = WQ(M,1,N) + HB*MAX(WL(M,1,N),ZERO)
!
!---    Energy outflow boundary condition  ---
!
        ELSEIF( IBCT(IEQT,NB).EQ.6 ) THEN
          WQ(M,1,N) = WQ(M,1,N) - HP*MAX(-WL(M,1,N),ZERO)
        ELSE
          WQ(M,1,N) = WQ(M,1,N) + HB*MAX(WL(M,1,N),ZERO)
     &      - HP*MAX(-WL(M,1,N),ZERO)
        ENDIF 
      ENDDO
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THLB_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THLE_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by aqueous advection
!     on a east boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THLE_EOR'
      DO M = 1,ISVF
        MN = MNEG(M)
        HP = HL(MN,N)*RHOL(MN,N)
        HB = HLB(MN,NB)*RHOLB(MN,NB)
!
!---    Energy inflow boundary condition  ---
!
        IF( IBCT(IEQT,NB).EQ.5 ) THEN
          UQ(M,2,N) = UQ(M,2,N) - HB*MAX(-UL(M,2,N),ZERO)
!
!---    Energy outflow boundary condition  ---
!
        ELSEIF( IBCT(IEQT,NB).EQ.6 ) THEN
          UQ(M,2,N) = UQ(M,2,N) + HP*MAX(UL(M,2,N),ZERO)
        ELSE
          UQ(M,2,N) = UQ(M,2,N) + HP*MAX(UL(M,2,N),ZERO)
     &      - HB*MAX(-UL(M,2,N),ZERO)
        ENDIF 
      ENDDO
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THLE_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THLN_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by aqueous advection
!     on a north boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THLN_EOR'
      DO M = 1,ISVF
        MN = MNEG(M)
        HP = HL(MN,N)*RHOL(MN,N)
        HB = HLB(MN,NB)*RHOLB(MN,NB)
!
!---    Energy inflow boundary condition  ---
!
        IF( IBCT(IEQT,NB).EQ.5 ) THEN
          VQ(M,2,N) = VQ(M,2,N) - HB*MAX(-VL(M,2,N),ZERO)
!
!---    Energy outflow boundary condition  ---
!
        ELSEIF( IBCT(IEQT,NB).EQ.6 ) THEN
          VQ(M,2,N) = VQ(M,2,N) + HP*MAX(VL(M,2,N),ZERO)
        ELSE
          VQ(M,2,N) = VQ(M,2,N) + HP*MAX(VL(M,2,N),ZERO)
     &      - HB*MAX(-VL(M,2,N),ZERO)
        ENDIF 
      ENDDO
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THLN_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THLS_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by aqueous advection
!     on a south boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THLS_EOR'
      DO M = 1,ISVF
        MP = MPOS(M)
        HP = HL(MP,N)*RHOL(MP,N)
        HB = HLB(MP,NB)*RHOLB(MP,NB)
!
!---    Energy inflow boundary condition  ---
!
        IF( IBCT(IEQT,NB).EQ.5 ) THEN
          VQ(M,1,N) = VQ(M,1,N) + HB*MAX(VL(M,1,N),ZERO)
!
!---    Energy outflow boundary condition  ---
!
        ELSEIF( IBCT(IEQT,NB).EQ.6 ) THEN
          VQ(M,1,N) = VQ(M,1,N) - HP*MAX(-VL(M,1,N),ZERO)
        ELSE
          VQ(M,1,N) = VQ(M,1,N) + HB*MAX(VL(M,1,N),ZERO)
     &      - HP*MAX(-VL(M,1,N),ZERO)
        ENDIF 
      ENDDO
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THLS_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THLT_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by aqueous advection
!     on a top boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THLT_EOR'
      DO M = 1,ISVF
        MN = MNEG(M)
        HP = HL(MN,N)*RHOL(MN,N)
        HB = HLB(MN,NB)*RHOLB(MN,NB)
!
!---    Energy inflow boundary condition  ---
!
        IF( IBCT(IEQT,NB).EQ.5 ) THEN
          WQ(M,2,N) = WQ(M,2,N) - HB*MAX(-WL(M,2,N),ZERO)
!
!---    Energy outflow boundary condition  ---
!
        ELSEIF( IBCT(IEQT,NB).EQ.6 ) THEN
          WQ(M,2,N) = WQ(M,2,N) + HP*MAX(WL(M,2,N),ZERO)
        ELSE
          WQ(M,2,N) = WQ(M,2,N) + HP*MAX(WL(M,2,N),ZERO)
     &      - HB*MAX(-WL(M,2,N),ZERO)
        ENDIF 
      ENDDO
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THLT_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THLW_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by aqueous advection
!     on a west boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THLW_EOR'
      DO M = 1,ISVF
        MP = MPOS(M)
        HP = HL(MP,N)*RHOL(MP,N)
        HB = HLB(MP,NB)*RHOLB(MP,NB)
!
!---    Energy inflow boundary condition  ---
!
        IF( IBCT(IEQT,NB).EQ.5 ) THEN
          UQ(M,1,N) = UQ(M,1,N) + HB*MAX(UL(M,1,N),ZERO)
!
!---    Energy outflow boundary condition  ---
!
        ELSEIF( IBCT(IEQT,NB).EQ.6 ) THEN
          UQ(M,1,N) = UQ(M,1,N) - HP*MAX(-UL(M,1,N),ZERO)
        ELSE
          UQ(M,1,N) = UQ(M,1,N) + HB*MAX(UL(M,1,N),ZERO)
     &      - HP*MAX(-UL(M,1,N),ZERO)
        ENDIF 
      ENDDO
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THLW_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THNB_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a bottom boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THNB_EOR'
      DO M = 1,ISVF
        MP = MPOS(M)
        HP = HN(MP,N)*RHON(MP,N)
        HB = HNB(MP,NB)*RHONB(MP,NB)
!
!---    Energy inflow boundary condition  ---
!
        IF( IBCT(IEQT,NB).EQ.5 ) THEN
          WQ(M,1,N) = WQ(M,1,N) + HB*MAX(WN(M,1,N),ZERO)
!
!---    Energy outflow boundary condition  ---
!
        ELSEIF( IBCT(IEQT,NB).EQ.6 ) THEN
          WQ(M,1,N) = WQ(M,1,N) - HP*MAX(-WN(M,1,N),ZERO)
        ELSE
          WQ(M,1,N) = WQ(M,1,N) + HB*MAX(WN(M,1,N),ZERO)
     &      - HP*MAX(-WN(M,1,N),ZERO)
        ENDIF 
      ENDDO
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THNB_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THNE_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a east boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THNE_EOR'
      DO M = 1,ISVF
        MN = MNEG(M)
        HP = HN(MN,N)*RHON(MN,N)
        HB = HNB(MN,NB)*RHONB(MN,NB)
!
!---    Energy inflow boundary condition  ---
!
        IF( IBCT(IEQT,NB).EQ.5 ) THEN
          UQ(M,2,N) = UQ(M,2,N) - HB*MAX(-UN(M,2,N),ZERO)
!
!---    Energy outflow boundary condition  ---
!
        ELSEIF( IBCT(IEQT,NB).EQ.6 ) THEN
          UQ(M,2,N) = UQ(M,2,N) + HP*MAX(UN(M,2,N),ZERO)
        ELSE
          UQ(M,2,N) = UQ(M,2,N) + HP*MAX(UN(M,2,N),ZERO)
     &      - HB*MAX(-UN(M,2,N),ZERO)
        ENDIF 
      ENDDO
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THNE_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THNN_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a north boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THNN_EOR'
      DO M = 1,ISVF
        MN = MNEG(M)
        HP = HN(MN,N)*RHON(MN,N)
        HB = HNB(MN,NB)*RHONB(MN,NB)
!
!---    Energy inflow boundary condition  ---
!
        IF( IBCT(IEQT,NB).EQ.5 ) THEN
          VQ(M,2,N) = VQ(M,2,N) - HB*MAX(-VN(M,2,N),ZERO)
!
!---    Energy outflow boundary condition  ---
!
        ELSEIF( IBCT(IEQT,NB).EQ.6 ) THEN
          VQ(M,2,N) = VQ(M,2,N) + HP*MAX(VN(M,2,N),ZERO)
        ELSE
          VQ(M,2,N) = VQ(M,2,N) + HP*MAX(VN(M,2,N),ZERO)
     &      - HB*MAX(-VN(M,2,N),ZERO)
        ENDIF 
      ENDDO
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THNN_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THNS_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a south boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THNS_EOR'
      DO M = 1,ISVF
        MP = MPOS(M)
        HP = HN(MP,N)*RHON(MP,N)
        HB = HNB(MP,NB)*RHONB(MP,NB)
!
!---    Energy inflow boundary condition  ---
!
        IF( IBCT(IEQT,NB).EQ.5 ) THEN
          VQ(M,1,N) = VQ(M,1,N) + HB*MAX(VN(M,1,N),ZERO)
!
!---    Energy outflow boundary condition  ---
!
        ELSEIF( IBCT(IEQT,NB).EQ.6 ) THEN
          VQ(M,1,N) = VQ(M,1,N) - HP*MAX(-VN(M,1,N),ZERO)
        ELSE
          VQ(M,1,N) = VQ(M,1,N) + HB*MAX(VN(M,1,N),ZERO)
     &      - HP*MAX(-VN(M,1,N),ZERO)
        ENDIF 
      ENDDO
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THNS_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THNT_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a top boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THNT_EOR'
      DO M = 1,ISVF
        MN = MNEG(M)
        HP = HN(MN,N)*RHON(MN,N)
        HB = HNB(MN,NB)*RHONB(MN,NB)
!
!---    Energy inflow boundary condition  ---
!
        IF( IBCT(IEQT,NB).EQ.5 ) THEN
          WQ(M,2,N) = WQ(M,2,N) - HB*MAX(-WN(M,2,N),ZERO)
!
!---    Energy outflow boundary condition  ---
!
        ELSEIF( IBCT(IEQT,NB).EQ.6 ) THEN
          WQ(M,2,N) = WQ(M,2,N) + HP*MAX(WN(M,2,N),ZERO)
        ELSE
          WQ(M,2,N) = WQ(M,2,N) + HP*MAX(WN(M,2,N),ZERO)
     &      - HB*MAX(-WN(M,2,N),ZERO)
        ENDIF 
      ENDDO
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THNT_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THNW_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a west boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THNW_EOR'
      DO M = 1,ISVF
        MP = MPOS(M)
        HP = HN(MP,N)*RHON(MP,N)
        HB = HNB(MP,NB)*RHONB(MP,NB)
!
!---    Energy inflow boundary condition  ---
!
        IF( IBCT(IEQT,NB).EQ.5 ) THEN
          UQ(M,1,N) = UQ(M,1,N) + HB*MAX(UN(M,1,N),ZERO)
!
!---    Energy outflow boundary condition  ---
!
        ELSEIF( IBCT(IEQT,NB).EQ.6 ) THEN
          UQ(M,1,N) = UQ(M,1,N) - HP*MAX(-UN(M,1,N),ZERO)
        ELSE
          UQ(M,1,N) = UQ(M,1,N) + HB*MAX(UN(M,1,N),ZERO)
     &      - HP*MAX(-UN(M,1,N),ZERO)
        ENDIF 
      ENDDO
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THNW_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THDB_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by thermal conduction
!     on a bottom boundary, using the effective thermal conductivity
!     of the adjacent node.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THDB_EOR'
      DTK = TB(2,NB)-T(2,N)
!
!---  Parallel function  ---
!
      IF( ITHK(N).EQ.2 ) THEN
        DO M = 1,ISVF
          MP = MPOS(M)
          TKP = MAX(1.D+0-PORD(MP,N),0.D+0)*THKS(3,N) 
     &      + PORD(MP,N)*(THKL(MP,N)*SL(MP,N) 
     &      + THKN(MP,N)*SN(MP,N) + THKG(MP,N)*SG(MP,N))
          INDX = 1
          WQ(M,1,N) = TKP*(TB(MP,NB)-T(MP,N))/(5.D-1*DZGF(N))
        ENDDO
!
!---  Somerton function  ---
!
      ELSEIF( ITHK(N).EQ.4 ) THEN
        DO M = 1,ISVF
          MP = MPOS(M)
          TKP = THKS(3,N) 
     &      + SQRT(SL(MP,N))*(THKS(6,N)-THKS(3,N))
          INDX = 1
          WQ(M,1,N) = 2.D+0*TKP*(TB(MP,NB)-T(MP,N))/DZGF(N)
        ENDDO
      ENDIF
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THDB_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THDE_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by thermal conduction
!     on a east boundary, using the effective thermal conductivity
!     of the adjacent node.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THDE_EOR'
      DTK = T(2,N)-TB(2,NB)
!
!---  Parallel function  ---
!
      IF( ITHK(N).EQ.2 ) THEN
        DO M = 1,ISVF
          MN = MNEG(M)
          TKP = MAX(1.D+0-PORD(MN,N),0.D+0)*THKS(1,N) 
     &      + PORD(MN,N)*(THKL(MN,N)*SL(MN,N) 
     &      + THKN(MN,N)*SN(MN,N) + THKG(MN,N)*SG(MN,N))
          INDX = 1
          UQ(M,2,N) = TKP*(T(MN,N)-TB(MN,NB))/(5.D-1*DXGF(N))
        ENDDO
!
!---  Somerton function  ---
!
      ELSEIF( ITHK(N).EQ.4 ) THEN
        DO M = 1,ISVF
          MN = MNEG(M)
          TKP = THKS(1,N) 
     &      + SQRT(SL(MN,N))*(THKS(4,N)-THKS(1,N))
          INDX = 1
          UQ(M,2,N) = 2.D+0*TKP*(T(MN,N)-TB(MN,NB))/DXGF(N)
        ENDDO
      ENDIF
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THDE_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THDN_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by thermal conduction
!     on a north boundary, using the effective thermal conductivity
!     of the adjacent node.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THDN_EOR'
      DTK = T(2,N)-TB(2,NB)
!
!---  Parallel function  ---
!
      IF( ITHK(N).EQ.2 ) THEN
        DO M = 1,ISVF
          MN = MNEG(M)
          TKP = MAX(1.D+0-PORD(MN,N),0.D+0)*THKS(2,N) 
     &      + PORD(MN,N)*(THKL(MN,N)*SL(MN,N)
     &      + THKN(MN,N)*SN(MN,N) + THKG(MN,N)*SG(MN,N))
          INDX = 1
          VQ(M,2,N) = TKP*(T(MN,N)-TB(MN,NB))/((5.D-1*DYGF(N))*RP(N))
        ENDDO
!
!---  Somerton function  ---
!
      ELSEIF( ITHK(N).EQ.4 ) THEN
        DO M = 1,ISVF
          MN = MNEG(M)
          TKP = THKS(2,N) 
     &      + SQRT(SL(MN,N))*(THKS(5,N)-THKS(2,N))
          INDX = 1
          VQ(M,2,N) = TKP*(T(MN,N)-TB(MN,NB))/((5.D-1*DYGF(N))*RP(N))
        ENDDO
      ENDIF
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THDN_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THDS_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by thermal conduction
!     on a south boundary, using the effective thermal conductivity
!     of the adjacent node.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THDS_EOR'
      DTK = TB(2,NB)-T(2,N)
!
!---  Parallel function  ---
!
      IF( ITHK(N).EQ.2 ) THEN
        DO M = 1,ISVF
          MP = MPOS(M)
          TKP = MAX(1.D+0-PORD(MP,N),0.D+0)*THKS(2,N) 
     &      + PORD(MP,N)*(THKL(MP,N)*SL(MP,N)
     &      + THKN(MP,N)*SN(MP,N) + THKG(MP,N)*SG(MP,N))
          INDX = 1
          VQ(M,1,N) = TKP*(TB(MP,NB)-T(MP,N))/((5.D-1*DYGF(N))*RP(N))
        ENDDO
!
!---  Somerton function  ---
!
      ELSEIF( ITHK(N).EQ.4 ) THEN
        DO M = 1,ISVF
          MP = MPOS(M)
          TKP = THKS(2,N) 
     &      + SQRT(SL(MP,N))*(THKS(5,N)-THKS(2,N))
          INDX = 1
          VQ(M,1,N) = TKP*(TB(MP,NB)-T(MP,N))/((5.D-1*DYGF(N))*RP(N))
        ENDDO
      ENDIF
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THDS_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THDT_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by thermal conduction
!     on a top boundary, using the effective thermal conductivity
!     of the adjacent node.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THDT_EOR'
      DTK = T(2,N)-TB(2,NB)
!
!---  Parallel function  ---
!
      IF( ITHK(N).EQ.2 ) THEN
        DO M = 1,ISVF
          MN = MNEG(M)
          TKP = MAX(1.D+0-PORD(MN,N),0.D+0)*THKS(3,N) 
     &      + PORD(MN,N)*(THKL(MN,N)*SL(MN,N)
     &      + THKN(MN,N)*SN(MN,N)  + THKG(MN,N)*SG(MN,N))
          INDX = 1
          WQ(M,2,N) = TKP*(T(MN,N)-TB(MN,NB))/(5.D-1*DZGF(N))
        ENDDO
!
!---  Somerton function  ---
!
      ELSEIF( ITHK(N).EQ.4 ) THEN
        DO M = 1,ISVF
          MN = MNEG(M)
          TKP = THKS(3,N) 
     &      + SQRT(SL(MN,N))*(THKS(6,N)-THKS(3,N))
          INDX = 1
          WQ(M,2,N) = TKP*(T(MN,N)-TB(MN,NB))/(5.D-1*DZGF(N))
        ENDDO
      ENDIF
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THDT_EOR group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THDW_EOR( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by thermal conduction
!     on a west boundary, using the effective thermal conductivity
!     of the adjacent node.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 30 November 2022
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      ISUB_LOG = ISUB_LOG+1
      SUB_LOG(ISUB_LOG) = '/THDW_EOR'
      DTK = TB(2,NB)-T(2,N)
!
!---  Parallel function  ---
!
      IF( ITHK(N).EQ.2 ) THEN
        DO M = 1,ISVF
          MP = MPOS(M)
          TKP = MAX(1.D+0-PORD(MP,N),0.D+0)*THKS(1,N) 
     &      + PORD(MP,N)*(THKL(MP,N)*SL(MP,N)
     &      + THKN(MP,N)*SN(MP,N) + THKG(MP,N)*SG(MP,N))
          INDX = 1
          UQ(M,1,N) = TKP*(TB(MP,NB)-T(MP,N))/(5.D-1*DXGF(N))
        ENDDO
!
!---  Somerton function  ---
!
      ELSEIF( ITHK(N).EQ.4 ) THEN
        DO M = 1,ISVF
          MP = MPOS(M)
          TKP = THKS(1,N) 
     &      + SQRT(SL(MP,N))*(THKS(4,N)-THKS(1,N))
          INDX = 1
           UQ(M,1,N) = TKP*(TB(MP,NB)-T(MP,N))/(5.D-1*DXGF(N))
        ENDDO
      ENDIF
      ISUB_LOG = ISUB_LOG-1
!
!---  End of THDW_EOR group  ---
!
      RETURN
      END

