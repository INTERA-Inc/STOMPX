!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGAB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 gas fluxes on a bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGA = XMGAB(2,NB) - XMGA(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FGAP = XGA(MP,N)*RHOG(MP,N)
        FGAB = XGAB(MP,NB)*RHOGB(MP,NB)
        INDX = 3
        FGA = DIFMN( FGAB,FGAP,DZGF(N),DZGF(N),WG(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WG(1,1,N).LT.-EPSL ) THEN
            WGA(M,1,N) = WG(M,1,N)*FGA
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WG(1,1,N).GT.EPSL ) THEN
            WGA(M,1,N) = WG(M,1,N)*FGA
          ENDIF
        ELSE
          DFP = TORG(MP,N)*PORD(MP,N)*SG(MP,N)*DFGA(MP,N)
     &      *RHOMG(MP,N)
          DFB = TORGB(MP,NB)*PORDB(MP,NB)*SGB(MP,NB)*DFGAB(MP,NB)
     &      *RHOMGB(MP,NB)
          INDX = 12
          DFM = DIFMN( DFB,DFP,DZGF(N),DZGF(N),DXMGA,INDX )
          WDGA(M,1,N) = 2.D+0*DFM*(XMGAB(MP,NB)-XMGA(MP,N))/DZGF(N)
          WGA(M,1,N) = WG(M,1,N)*FGA + WTMA*WDGA(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFGAB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGAE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 gas fluxes on an east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGA = XMGA(2,N) - XMGAB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FGAP = XGA(MN,N)*RHOG(MN,N)
        FGAB = XGAB(MN,NB)*RHOGB(MN,NB)
        INDX = 3
        FGA = DIFMN( FGAP,FGAB,DXGF(N),DXGF(N),UG(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UG(1,2,N).GT.EPSL ) THEN
            UGA(M,2,N) = UG(M,2,N)*FGA
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UG(1,2,N).LT.-EPSL ) THEN
            UGA(M,2,N) = UG(M,2,N)*FGA
          ENDIF
        ELSE
          DFP = TORG(MN,N)*PORD(MN,N)*SG(MN,N)*DFGA(MN,N)
     &      *RHOMG(MN,N)
          DFB = TORGB(MN,NB)*PORDB(MN,NB)*SGB(MN,NB)*DFGAB(MN,NB)
     &      *RHOMGB(MN,NB)
          INDX = 12
          DFM = DIFMN( DFP,DFB,DXGF(N),DXGF(N),DXMGA,INDX )
          UDGA(M,2,N) = 2.D+0*DFM*(XMGA(MN,N)-XMGAB(MN,NB))/DXGF(N)
          UGA(M,2,N) = UG(M,2,N)*FGA + WTMA*UDGA(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFGAE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGAN( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 gas fluxes on a north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGA = XMGA(2,N) - XMGAB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FGAP = XGA(MN,N)*RHOG(MN,N)
        FGAB = XGAB(MN,NB)*RHOGB(MN,NB)
        INDX = 3
        FGA = DIFMN( FGAP,FGAB,DYGF(N),DYGF(N),VG(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VG(1,2,N).GT.EPSL ) THEN
            VGA(M,2,N) = VG(M,2,N)*FGA
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VG(1,2,N).LT.-EPSL ) THEN
            VGA(M,2,N) = VG(M,2,N)*FGA
          ENDIF
        ELSE
          DFP = TORG(MN,N)*PORD(MN,N)*SG(MN,N)*DFGA(MN,N)
     &      *RHOMG(MN,N)
          DFB = TORGB(MN,NB)*PORDB(MN,NB)*SGB(MN,NB)*DFGAB(MN,NB)
     &      *RHOMGB(MN,NB)
          INDX = 12
          DFM = DIFMN( DFP,DFB,DYGF(N),DYGF(N),DXMGA,INDX )
          VDGA(M,2,N) = 2.D+0*DFM*(XMGA(MN,N)-XMGAB(MN,NB))
     &      /(DYGF(N)*RP(N))
          VGA(M,2,N) = VG(M,2,N)*FGA + WTMA*VDGA(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFGAN group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGAS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 gas fluxes on a south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGA = XMGAB(2,NB) - XMGA(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FGAP = XGA(MP,N)*RHOG(MP,N)
        FGAB = XGAB(MP,NB)*RHOGB(MP,NB)
        INDX = 3
        FGA = DIFMN( FGAB,FGAP,DYGF(N),DYGF(N),VG(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VG(1,1,N).LT.-EPSL ) THEN
            VGA(M,1,N) = VG(M,1,N)*FGA
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VG(1,1,N).GT.EPSL ) THEN
            VGA(M,1,N) = VG(M,1,N)*FGA
          ENDIF
        ELSE
          DFP = TORG(MP,N)*PORD(MP,N)*SG(MP,N)*DFGA(MP,N)
     &      *RHOMG(MP,N)
          DFB = TORGB(MP,NB)*PORDB(MP,NB)*SGB(MP,NB)*DFGAB(MP,NB)
     &      *RHOMGB(MP,NB)
          INDX = 12
          DFM = DIFMN( DFB,DFP,DYGF(N),DYGF(N),DXMGA,INDX )
          VDGA(M,1,N) = 2.D+0*DFM*(XMGAB(MP,NB)-XMGA(MP,N))
     &      /(DYGF(N)*RP(N))
          VGA(M,1,N) = VG(M,1,N)*FGA + WTMA*VDGA(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFGAS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGAT( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 gas fluxes on a top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGA = XMGA(2,N)-XMGAB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FGAP = XGA(MN,N)*RHOG(MN,N)
        FGAB = XGAB(MN,NB)*RHOGB(MN,NB)
        INDX = 3
        FGA = DIFMN( FGAP,FGAB,DZGF(N),DZGF(N),WG(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WG(1,2,N).GT.EPSL ) THEN
            WGA(M,2,N) = WG(M,2,N)*FGA
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WG(1,2,N).LT.-EPSL ) THEN
            WGA(M,2,N) = WG(M,2,N)*FGA
          ENDIF
        ELSE
          DFP = TORG(MN,N)*PORD(MN,N)*SG(MN,N)*DFGA(MN,N)
     &      *RHOMG(MN,N)
          DFB = TORGB(MN,NB)*PORDB(MN,NB)*SGB(MN,NB)*DFGAB(MN,NB)
     &      *RHOMGB(MN,NB)
          INDX = 12
          DFM = DIFMN( DFP,DFB,DZGF(N),DZGF(N),DXMGA,INDX )
          WDGA(M,2,N) = 2.D+0*DFM*(XMGA(MN,N)-XMGAB(MN,NB))/DZGF(N)
          WGA(M,2,N) = WG(M,2,N)*FGA + WTMA*WDGA(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFGAT group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGAW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 gas fluxes on a west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGA = XMGAB(2,NB)-XMGA(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FGAP = XGA(MP,N)*RHOG(MP,N)
        FGAB = XGAB(MP,NB)*RHOGB(MP,NB)
        INDX = 3
        FGA = DIFMN( FGAB,FGAP,DXGF(N),DXGF(N),UG(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UG(1,1,N).LT.-EPSL ) THEN
            UGA(M,1,N) = UG(M,1,N)*FGA
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UG(1,1,N).GT.EPSL ) THEN
            UGA(M,1,N) = UG(M,1,N)*FGA
          ENDIF
        ELSE
          DFP = TORG(MP,N)*PORD(MP,N)*SG(MP,N)*DFGA(MP,N)
     &      *RHOMG(MP,N)
          DFB = TORGB(MP,NB)*PORDB(MP,NB)*SGB(MP,NB)*DFGAB(MP,NB)
     &      *RHOMGB(MP,NB)
          INDX = 12
          DFM = DIFMN( DFB,DFP,DXGF(N),DXGF(N),DXMGA,INDX )
          UDGA(M,1,N) = 2.D+0*DFM*(XMGAB(MP,NB)-XMGA(MP,N))/DXGF(N)
          UGA(M,1,N) = UG(M,1,N)*FGA + WTMA*UDGA(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFGAW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGNB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive N2 gas fluxes on a bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGN = XMGNB(2,NB) - XMGN(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FGNP = XGN(MP,N)*RHOG(MP,N)
        FGNB = XGNB(MP,NB)*RHOGB(MP,NB)
        INDX = 3
        FGN = DIFMN( FGNB,FGNP,DZGF(N),DZGF(N),WG(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WG(1,1,N).LT.-EPSL ) THEN
            WGN(M,1,N) = WG(M,1,N)*FGN
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WG(1,1,N).GT.EPSL ) THEN
            WGN(M,1,N) = WG(M,1,N)*FGN
          ENDIF
        ELSE
          DFP = TORG(MP,N)*PORD(MP,N)*SG(MP,N)*DFGN(MP,N)
     &      *RHOMG(MP,N)
          DFB = TORGB(MP,NB)*PORDB(MP,NB)*SGB(MP,NB)*DFGNB(MP,NB)
     &      *RHOMGB(MP,NB)
          INDX = 12
          DFM = DIFMN( DFB,DFP,DZGF(N),DZGF(N),DXMGN,INDX )
          WDGN(M,1,N) = 2.D+0*DFM*(XMGNB(MP,NB)-XMGN(MP,N))/DZGF(N)
          WGN(M,1,N) = WG(M,1,N)*FGN + WTMN*WDGN(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFGNB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGNE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive N2 gas fluxes on an east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGN = XMGN(2,N) - XMGNB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FGNP = XGN(MN,N)*RHOG(MN,N)
        FGNB = XGNB(MN,NB)*RHOGB(MN,NB)
        INDX = 3
        FGN = DIFMN( FGNP,FGNB,DXGF(N),DXGF(N),UG(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UG(1,2,N).GT.EPSL ) THEN
            UGN(M,2,N) = UG(M,2,N)*FGN
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UG(1,2,N).LT.-EPSL ) THEN
            UGN(M,2,N) = UG(M,2,N)*FGN
          ENDIF
        ELSE
          DFP = TORG(MN,N)*PORD(MN,N)*SG(MN,N)*DFGN(MN,N)
     &      *RHOMG(MN,N)
          DFB = TORGB(MN,NB)*PORDB(MN,NB)*SGB(MN,NB)*DFGNB(MN,NB)
     &      *RHOMGB(MN,NB)
          INDX = 12
          DFM = DIFMN( DFP,DFB,DXGF(N),DXGF(N),DXMGN,INDX )
          UDGN(M,2,N) = 2.D+0*DFM*(XMGN(MN,N)-XMGNB(MN,NB))/DXGF(N)
          UGN(M,2,N) = UG(M,2,N)*FGN + WTMN*UDGN(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFGNE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGNN( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive N2 gas fluxes on a north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGN = XMGN(2,N) - XMGNB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FGNP = XGN(MN,N)*RHOG(MN,N)
        FGNB = XGNB(MN,NB)*RHOGB(MN,NB)
        INDX = 3
        FGN = DIFMN( FGNP,FGNB,DYGF(N),DYGF(N),VG(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VG(1,2,N).GT.EPSL ) THEN
            VGN(M,2,N) = VG(M,2,N)*FGN
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VG(1,2,N).LT.-EPSL ) THEN
            VGN(M,2,N) = VG(M,2,N)*FGN
          ENDIF
        ELSE
          DFP = TORG(MN,N)*PORD(MN,N)*SG(MN,N)*DFGN(MN,N)
     &      *RHOMG(MN,N)
          DFB = TORGB(MN,NB)*PORDB(MN,NB)*SGB(MN,NB)*DFGNB(MN,NB)
     &      *RHOMGB(MN,NB)
          INDX = 12
          DFM = DIFMN( DFP,DFB,DYGF(N),DYGF(N),DXMGN,INDX )
          VDGN(M,2,N) = 2.D+0*DFM*(XMGN(MN,N)-XMGNB(MN,NB))
     &      /(DYGF(N)*RP(N))
          VGN(M,2,N) = VG(M,2,N)*FGN + WTMN*VDGN(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFGNN group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGNS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive N2 gas fluxes on a south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGN = XMGNB(2,NB) - XMGN(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FGNP = XGN(MP,N)*RHOG(MP,N)
        FGNB = XGNB(MP,NB)*RHOGB(MP,NB)
        INDX = 3
        FGN = DIFMN( FGNB,FGNP,DYGF(N),DYGF(N),VG(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VG(1,1,N).LT.-EPSL ) THEN
            VGN(M,1,N) = VG(M,1,N)*FGN
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VG(1,1,N).GT.EPSL ) THEN
            VGN(M,1,N) = VG(M,1,N)*FGN
          ENDIF
        ELSE
          DFP = TORG(MP,N)*PORD(MP,N)*SG(MP,N)*DFGN(MP,N)
     &      *RHOMG(MP,N)
          DFB = TORGB(MP,NB)*PORDB(MP,NB)*SGB(MP,NB)*DFGNB(MP,NB)
     &      *RHOMGB(MP,NB)
          INDX = 12
          DFM = DIFMN( DFB,DFP,DYGF(N),DYGF(N),DXMGN,INDX )
          VDGN(M,1,N) = 2.D+0*DFM*(XMGNB(MP,NB)-XMGN(MP,N))
     &      /(DYGF(N)*RP(N))
          VGN(M,1,N) = VG(M,1,N)*FGN + WTMN*VDGN(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFGNS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGNT( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive N2 gas fluxes on a top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGN = XMGN(2,N)-XMGNB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FGNP = XGN(MN,N)*RHOG(MN,N)
        FGNB = XGNB(MN,NB)*RHOGB(MN,NB)
        INDX = 3
        FGN = DIFMN( FGNP,FGNB,DZGF(N),DZGF(N),WG(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WG(1,2,N).GT.EPSL ) THEN
            WGN(M,2,N) = WG(M,2,N)*FGN
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WG(1,2,N).LT.-EPSL ) THEN
            WGN(M,2,N) = WG(M,2,N)*FGN
          ENDIF
        ELSE
          DFP = TORG(MN,N)*PORD(MN,N)*SG(MN,N)*DFGN(MN,N)
     &      *RHOMG(MN,N)
          DFB = TORGB(MN,NB)*PORDB(MN,NB)*SGB(MN,NB)*DFGNB(MN,NB)
     &      *RHOMGB(MN,NB)
          INDX = 12
          DFM = DIFMN( DFP,DFB,DZGF(N),DZGF(N),DXMGN,INDX )
          WDGN(M,2,N) = 2.D+0*DFM*(XMGN(MN,N)-XMGNB(MN,NB))/DZGF(N)
          WGN(M,2,N) = WG(M,2,N)*FGN + WTMN*WDGN(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFGNT group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGNW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive N2 gas fluxes on a west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGN = XMGNB(2,NB)-XMGN(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FGNP = XGN(MP,N)*RHOG(MP,N)
        FGNB = XGNB(MP,NB)*RHOGB(MP,NB)
        INDX = 3
        FGN = DIFMN( FGNB,FGNP,DXGF(N),DXGF(N),UG(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UG(1,1,N).LT.-EPSL ) THEN
            UGN(M,1,N) = UG(M,1,N)*FGN
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UG(1,1,N).GT.EPSL ) THEN
            UGN(M,1,N) = UG(M,1,N)*FGN
          ENDIF
        ELSE
          DFP = TORG(MP,N)*PORD(MP,N)*SG(MP,N)*DFGN(MP,N)
     &      *RHOMG(MP,N)
          DFB = TORGB(MP,NB)*PORDB(MP,NB)*SGB(MP,NB)*DFGNB(MP,NB)
     &      *RHOMGB(MP,NB)
          INDX = 12
          DFM = DIFMN( DFB,DFP,DXGF(N),DXGF(N),DXMGN,INDX )
          UDGN(M,1,N) = 2.D+0*DFM*(XMGNB(MP,NB)-XMGN(MP,N))/DXGF(N)
          UGN(M,1,N) = UG(M,1,N)*FGN + WTMN*UDGN(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFGNW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGOB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CH4 gas fluxes on a bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE NAPL
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGO = XMGOB(2,NB) - XMGO(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FGOP = XGO(MP,N)*RHOG(MP,N)
        FGOB = XGOB(MP,NB)*RHOGB(MP,NB)
        INDX = 3
        FGO = DIFMN( FGOB,FGOP,DZGF(N),DZGF(N),WG(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WG(1,1,N).LT.-EPSL ) THEN
            WGO(M,1,N) = WG(M,1,N)*FGO
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WG(1,1,N).GT.EPSL ) THEN
            WGO(M,1,N) = WG(M,1,N)*FGO
          ENDIF
        ELSE
          DFP = TORG(MP,N)*PORD(MP,N)*SG(MP,N)*DFGO(MP,N)
     &      *RHOMG(MP,N)
          DFB = TORGB(MP,NB)*PORDB(MP,NB)*SGB(MP,NB)*DFGOB(MP,NB)
     &      *RHOMGB(MP,NB)
          INDX = 12
          DFM = DIFMN( DFB,DFP,DZGF(N),DZGF(N),DXMGO,INDX )
          WDGO(M,1,N) = 2.D+0*DFM*(XMGOB(MP,NB)-XMGO(MP,N))/DZGF(N)
          WGO(M,1,N) = WG(M,1,N)*FGO + WTMO*WDGO(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFGOB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGOE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CH4 gas fluxes on an east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE NAPL
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGO = XMGO(2,N) - XMGOB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FGOP = XGO(MN,N)*RHOG(MN,N)
        FGOB = XGOB(MN,NB)*RHOGB(MN,NB)
        INDX = 3
        FGO = DIFMN( FGOP,FGOB,DXGF(N),DXGF(N),UG(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UG(1,2,N).GT.EPSL ) THEN
            UGO(M,2,N) = UG(M,2,N)*FGO
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UG(1,2,N).LT.-EPSL ) THEN
            UGO(M,2,N) = UG(M,2,N)*FGO
          ENDIF
        ELSE
          DFP = TORG(MN,N)*PORD(MN,N)*SG(MN,N)*DFGO(MN,N)
     &      *RHOMG(MN,N)
          DFB = TORGB(MN,NB)*PORDB(MN,NB)*SGB(MN,NB)*DFGOB(MN,NB)
     &      *RHOMGB(MN,NB)
          INDX = 12
          DFM = DIFMN( DFP,DFB,DXGF(N),DXGF(N),DXMGO,INDX )
          UDGO(M,2,N) = 2.D+0*DFM*(XMGO(MN,N)-XMGOB(MN,NB))/DXGF(N)
          UGO(M,2,N) = UG(M,2,N)*FGO + WTMO*UDGO(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFGOE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGON( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CH4 gas fluxes on a north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE NAPL
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGO = XMGO(2,N) - XMGOB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FGOP = XGO(MN,N)*RHOG(MN,N)
        FGOB = XGOB(MN,NB)*RHOGB(MN,NB)
        INDX = 3
        FGO = DIFMN( FGOP,FGOB,DYGF(N),DYGF(N),VG(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VG(1,2,N).GT.EPSL ) THEN
            VGO(M,2,N) = VG(M,2,N)*FGO
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VG(1,2,N).LT.-EPSL ) THEN
            VGO(M,2,N) = VG(M,2,N)*FGO
          ENDIF
        ELSE
          DFP = TORG(MN,N)*PORD(MN,N)*SG(MN,N)*DFGO(MN,N)
     &      *RHOMG(MN,N)
          DFB = TORGB(MN,NB)*PORDB(MN,NB)*SGB(MN,NB)*DFGOB(MN,NB)
     &      *RHOMGB(MN,NB)
          INDX = 12
          DFM = DIFMN( DFP,DFB,DYGF(N),DYGF(N),DXMGO,INDX )
          VDGO(M,2,N) = 2.D+0*DFM*(XMGO(MN,N)-XMGOB(MN,NB))
     &      /(DYGF(N)*RP(N))
          VGO(M,2,N) = VG(M,2,N)*FGO + WTMO*VDGO(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFGON group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGOS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CH4 gas fluxes on a south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE NAPL
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGO = XMGOB(2,NB) - XMGO(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FGOP = XGO(MP,N)*RHOG(MP,N)
        FGOB = XGOB(MP,NB)*RHOGB(MP,NB)
        INDX = 3
        FGO = DIFMN( FGOB,FGOP,DYGF(N),DYGF(N),VG(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VG(1,1,N).LT.-EPSL ) THEN
            VGO(M,1,N) = VG(M,1,N)*FGO
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VG(1,1,N).GT.EPSL ) THEN
            VGO(M,1,N) = VG(M,1,N)*FGO
          ENDIF
        ELSE
          DFP = TORG(MP,N)*PORD(MP,N)*SG(MP,N)*DFGO(MP,N)
     &      *RHOMG(MP,N)
          DFB = TORGB(MP,NB)*PORDB(MP,NB)*SGB(MP,NB)*DFGOB(MP,NB)
     &      *RHOMGB(MP,NB)
          INDX = 12
          DFM = DIFMN( DFB,DFP,DYGF(N),DYGF(N),DXMGO,INDX )
          VDGO(M,1,N) = 2.D+0*DFM*(XMGOB(MP,NB)-XMGO(MP,N))
     &      /(DYGF(N)*RP(N))
          VGO(M,1,N) = VG(M,1,N)*FGO + WTMO*VDGO(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFGOS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGOT( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CH4 gas fluxes on a top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE NAPL
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGO = XMGO(2,N)-XMGOB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FGOP = XGO(MN,N)*RHOG(MN,N)
        FGOB = XGOB(MN,NB)*RHOGB(MN,NB)
        INDX = 3
        FGO = DIFMN( FGOP,FGOB,DZGF(N),DZGF(N),WG(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WG(1,2,N).GT.EPSL ) THEN
            WGO(M,2,N) = WG(M,2,N)*FGO
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WG(1,2,N).LT.-EPSL ) THEN
            WGO(M,2,N) = WG(M,2,N)*FGO
          ENDIF
        ELSE
          DFP = TORG(MN,N)*PORD(MN,N)*SG(MN,N)*DFGO(MN,N)
     &      *RHOMG(MN,N)
          DFB = TORGB(MN,NB)*PORDB(MN,NB)*SGB(MN,NB)*DFGOB(MN,NB)
     &      *RHOMGB(MN,NB)
          INDX = 12
          DFM = DIFMN( DFP,DFB,DZGF(N),DZGF(N),DXMGO,INDX )
          WDGO(M,2,N) = 2.D+0*DFM*(XMGO(MN,N)-XMGOB(MN,NB))/DZGF(N)
          WGO(M,2,N) = WG(M,2,N)*FGO + WTMO*WDGO(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFGOT group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGOW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CH4 gas fluxes on a west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE NAPL
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGO = XMGOB(2,NB)-XMGO(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FGOP = XGO(MP,N)*RHOG(MP,N)
        FGOB = XGOB(MP,NB)*RHOGB(MP,NB)
        INDX = 3
        FGO = DIFMN( FGOB,FGOP,DXGF(N),DXGF(N),UG(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UG(1,1,N).LT.-EPSL ) THEN
            UGO(M,1,N) = UG(M,1,N)*FGO
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UG(1,1,N).GT.EPSL ) THEN
            UGO(M,1,N) = UG(M,1,N)*FGO
          ENDIF
        ELSE
          DFP = TORG(MP,N)*PORD(MP,N)*SG(MP,N)*DFGO(MP,N)
     &      *RHOMG(MP,N)
          DFB = TORGB(MP,NB)*PORDB(MP,NB)*SGB(MP,NB)*DFGOB(MP,NB)
     &      *RHOMGB(MP,NB)
          INDX = 12
          DFM = DIFMN( DFB,DFP,DXGF(N),DXGF(N),DXMGO,INDX )
          UDGO(M,1,N) = 2.D+0*DFM*(XMGOB(MP,NB)-XMGO(MP,N))/DXGF(N)
          UGO(M,1,N) = UG(M,1,N)*FGO + WTMO*UDGO(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFGOW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGWB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water gas fluxes on bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGW = XMGWB(2,NB) - XMGW(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FGWB = XGWB(MP,NB)*RHOGB(MP,NB)
        FGWP = XGW(MP,N)*RHOG(MP,N)
        INDX = 3
        FGW = DIFMN( FGWB,FGWP,DZGF(N),DZGF(N),WG(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WG(1,1,N).LT.-EPSL ) THEN
            WGW(M,1,N) = WG(M,1,N)*FGW
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WG(1,1,N).GT.EPSL ) THEN
            WGW(M,1,N) = WG(M,1,N)*FGW
          ENDIF
        ELSE
          DFP = TORG(MP,N)*PORD(MP,N)*SG(MP,N)*DFGW(MP,N)
     &      *RHOMG(MP,N)
          DFB = TORGB(MP,NB)*PORDB(MP,NB)*SGB(MP,NB)*DFGWB(MP,NB)
     &      *RHOMGB(MP,NB)
          INDX = 12
          DFM = DIFMN( DFB,DFP,DZGF(N),DZGF(N),DXMGW,INDX )
          WDGW(M,1,N) = 2.D+0*DFM*(XMGWB(MP,NB)-XMGW(MP,N))/DZGF(N)
          WGW(M,1,N) = WG(M,1,N)*FGW + WTMW*WDGW(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFGWB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGWE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water gas fluxes on east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGW = XMGW(2,N) - XMGWB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FGWB = XGWB(MN,NB)*RHOGB(MN,NB)
        FGWP = XGW(MN,N)*RHOG(MN,N)
        INDX = 3
        FGW = DIFMN( FGWP,FGWB,DXGF(N),DXGF(N),UG(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UG(1,2,N).GT.EPSL ) THEN
            UGW(M,2,N) = UG(M,2,N)*FGW
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UG(1,2,N).LT.-EPSL ) THEN
            UGW(M,2,N) = UG(M,2,N)*FGW
          ENDIF
        ELSE
          DFP = TORG(MN,N)*PORD(MN,N)*SG(MN,N)*DFGW(MN,N)
     &      *RHOMG(MN,N)
          DFB = TORGB(MN,NB)*PORDB(MN,NB)*SGB(MN,NB)*DFGWB(MN,NB)
     &      *RHOMGB(MN,NB)
          INDX = 12
          DFM = DIFMN( DFP,DFB,DXGF(N),DXGF(N),DXMGW,INDX )
          UDGW(M,2,N) = 2.D+0*DFM*(XMGW(MN,N)-XMGWB(MN,NB))/DXGF(N)
          UGW(M,2,N) = UG(M,2,N)*FGW + WTMW*UDGW(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFGWE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGWN( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water gas fluxes on north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGW = XMGW(2,N) - XMGWB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FGWB = XGWB(MN,NB)*RHOGB(MN,NB)
        FGWP = XGW(MN,N)*RHOG(MN,N)
        INDX = 3
        FGW = DIFMN( FGWP,FGWB,DYGF(N),DYGF(N),VG(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VG(1,2,N).GT.EPSL ) THEN
            VGW(M,2,N) = VG(M,2,N)*FGW
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VG(1,2,N).LT.-EPSL ) THEN
            VGW(M,2,N) = VG(M,2,N)*FGW
          ENDIF
        ELSE
          DFP = TORG(MN,N)*PORD(MN,N)*SG(MN,N)*DFGW(MN,N)
     &      *RHOMG(MN,N)
          DFB = TORGB(MN,NB)*PORDB(MN,NB)*SGB(MN,NB)*DFGWB(MN,NB)
     &      *RHOMGB(MN,NB)
          INDX = 12
          DFM = DIFMN( DFP,DFB,DYGF(N),DYGF(N),DXMGW,INDX )
          VDGW(M,2,N) = 2.D+0*DFM*(XMGW(MN,N)-XMGWB(MN,NB))
     &      /(DYGF(N)*RP(N))
          VGW(M,2,N) = VG(M,2,N)*FGW + WTMW*VDGW(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFGWN group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGWS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water gas fluxes on south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGW = XMGWB(2,NB) - XMGW(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FGWB = XGWB(MP,NB)*RHOGB(MP,NB)
        FGWP = XGW(MP,N)*RHOG(MP,N)
        INDX = 3
        FGW = DIFMN( FGWB,FGWP,DYGF(N),DYGF(N),VG(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VG(1,1,N).LT.-EPSL ) THEN
            VGW(M,1,N) = VG(M,1,N)*FGW
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VG(1,1,N).GT.EPSL ) THEN
            VGW(M,1,N) = VG(M,1,N)*FGW
          ENDIF
        ELSE
          DFP = TORG(MP,N)*PORD(MP,N)*SG(MP,N)*DFGW(MP,N)
     &      *RHOMG(MP,N)
          DFB = TORGB(MP,NB)*PORDB(MP,NB)*SGB(MP,NB)*DFGWB(MP,NB)
     &      *RHOMGB(MP,NB)
          INDX = 12
          DFM = DIFMN( DFB,DFP,DYGF(N),DYGF(N),DXMGW,INDX )
          VDGW(M,1,N) = 2.D+0*DFM*(XMGWB(MP,NB)-XMGW(MP,N))
     &      /(DYGF(N)*RP(N))
          VGW(M,1,N) = VG(M,1,N)*FGW + WTMW*VDGW(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFGWS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGWT( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water gas fluxes on top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGW = XMGW(2,N)-XMGWB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FGWB = XGWB(MN,NB)*RHOGB(MN,NB)
        FGWP = XGW(MN,N)*RHOG(MN,N)
        INDX = 3
        FGW = DIFMN( FGWP,FGWB,DZGF(N),DZGF(N),WG(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WG(1,2,N).GT.EPSL ) THEN
            WGW(M,2,N) = WG(M,2,N)*FGW
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WG(1,2,N).LT.-EPSL ) THEN
            WGW(M,2,N) = WG(M,2,N)*FGW
          ENDIF
        ELSE
          DFP = TORG(MN,N)*PORD(MN,N)*SG(MN,N)*DFGW(MN,N)
     &      *RHOMG(MN,N)
          DFB = TORGB(MN,NB)*PORDB(MN,NB)*SGB(MN,NB)*DFGWB(MN,NB)
     &      *RHOMGB(MN,NB)
          INDX = 12
          DFM = DIFMN( DFP,DFB,DZGF(N),DZGF(N),DXMGW,INDX )
          WDGW(M,2,N) = 2.D+0*DFM*(XMGW(MN,N)-XMGWB(MN,NB))/DZGF(N)
          WGW(M,2,N) = WG(M,2,N)*FGW + WTMW*WDGW(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFGWT group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFGWW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water gas fluxes on west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMGW = XMGWB(2,NB)-XMGW(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FGWB = XGWB(MP,NB)*RHOGB(MP,NB)
        FGWP = XGW(MP,N)*RHOG(MP,N)
        INDX = 3
        FGW = DIFMN( FGWB,FGWP,DXGF(N),DXGF(N),UG(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UG(1,1,N).LT.-EPSL ) THEN
            UGW(M,1,N) = UG(M,1,N)*FGW
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UG(1,1,N).GT.EPSL ) THEN
            UGW(M,1,N) = UG(M,1,N)*FGW
          ENDIF
        ELSE
          DFP = TORG(MP,N)*PORD(MP,N)*SG(MP,N)*DFGW(MP,N)
     &      *RHOMG(MP,N)
          DFB = TORGB(MP,NB)*PORDB(MP,NB)*SGB(MP,NB)*DFGWB(MP,NB)
     &      *RHOMGB(MP,NB)
          INDX = 12
          DFM = DIFMN( DFB,DFP,DXGF(N),DXGF(N),DXMGW,INDX )
          UDGW(M,1,N) = 2.D+0*DFM*(XMGWB(MP,NB)-XMGW(MP,N))/DXGF(N)
          UGW(M,1,N) = UG(M,1,N)*FGW + WTMW*UDGW(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFGWW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLAB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 aqueous fluxes on a bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DXMLA = XMLAB(2,NB) - XMLA(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FLAP = XLA(MP,N)*RHOL(MP,N)
        FLAB = XLAB(MP,NB)*RHOLB(MP,NB)
        INDX = 2
        FLA = DIFMN( FLAB,FLAP,DZGF(N),DZGF(N),WL(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WL(1,1,N).LT.-EPSL ) THEN
            WLA(M,1,N) = WL(M,1,N)*FLA
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WL(1,1,N).GT.EPSL ) THEN
            WLA(M,1,N) = WL(M,1,N)*FLA
          ENDIF
        ELSE
          DFP = TORL(MP,N)*PORD(MP,N)*SL(MP,N)*DFLA(MP,N)
     &      *RHOML(MP,N)
          DFB = TORLB(MP,NB)*PORDB(MP,NB)*SLB(MP,NB)*DFLAB(MP,NB)
     &      *RHOMLB(MP,NB)
          INDX = 14
          DFM = DIFMN( DFB,DFP,DZGF(N),DZGF(N),DXMLA,INDX )
          WDLA(M,1,N) = 2.D+0*DFM*(XMLAB(MP,NB)-XMLA(MP,N))/DZGF(N)
          WLA(M,1,N) = WL(M,1,N)*FLA + WTMA*WDLA(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFLAB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLAE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 aqueous flux on an east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DXMLA = XMLA(2,N) - XMLAB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FLAP = XLA(MN,N)*RHOL(MN,N)
        FLAB = XLAB(MN,NB)*RHOLB(MN,NB)
        INDX = 2
        FLA = DIFMN( FLAP,FLAB,DXGF(N),DXGF(N),UL(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UL(1,2,N).GT.EPSL ) THEN
            ULA(M,2,N) = UL(M,2,N)*FLA
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UL(1,2,N).LT.-EPSL ) THEN
            ULA(M,2,N) = UL(M,2,N)*FLA
          ENDIF
        ELSE
          DFP = TORL(MN,N)*PORD(MN,N)*SL(MN,N)*DFLA(MN,N)
     &      *RHOML(MN,N)
          DFB = TORLB(MN,NB)*PORDB(MN,NB)*SLB(MN,NB)*DFLAB(MN,NB)
     &      *RHOMLB(MN,NB)
          INDX = 14
          DFM = DIFMN( DFP,DFB,DXGF(N),DXGF(N),DXMLA,INDX )
          UDLA(M,2,N) = 2.D+0*DFM*(XMLA(MN,N)-XMLAB(MN,NB))/DXGF(N)
          ULA(M,2,N) = UL(M,2,N)*FLA + WTMA*UDLA(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFLAE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLAN( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 aqueous fluxes on a north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DXMLA = XMLA(2,N) - XMLAB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FLAP = XLA(MN,N)*RHOL(MN,N)
        FLAB = XLAB(MN,NB)*RHOLB(MN,NB)
        INDX = 2
        FLA = DIFMN( FLAP,FLAB,DYGF(N),DYGF(N),VL(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VL(1,2,N).GT.EPSL ) THEN
            VLA(M,2,N) = VL(M,2,N)*FLA
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VL(1,2,N).LT.-EPSL ) THEN
            VLA(M,2,N) = VL(M,2,N)*FLA
          ENDIF
        ELSE
          DFP = TORL(MN,N)*PORD(MN,N)*SL(MN,N)*DFLA(MN,N)
     &      *RHOML(MN,N)
          DFB = TORLB(MN,NB)*PORDB(MN,NB)*SLB(MN,NB)*DFLAB(MN,NB)
     &      *RHOMLB(MN,NB)
          INDX = 14
          DFM = DIFMN( DFP,DFB,DYGF(N),DYGF(N),DXMLA,INDX )
          VDLA(M,2,N) = 2.D+0*DFM*(XMLA(MN,N)-XMLAB(MN,NB))
     &      /(DYGF(N)*RP(N))
          VLA(M,2,N) = VL(M,2,N)*FLA + WTMA*VDLA(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFLAN group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLAS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 aqueous fluxes on a south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DXMLA = XMLAB(2,NB) - XMLA(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FLAP = XLA(MP,N)*RHOL(MP,N)
        FLAB = XLAB(MP,NB)*RHOLB(MP,NB)
        INDX = 2
        FLA = DIFMN( FLAB,FLAP,DYGF(N),DYGF(N),VL(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VL(1,1,N).LT.-EPSL ) THEN
            VLA(M,1,N) = VL(M,1,N)*FLA
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VL(1,1,N).GT.EPSL ) THEN
            VLA(M,1,N) = VL(M,1,N)*FLA
          ENDIF
        ELSE
          DFP = TORL(MP,N)*PORD(MP,N)*SL(MP,N)*DFLA(MP,N)
     &      *RHOML(MP,N)
          DFB = TORLB(MP,NB)*PORDB(MP,NB)*SLB(MP,NB)*DFLAB(MP,NB)
     &      *RHOMLB(MP,NB)
          INDX = 14
          DFM = DIFMN( DFB,DFP,DYGF(N),DYGF(N),DXMLA,INDX )
          VDLA(M,1,N) = 2.D+0*DFM*(XMLAB(MP,NB)-XMLA(MP,N))
     &      /(DYGF(N)*RP(N))
          VLA(M,1,N) = VL(M,1,N)*FLA + WTMA*VDLA(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFLAS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLAT( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 aqueous fluxes on a top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DXMLA = XMLA(2,N)-XMLAB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FLAP = XLA(MN,N)*RHOL(MN,N)
        FLAB = XLAB(MN,NB)*RHOLB(MN,NB)
        INDX = 2
        FLA = DIFMN( FLAP,FLAB,DZGF(N),DZGF(N),WL(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WL(1,2,N).GT.EPSL ) THEN
            WLA(M,2,N) = WL(M,2,N)*FLA
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WL(1,2,N).LT.-EPSL ) THEN
            WLA(M,2,N) = WL(M,2,N)*FLA
          ENDIF
        ELSE
          DFP = TORL(MN,N)*PORD(MN,N)*SL(MN,N)*DFLA(MN,N)
     &      *RHOML(MN,N)
          DFB = TORLB(MN,NB)*PORDB(MN,NB)*SLB(MN,NB)*DFLAB(MN,NB)
     &      *RHOMLB(MN,NB)
          INDX = 14
          DFM = DIFMN( DFP,DFB,DZGF(N),DZGF(N),DXMLA,INDX )
          WDLA(M,2,N) = 2.D+0*DFM*(XMLA(MN,N)-XMLAB(MN,NB))/DZGF(N)
          WLA(M,2,N) = WL(M,2,N)*FLA + WTMA*WDLA(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFLAT group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLAW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 aqueous fluxes on a west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DXMLA = XMLAB(2,NB)-XMLA(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FLAP = XLA(MP,N)*RHOL(MP,N)
        FLAB = XLAB(MP,NB)*RHOLB(MP,NB)
        INDX = 2
        FLA = DIFMN( FLAB,FLAP,DXGF(N),DXGF(N),UL(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UL(1,1,N).LT.-EPSL ) THEN
            ULA(M,1,N) = UL(M,1,N)*FLA
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UL(1,1,N).GT.EPSL ) THEN
            ULA(M,1,N) = UL(M,1,N)*FLA
          ENDIF
        ELSE
          DFP = TORL(MP,N)*PORD(MP,N)*SL(MP,N)*DFLA(MP,N)
     &      *RHOML(MP,N)
          DFB = TORLB(MP,NB)*PORDB(MP,NB)*SLB(MP,NB)*DFLAB(MP,NB)
     &      *RHOMLB(MP,NB)
          INDX = 14
          DFM = DIFMN( DFB,DFP,DXGF(N),DXGF(N),DXMLA,INDX )
          UDLA(M,1,N) = 2.D+0*DFM*(XMLAB(MP,NB)-XMLA(MP,N))/DXGF(N)
          ULA(M,1,N) = UL(M,1,N)*FLA + WTMA*UDLA(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFLAW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLNB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive N2 aqueous fluxes on a bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DXMLN = XMLNB(2,NB) - XMLN(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FLNP = XLN(MP,N)*RHOL(MP,N)
        FLNB = XLNB(MP,NB)*RHOLB(MP,NB)
        INDX = 2
        FLN = DIFMN( FLNB,FLNP,DZGF(N),DZGF(N),WL(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WL(1,1,N).LT.-EPSL ) THEN
            WLN(M,1,N) = WL(M,1,N)*FLN
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WL(1,1,N).GT.EPSL ) THEN
            WLN(M,1,N) = WL(M,1,N)*FLN
          ENDIF
        ELSE
          DFP = TORL(MP,N)*PORD(MP,N)*SL(MP,N)*DFLN(MP,N)
     &      *RHOML(MP,N)
          DFB = TORLB(MP,NB)*PORDB(MP,NB)*SLB(MP,NB)*DFLNB(MP,NB)
     &      *RHOMLB(MP,NB)
          INDX = 14
          DFM = DIFMN( DFB,DFP,DZGF(N),DZGF(N),DXMLN,INDX )
          WDLN(M,1,N) = 2.D+0*DFM*(XMLNB(MP,NB)-XMLN(MP,N))/DZGF(N)
          WLN(M,1,N) = WL(M,1,N)*FLN + WTMN*WDLN(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFLNB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLNE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive N2 aqueous fluxes on an east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DXMLN = XMLN(2,N) - XMLNB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FLNP = XLN(MN,N)*RHOL(MN,N)
        FLNB = XLNB(MN,NB)*RHOLB(MN,NB)
        INDX = 2
        FLN = DIFMN( FLNP,FLNB,DXGF(N),DXGF(N),UL(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UL(1,2,N).GT.EPSL ) THEN
            ULN(M,2,N) = UL(M,2,N)*FLN
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UL(1,2,N).LT.-EPSL ) THEN
            ULN(M,2,N) = UL(M,2,N)*FLN
          ENDIF
        ELSE
          DFP = TORL(MN,N)*PORD(MN,N)*SL(MN,N)*DFLN(MN,N)
     &      *RHOML(MN,N)
          DFB = TORLB(MN,NB)*PORDB(MN,NB)*SLB(MN,NB)*DFLNB(MN,NB)
     &      *RHOMLB(MN,NB)
          INDX = 14
          DFM = DIFMN( DFP,DFB,DXGF(N),DXGF(N),DXMLN,INDX )
          UDLN(M,2,N) = 2.D+0*DFM*(XMLN(MN,N)-XMLNB(MN,NB))/DXGF(N)
          ULN(M,2,N) = UL(M,2,N)*FLN + WTMN*UDLN(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFLNE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLNN( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive N2 aqueous fluxes on a north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DXMLN = XMLN(2,N) - XMLNB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FLNP = XLN(MN,N)*RHOL(MN,N)
        FLNB = XLNB(MN,NB)*RHOLB(MN,NB)
        INDX = 2
        FLN = DIFMN( FLNP,FLNB,DYGF(N),DYGF(N),VL(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VL(1,2,N).GT.EPSL ) THEN
            VLN(M,2,N) = VL(M,2,N)*FLN
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VL(1,2,N).LT.-EPSL ) THEN
            VLN(M,2,N) = VL(M,2,N)*FLN
          ENDIF
        ELSE
          DFP = TORL(MN,N)*PORD(MN,N)*SL(MN,N)*DFLN(MN,N)
     &      *RHOML(MN,N)
          DFB = TORLB(MN,NB)*PORDB(MN,NB)*SLB(MN,NB)*DFLNB(MN,NB)
     &      *RHOMLB(MN,NB)
          INDX = 14
          DFM = DIFMN( DFP,DFB,DYGF(N),DYGF(N),DXMLN,INDX )
          VDLN(M,2,N) = 2.D+0*DFM*(XMLN(MN,N)-XMLNB(MN,NB))
     &      /(DYGF(N)*RP(N))
          VLN(M,2,N) = VL(M,2,N)*FLN + WTMN*VDLN(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFLNN group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLNS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CH4 aqueous fluxes on a south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DXMLN = XMLNB(2,NB) - XMLN(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FLNP = XLN(MP,N)*RHOL(MP,N)
        FLNB = XLNB(MP,NB)*RHOLB(MP,NB)
        INDX = 2
        FLN = DIFMN( FLNB,FLNP,DYGF(N),DYGF(N),VL(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VL(1,1,N).LT.-EPSL ) THEN
            VLN(M,1,N) = VL(M,1,N)*FLN
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VL(1,1,N).GT.EPSL ) THEN
            VLN(M,1,N) = VL(M,1,N)*FLN
          ENDIF
        ELSE
          DFP = TORL(MP,N)*PORD(MP,N)*SL(MP,N)*DFLN(MP,N)
     &      *RHOML(MP,N)
          DFB = TORLB(MP,NB)*PORDB(MP,NB)*SLB(MP,NB)*DFLNB(MP,NB)
     &      *RHOMLB(MP,NB)
          INDX = 14
          DFM = DIFMN( DFB,DFP,DYGF(N),DYGF(N),DXMLN,INDX )
          VDLN(M,1,N) = 2.D+0*DFM*(XMLNB(MP,NB)-XMLN(MP,N))
     &      /(DYGF(N)*RP(N))
          VLN(M,1,N) = VL(M,1,N)*FLN + WTMN*VDLN(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFLNS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLNT( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive N2 aqueous fluxes on a top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DXMLN = XMLN(2,N)-XMLNB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FLNP = XLN(MN,N)*RHOL(MN,N)
        FLNB = XLNB(MN,NB)*RHOLB(MN,NB)
        INDX = 2
        FLN = DIFMN( FLNP,FLNB,DZGF(N),DZGF(N),WL(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WL(1,2,N).GT.EPSL ) THEN
            WLN(M,2,N) = WL(M,2,N)*FLN
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WL(1,2,N).LT.-EPSL ) THEN
            WLN(M,2,N) = WL(M,2,N)*FLN
          ENDIF
        ELSE
          DFP = TORL(MN,N)*PORD(MN,N)*SL(MN,N)*DFLN(MN,N)
     &      *RHOML(MN,N)
          DFB = TORLB(MN,NB)*PORDB(MN,NB)*SLB(MN,NB)*DFLNB(MN,NB)
     &      *RHOMLB(MN,NB)
          INDX = 14
          DFM = DIFMN( DFP,DFB,DZGF(N),DZGF(N),DXMLN,INDX )
          WDLN(M,2,N) = 2.D+0*DFM*(XMLN(MN,N)-XMLNB(MN,NB))/DZGF(N)
          WLN(M,2,N) = WL(M,2,N)*FLN + WTMN*WDLN(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFLNT group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLNW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive N2 aqueous fluxes on a west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DXMLN = XMLNB(2,NB)-XMLN(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FLNP = XLN(MP,N)*RHOL(MP,N)
        FLNB = XLNB(MP,NB)*RHOLB(MP,NB)
        INDX = 2
        FLN = DIFMN( FLNB,FLNP,DXGF(N),DXGF(N),UL(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UL(1,1,N).LT.-EPSL ) THEN
            ULN(M,1,N) = UL(M,1,N)*FLN
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UL(1,1,N).GT.EPSL ) THEN
            ULN(M,1,N) = UL(M,1,N)*FLN
          ENDIF
        ELSE
          DFP = TORL(MP,N)*PORD(MP,N)*SL(MP,N)*DFLN(MP,N)
     &      *RHOML(MP,N)
          DFB = TORLB(MP,NB)*PORDB(MP,NB)*SLB(MP,NB)*DFLNB(MP,NB)
     &      *RHOMLB(MP,NB)
          INDX = 14
          DFM = DIFMN( DFB,DFP,DXGF(N),DXGF(N),DXMLN,INDX )
          UDLN(M,1,N) = 2.D+0*DFM*(XMLNB(MP,NB)-XMLN(MP,N))/DXGF(N)
          ULN(M,1,N) = UL(M,1,N)*FLN + WTMN*UDLN(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFLNW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLOB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CH4 aqueous fluxes on a bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE NAPL
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DXMLO = XMLOB(2,NB) - XMLO(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FLOP = XLO(MP,N)*RHOL(MP,N)
        FLOB = XLOB(MP,NB)*RHOLB(MP,NB)
        INDX = 2
        FLO = DIFMN( FLOB,FLOP,DZGF(N),DZGF(N),WL(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WL(1,1,N).LT.-EPSL ) THEN
            WLO(M,1,N) = WL(M,1,N)*FLO
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WL(1,1,N).GT.EPSL ) THEN
            WLO(M,1,N) = WL(M,1,N)*FLO
          ENDIF
        ELSE
          DFP = TORL(MP,N)*PORD(MP,N)*SL(MP,N)*DFLO(MP,N)
     &      *RHOML(MP,N)
          DFB = TORLB(MP,NB)*PORDB(MP,NB)*SLB(MP,NB)*DFLOB(MP,NB)
     &      *RHOMLB(MP,NB)
          INDX = 14
          DFM = DIFMN( DFB,DFP,DZGF(N),DZGF(N),DXMLO,INDX )
          WDLO(M,1,N) = 2.D+0*DFM*(XMLOB(MP,NB)-XMLO(MP,N))/DZGF(N)
          WLO(M,1,N) = WL(M,1,N)*FLO + WTMO*WDLO(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFLOB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLOE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CH4 aqueous fluxes on an east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE NAPL
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DXMLO = XMLO(2,N) - XMLOB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FLOP = XLO(MN,N)*RHOL(MN,N)
        FLOB = XLOB(MN,NB)*RHOLB(MN,NB)
        INDX = 2
        FLO = DIFMN( FLOP,FLOB,DXGF(N),DXGF(N),UL(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UL(1,2,N).GT.EPSL ) THEN
            ULO(M,2,N) = UL(M,2,N)*FLO
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UL(1,2,N).LT.-EPSL ) THEN
            ULO(M,2,N) = UL(M,2,N)*FLO
          ENDIF
        ELSE
          DFP = TORL(MN,N)*PORD(MN,N)*SL(MN,N)*DFLO(MN,N)
     &      *RHOML(MN,N)
          DFB = TORLB(MN,NB)*PORDB(MN,NB)*SLB(MN,NB)*DFLOB(MN,NB)
     &      *RHOMLB(MN,NB)
          INDX = 14
          DFM = DIFMN( DFP,DFB,DXGF(N),DXGF(N),DXMLO,INDX )
          UDLO(M,2,N) = 2.D+0*DFM*(XMLO(MN,N)-XMLOB(MN,NB))/DXGF(N)
          ULO(M,2,N) = UL(M,2,N)*FLO + WTMO*UDLO(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFLOE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLON( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CH4 aqueous fluxes on a north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE NAPL
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DXMLO = XMLO(2,N) - XMLOB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FLOP = XLO(MN,N)*RHOL(MN,N)
        FLOB = XLOB(MN,NB)*RHOLB(MN,NB)
        INDX = 2
        FLO = DIFMN( FLOP,FLOB,DYGF(N),DYGF(N),VL(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VL(1,2,N).GT.EPSL ) THEN
            VLO(M,2,N) = VL(M,2,N)*FLO
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VL(1,2,N).LT.-EPSL ) THEN
            VLO(M,2,N) = VL(M,2,N)*FLO
          ENDIF
        ELSE
          DFP = TORL(MN,N)*PORD(MN,N)*SL(MN,N)*DFLO(MN,N)
     &      *RHOML(MN,N)
          DFB = TORLB(MN,NB)*PORDB(MN,NB)*SLB(MN,NB)*DFLOB(MN,NB)
     &      *RHOMLB(MN,NB)
          INDX = 14
          DFM = DIFMN( DFP,DFB,DYGF(N),DYGF(N),DXMLO,INDX )
          VDLO(M,2,N) = 2.D+0*DFM*(XMLO(MN,N)-XMLOB(MN,NB))
     &      /(DYGF(N)*RP(N))
          VLO(M,2,N) = VL(M,2,N)*FLO + WTMO*VDLO(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFLON group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLOS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CH4 aqueous fluxes on a south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE NAPL
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DXMLO = XMLOB(2,NB) - XMLO(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FLOP = XLO(MP,N)*RHOL(MP,N)
        FLOB = XLOB(MP,NB)*RHOLB(MP,NB)
        INDX = 2
        FLO = DIFMN( FLOB,FLOP,DYGF(N),DYGF(N),VL(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VL(1,1,N).LT.-EPSL ) THEN
            VLO(M,1,N) = VL(M,1,N)*FLO
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VL(1,1,N).GT.EPSL ) THEN
            VLO(M,1,N) = VL(M,1,N)*FLO
          ENDIF
        ELSE
          DFP = TORL(MP,N)*PORD(MP,N)*SL(MP,N)*DFLO(MP,N)
     &      *RHOML(MP,N)
          DFB = TORLB(MP,NB)*PORDB(MP,NB)*SLB(MP,NB)*DFLOB(MP,NB)
     &      *RHOMLB(MP,NB)
          INDX = 14
          DFM = DIFMN( DFB,DFP,DYGF(N),DYGF(N),DXMLO,INDX )
          VDLO(M,1,N) = 2.D+0*DFM*(XMLOB(MP,NB)-XMLO(MP,N))
     &      /(DYGF(N)*RP(N))
          VLO(M,1,N) = VL(M,1,N)*FLO + WTMO*VDLO(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFLOS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLOT( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CH4 aqueous fluxes on a top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE NAPL
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DXMLO = XMLO(2,N)-XMLOB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FLOP = XLO(MN,N)*RHOL(MN,N)
        FLOB = XLOB(MN,NB)*RHOLB(MN,NB)
        INDX = 2
        FLO = DIFMN( FLOP,FLOB,DZGF(N),DZGF(N),WL(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WL(1,2,N).GT.EPSL ) THEN
            WLO(M,2,N) = WL(M,2,N)*FLO
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WL(1,2,N).LT.-EPSL ) THEN
            WLO(M,2,N) = WL(M,2,N)*FLO
          ENDIF
        ELSE
          DFP = TORL(MN,N)*PORD(MN,N)*SL(MN,N)*DFLO(MN,N)
     &      *RHOML(MN,N)
          DFB = TORLB(MN,NB)*PORDB(MN,NB)*SLB(MN,NB)*DFLOB(MN,NB)
     &      *RHOMLB(MN,NB)
          INDX = 14
          DFM = DIFMN( DFP,DFB,DZGF(N),DZGF(N),DXMLO,INDX )
          WDLO(M,2,N) = 2.D+0*DFM*(XMLO(MN,N)-XMLOB(MN,NB))/DZGF(N)
          WLO(M,2,N) = WL(M,2,N)*FLO + WTMO*WDLO(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFLOT group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLOW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CH4 aqueous fluxes on a west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE NAPL
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DXMLO = XMLOB(2,NB)-XMLO(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FLOP = XLO(MP,N)*RHOL(MP,N)
        FLOB = XLOB(MP,NB)*RHOLB(MP,NB)
        INDX = 2
        FLO = DIFMN( FLOB,FLOP,DXGF(N),DXGF(N),UL(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UL(1,1,N).LT.-EPSL ) THEN
            ULO(M,1,N) = UL(M,1,N)*FLO
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UL(1,1,N).GT.EPSL ) THEN
            ULO(M,1,N) = UL(M,1,N)*FLO
          ENDIF
        ELSE
          DFP = TORL(MP,N)*PORD(MP,N)*SL(MP,N)*DFLO(MP,N)
     &      *RHOML(MP,N)
          DFB = TORLB(MP,NB)*PORDB(MP,NB)*SLB(MP,NB)*DFLOB(MP,NB)
     &      *RHOMLB(MP,NB)
          INDX = 14
          DFM = DIFMN( DFB,DFP,DXGF(N),DXGF(N),DXMLO,INDX )
          UDLO(M,1,N) = 2.D+0*DFM*(XMLOB(MP,NB)-XMLO(MP,N))/DXGF(N)
          ULO(M,1,N) = UL(M,1,N)*FLO + WTMO*UDLO(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFLOW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLSB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive salt aqueous fluxes on bottom boundary surfaces.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MP = MPOS(M)
!
!---    Diffusion coefficients  ---
!
        TCOR = (T(MP,N)+TABS)/TSPRF
        SMDLP = DFLS(MP,N)*TCOR*(VISRL/VISL(MP,N))
        DFFLP = TORL(MP,N)*SL(MP,N)*PORD(MP,N)*SMDLP
        TCOR = (TB(MP,NB)+TABS)/TSPRF
        SMDLB = DFLSB(MP,NB)*TCOR*(VISRL/VISLB(MP,NB))
        DFFLB = TORLB(MP,NB)*SLB(MP,NB)*PORDB(MP,NB)*SMDLB
        INDX = 18
        DFFLB = DIFMN(DFFLB,DFFLP,DZGF(N),DZGF(N),WL(1,1,N),INDX)
!
!---   Outflow boundary types  ---
!
        IF( IBCT(IEQS,NB).EQ.7 ) THEN
          ALP = MAX( -WL(M,1,N),ZERO )
          WS(M,1,N) = -XLS(MP,N)*RHOL(MP,N)*ALP
!
!---   Inflow boundary types  ---
!
        ELSEIF( IBCT(IEQS,NB).EQ.35 .OR. IBCT(IEQS,NB).EQ.37 ) THEN
          AL = MAX( WL(M,1,N),ZERO )
          WS(M,1,N) = XLSB(MP,NB)*RHOLB(MP,NB)*AL
!
!---   Dirichlet boundary types  ---
!
        ELSE
          DDLB = DFFLB/(5.D-1*DZGF(N))
          AL = MAX( WL(M,1,N),ZERO ) +
     &     DDLB*MAX((ONE-(TENTH*ABS(WL(M,1,N))/(DDLB+SMALL)))**5,ZERO)
          ALP = MAX( -WL(M,1,N),ZERO ) +
     &     DDLB*MAX((ONE-(TENTH*ABS(WL(M,1,N))/(DDLB+SMALL)))**5,ZERO)
          WS(M,1,N) = (XLSB(MP,NB)*RHOLB(MP,NB)*AL
     &     - XLS(MP,N)*RHOL(MP,N)*ALP)
          WDS(M,1,N) = DDLB*(XLSB(MP,NB)*RHOLB(MP,NB) -
     &      XLS(MP,N)*RHOL(MP,N))
        ENDIF
      ENDDO
!
!---  End of DFFLSB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLSS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive salt aqueous fluxes on south boundary surfaces.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MP = MPOS(M)
!
!---    Diffusion coefficients  ---
!
        TCOR = (T(MP,N)+TABS)/TSPRF
        SMDLP = DFLS(MP,N)*TCOR*(VISRL/VISL(MP,N))
        DFFLP = TORL(MP,N)*SL(MP,N)*PORD(MP,N)*SMDLP
        TCOR = (TB(MP,NB)+TABS)/TSPRF
        SMDLP = DFLSB(MP,NB)*TCOR*(VISRL/VISLB(MP,NB))
        DFFLS = TORLB(MP,NB)*SLB(MP,NB)*PORDB(MP,NB)*SMDLP
        INDX = 18
        DFFLS = DIFMN(DFFLS,DFFLP,DYGF(N),DYGF(N),VL(1,1,N),INDX)
!
!---   Outflow boundary types  ---
!
        IF( IBCT(IEQS,NB).EQ.7 ) THEN
          ALP = MAX( -VL(M,1,N),ZERO )
          VS(M,1,N) = -XLS(MP,N)*RHOL(MP,N)*ALP
!
!---   Inflow boundary types  ---
!
        ELSEIF( IBCT(IEQS,NB).EQ.35 .OR. IBCT(IEQS,NB).EQ.37 ) THEN
          AL = MAX( VL(M,1,N),ZERO )
          VS(M,1,N) = XLSB(MP,NB)*RHOLB(MP,NB)*AL
!
!---   Dirichlet boundary types  ---
!
        ELSE
          DDLS = DFFLS/RP(N)/(5.D-1*DYGF(N))
          AL = MAX( VL(M,1,N),ZERO ) +
     &     DDLS*MAX((ONE-(TENTH*ABS(VL(M,1,N))/(DDLS+SMALL)))**5,ZERO)
          ALP = MAX( -VL(M,1,N),ZERO ) +
     &     DDLS*MAX((ONE-(TENTH*ABS(VL(M,1,N))/(DDLS+SMALL)))**5,ZERO)
          VS(M,1,N) = (XLSB(MP,NB)*RHOLB(MP,NB)*AL
     &      - XLS(MP,N)*RHOL(MP,N)*ALP)
          VDS(M,1,N) = DDLS*(XLSB(MP,NB)*RHOLB(MP,NB) -
     &      XLS(MP,N)*RHOL(MP,N))
        ENDIF
      ENDDO
!
!---  End of DFFLSS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLSW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive salt aqueous fluxes on west boundary surfaces.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MP = MPOS(M)
!
!---    Diffusion coefficients  ---
!
        TCOR = (T(MP,N)+TABS)/TSPRF
        SMDLP = DFLS(MP,N)*TCOR*(VISRL/VISL(MP,N))
        DFFLP = TORL(MP,N)*SL(MP,N)*PORD(MP,N)*SMDLP
        TCOR = (TB(MP,NB)+TABS)/TSPRF
        SMDLP = DFLSB(MP,NB)*TCOR*(VISRL/VISLB(MP,NB))
        DFFLW = TORLB(MP,NB)*SLB(MP,NB)*PORDB(MP,NB)*SMDLP
        INDX = 18
        DFFLW = DIFMN(DFFLW,DFFLP,DXGF(N),DXGF(N),UL(1,1,N),INDX)
!
!---   Outflow boundary types  ---
!
        IF( IBCT(IEQS,NB).EQ.7 ) THEN
          ALP = MAX( -UL(M,1,N),ZERO )
          US(M,1,N) = -XLS(MP,N)*RHOL(MP,N)*ALP
!
!---   Inflow boundary types  ---
!
        ELSEIF( IBCT(IEQS,NB).EQ.35 .OR. IBCT(IEQS,NB).EQ.37 ) THEN
          AL = MAX( UL(M,1,N),ZERO )
          US(M,1,N) = XLSB(MP,NB)*RHOLB(MP,NB)*AL
!
!---   Dirichlet boundary types  ---
!
        ELSE
          DDLW = DFFLW/(5.D-1*DXGF(N))
          AL = MAX( UL(M,1,N),ZERO ) +
     &     DDLW*MAX((ONE-(TENTH*ABS(UL(M,1,N))/(DDLW+SMALL)))**5,ZERO)
          ALP = MAX( -UL(M,1,N),ZERO ) +
     &     DDLW*MAX((ONE-(TENTH*ABS(UL(M,1,N))/(DDLW+SMALL)))**5,ZERO)
          US(M,1,N) = (XLSB(MP,NB)*RHOLB(MP,NB)*AL
     &      - XLS(MP,N)*RHOL(MP,N)*ALP)
          UDS(M,1,N) = DDLW*(XLSB(MP,NB)*RHOLB(MP,NB) -
     &      XLS(MP,N)*RHOL(MP,N))
        ENDIF
      ENDDO
!
!---  End of DFFLSW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLSE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive salt aqueous fluxes on west boundary surfaces.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MN = MNEG(M)
!
!---    Diffusion coefficients  ---
!
        TCOR = (T(MN,N)+TABS)/TSPRF
        SMDLP = DFLS(MN,N)*TCOR*(VISRL/VISL(MN,N))
        DFFLP = TORL(MN,N)*SL(MN,N)*PORD(MN,N)*SMDLP
        TCOR = (TB(MN,NB)+TABS)/TSPRF
        SMDLP = DFLSB(MN,NB)*TCOR*(VISRL/VISLB(MN,NB))
        DFFLE = TORLB(MN,NB)*SLB(MN,NB)*PORDB(MN,NB)*SMDLP
        INDX = 18
        DFFLE = DIFMN(DFFLP,DFFLE,DXGF(N),DXGF(N),UL(1,2,N),INDX)
!
!---   Outflow boundary types  ---
!
        IF( IBCT(IEQS,NB).EQ.7 ) THEN
          ALP = MAX( UL(M,2,N),ZERO )
          US(M,2,N) = XLS(MN,N)*RHOL(MN,N)*ALP
!
!---   Inflow boundary types  ---
!
        ELSEIF( IBCT(IEQS,NB).EQ.35 .OR. IBCT(IEQS,NB).EQ.37 ) THEN
          AL = MAX( -UL(M,2,N),ZERO )
          US(M,2,N) = -XLSB(MN,NB)*RHOLB(MN,NB)*AL
!
!---   Dirichlet boundary types  ---
!
        ELSE
          DDLE = DFFLE/(5.D-1*DXGF(N))
          AL = MAX( -UL(M,2,N),ZERO ) +
     &     DDLE*MAX((ONE-(TENTH*ABS(UL(M,2,N))/(DDLE+SMALL)))**5,ZERO)
          ALP = MAX( UL(M,2,N),ZERO ) +
     &     DDLE*MAX((ONE-(TENTH*ABS(UL(M,2,N))/(DDLE+SMALL)))**5,ZERO)
          US(M,2,N) = (XLS(MN,N)*RHOL(MN,N)*ALP
     &     - XLSB(MN,NB)*RHOLB(MN,NB)*AL)
          UDS(M,2,N) = DDLE*(XLS(MN,N)*RHOL(MN,N) -
     &     XLSB(MN,NB)*RHOLB(MN,NB))
        ENDIF
      ENDDO
!
!---  End of DFFLSE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLSN( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive salt aqueous fluxes on north boundary surfaces.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MN = MNEG(M)
!
!---    Diffusion coefficients  ---
!
        TCOR = (T(MN,N)+TABS)/TSPRF
        SMDLP = DFLS(MN,N)*TCOR*(VISRL/VISL(MN,N))
        DFFLP = TORL(MN,N)*SL(MN,N)*PORD(MN,N)*SMDLP
        TCOR = (TB(MN,NB)+TABS)/TSPRF
        SMDLP = DFLSB(MN,NB)*TCOR*(VISRL/VISLB(MN,NB))
        DFFLN = TORLB(MN,NB)*SLB(MN,NB)*PORDB(MN,NB)*SMDLP
        INDX = 18
        DFFLN = DIFMN(DFFLP,DFFLN,DYGF(N),DYGF(N),VL(1,2,N),INDX)
!
!---   Outflow boundary types  ---
!
        IF( IBCT(IEQS,NB).EQ.7 ) THEN
          ALP = MAX( VL(M,2,N),ZERO )
          VS(M,2,N) = XLS(MN,N)*RHOL(MN,N)*ALP
!
!---   Inflow boundary types  ---
!
        ELSEIF( IBCT(IEQS,NB).EQ.35 .OR. IBCT(IEQS,NB).EQ.37 ) THEN
          AL = MAX( -VL(M,2,N),ZERO )
          VS(M,2,N) = -XLSB(MN,NB)*RHOLB(MN,NB)*AL
!
!---   Dirichlet boundary types  ---
!
        ELSE
          DDLN = DFFLN/RP(N)/(5.D-1*DYGF(N))
          AL = MAX( -VL(M,2,N),ZERO ) +
     &     DDLN*MAX((ONE-(TENTH*ABS(VL(M,2,N))/(DDLN+SMALL)))**5,ZERO)
          ALP = MAX( VL(M,2,N),ZERO ) +
     &     DDLN*MAX((ONE-(TENTH*ABS(VL(M,2,N))/(DDLN+SMALL)))**5,ZERO)
          VS(M,2,N) = (XLS(MN,N)*RHOL(MN,N)*ALP -
     &      XLSB(MN,NB)*RHOLB(MN,NB)*AL)
          VDS(M,2,N) = DDLN*(XLS(MN,N)*RHOL(MN,N) -
     &      XLSB(MN,NB)*RHOLB(MN,NB))
        ENDIF
      ENDDO
!
!---  End of DFFLSN group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLST( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive salt aqueous fluxes on top boundary surfaces.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MN = MNEG(M)
!
!---    Diffusion coefficients  ---
!
        TCOR = (T(MN,N)+TABS)/TSPRF
        SMDLP = DFLS(MN,N)*TCOR*(VISRL/VISL(MN,N))
        DFFLP = TORL(MN,N)*SL(MN,N)*PORD(MN,N)*SMDLP
        TCOR = (TB(MN,NB)+TABS)/TSPRF
        SMDLP = DFLSB(MN,NB)*TCOR*(VISRL/VISLB(MN,NB))
        DFFLT = TORLB(MN,NB)*SLB(MN,NB)*PORDB(MN,NB)*SMDLP
        INDX = 18
        DFFLT = DIFMN(DFFLP,DFFLT,DZGF(N),DZGF(N),WL(1,2,N),INDX)
!
!---   Outflow boundary types  ---
!
        IF( IBCT(IEQS,NB).EQ.7 ) THEN
          ALP = MAX( WL(M,2,N),ZERO )
          WS(M,2,N) = XLS(MN,N)*RHOL(MN,N)*ALP
!
!---   Inflow boundary types  ---
!
        ELSEIF( IBCT(IEQS,NB).EQ.35 .OR. IBCT(IEQS,NB).EQ.37 ) THEN
          AL = MAX( -WL(M,2,N),ZERO )
          WS(M,2,N) = -XLSB(MN,NB)*RHOLB(MN,NB)*AL
!
!---   Dirichlet boundary types  ---
!
        ELSE
          DDLT = DFFLT/(5.D-1*DZGF(N))
          AL = MAX( -WL(M,2,N),ZERO ) +
     &     DDLT*MAX((ONE-(TENTH*ABS(WL(M,2,N))/(DDLT+SMALL)))**5,ZERO)
          ALP = MAX( WL(M,2,N),ZERO ) +
     &     DDLT*MAX((ONE-(TENTH*ABS(WL(M,2,N))/(DDLT+SMALL)))**5,ZERO)
          WS(M,2,N) = (XLS(MN,N)*RHOL(MN,N)*ALP
     &      - XLSB(MN,NB)*RHOLB(MN,NB)*AL)
          WDS(M,2,N) = DDLT*(XLS(MN,N)*RHOL(MN,N) -
     &      XLSB(MN,NB)*RHOLB(MN,NB))
        ENDIF
      ENDDO
!
!---  End of DFFLST group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLWB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water aqueous flux on bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DO M = 1,ISVF
        MP = MPOS(M)
        FLWP = XLW(MP,N)*RHOL(MP,N)
        FLWB = XLWB(MP,NB)*RHOLB(MP,NB)
        INDX = 2
        FLW = DIFMN( FLWB,FLWP,DZGF(N),DZGF(N),WL(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WL(1,1,N).LT.-EPSL ) THEN
            WLW(M,1,N) = WL(M,1,N)*FLW
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WL(1,1,N).GT.EPSL ) THEN
            WLW(M,1,N) = WL(M,1,N)*FLW
          ENDIF
        ELSE
          WDLW(M,1,N) = -(WDLA(M,1,N) + WDLO(M,1,N) + WDLN(M,1,N)
     &      + WDS(M,1,N)/WTMS)
          WLW(M,1,N) = WL(M,1,N)*FLW + WTMW*WDLW(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFLWB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLWE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water aqueous flux on east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DO M = 1,ISVF
        MN = MNEG(M)
        FLWP = XLW(MN,N)*RHOL(MN,N)
        FLWB = XLWB(MN,NB)*RHOLB(MN,NB)
        INDX = 2
        FLW = DIFMN( FLWP,FLWB,DXGF(N),DXGF(N),UL(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UL(1,2,N).GT.EPSL ) THEN
            ULW(M,2,N) = UL(M,2,N)*FLW
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UL(1,2,N).LT.-EPSL ) THEN
            ULW(M,2,N) = UL(M,2,N)*FLW
          ENDIF
        ELSE
          UDLW(M,2,N) = -(UDLA(M,2,N) + UDLO(M,2,N) + UDLN(M,2,N)
     &      + UDS(M,2,N)/WTMS)
          ULW(M,2,N) = UL(M,2,N)*FLW + WTMW*UDLW(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFLWE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLWN( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water aqueous flux on north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DO M = 1,ISVF
        MN = MNEG(M)
        FLWP = XLW(MN,N)*RHOL(MN,N)
        FLWB = XLWB(MN,NB)*RHOLB(MN,NB)
        INDX = 2
        FLW = DIFMN( FLWP,FLWB,DYGF(N),DYGF(N),VL(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VL(1,2,N).GT.EPSL ) THEN
            VLW(M,2,N) = VL(M,2,N)*FLW
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VL(1,2,N).LT.-EPSL ) THEN
            VLW(M,2,N) = VL(M,2,N)*FLW
          ENDIF
        ELSE
          VDLW(M,2,N) = -(VDLA(M,2,N) + VDLO(M,2,N) + VDLN(M,2,N)
     &      + VDS(M,2,N)/WTMS)
          VLW(M,2,N) = VL(M,2,N)*FLW + WTMW*VDLW(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFLWN group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLWS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water aqueous flux on south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DO M = 1,ISVF
        MP = MPOS(M)
        FLWP = XLW(MP,N)*RHOL(MP,N)
        FLWB = XLWB(MP,NB)*RHOLB(MP,NB)
        INDX = 2
        FLW = DIFMN( FLWB,FLWP,DYGF(N),DYGF(N),VL(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VL(1,1,N).LT.-EPSL ) THEN
            VLW(M,1,N) = VL(M,1,N)*FLW
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VL(1,1,N).GT.EPSL ) THEN
            VLW(M,1,N) = VL(M,1,N)*FLW
          ENDIF
        ELSE
          VDLW(M,1,N) = -(VDLA(M,1,N) + VDLO(M,1,N) + VDLN(M,1,N)
     &      + VDS(M,1,N)/WTMS)
          VLW(M,1,N) = VL(M,1,N)*FLW + WTMW*VDLW(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFLWS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLWT( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water aqueous flux on top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DO M = 1,ISVF
        MN = MNEG(M)
        FLWP = XLW(MN,N)*RHOL(MN,N)
        FLWB = XLWB(MN,NB)*RHOLB(MN,NB)
        INDX = 2
        FLW = DIFMN( FLWP,FLWB,DZGF(N),DZGF(N),WL(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WL(1,2,N).GT.EPSL ) THEN
            WLW(M,2,N) = WL(M,2,N)*FLW
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WL(1,2,N).LT.-EPSL ) THEN
            WLW(M,2,N) = WL(M,2,N)*FLW
          ENDIF
        ELSE
          WDLW(M,2,N) = -(WDLA(M,2,N) + WDLO(M,2,N) + WDLN(M,2,N)
     &      + WDS(M,2,N)/WTMS)
          WLW(M,2,N) = WL(M,2,N)*FLW + WTMW*WDLW(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFLWT group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFLWW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water aqueous flux on west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(4).LT.1 ) RETURN
      DO M = 1,ISVF
        MP = MPOS(M)
        FLWP = XLW(MP,N)*RHOL(MP,N)
        FLWB = XLWB(MP,NB)*RHOLB(MP,NB)
        INDX = 2
        FLW = DIFMN( FLWB,FLWP,DXGF(N),DXGF(N),UL(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UL(1,1,N).LT.-EPSL ) THEN
            ULW(M,1,N) = UL(M,1,N)*FLW
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UL(1,1,N).GT.EPSL ) THEN
            ULW(M,1,N) = UL(M,1,N)*FLW
          ENDIF
        ELSE
          UDLW(M,1,N) = -(UDLA(M,1,N) + UDLO(M,1,N) + UDLN(M,1,N)
     &      + UDS(M,1,N)/WTMS)
          ULW(M,1,N) = UL(M,1,N)*FLW + WTMW*UDLW(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFLWW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNAB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 nonaqueous-liquid fluxes on a bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DO M = 1,ISVF
        MP = MPOS(M)
        FNAP = XNA(MP,N)*RHON(MP,N)
        FNAB = XNAB(MP,NB)*RHONB(MP,NB)
        INDX = 4
        FNA = DIFMN( FNAB,FNAP,DZGF(N),DZGF(N),WN(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WN(1,1,N).LT.-EPSL ) THEN
            WNA(M,1,N) = WN(M,1,N)*FNA
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WN(1,1,N).GT.EPSL ) THEN
            WNA(M,1,N) = WN(M,1,N)*FNA
          ENDIF
        ELSE
          WDNA(M,1,N) = -(WDNN(M,1,N)+WDNO(M,1,N)+WDNW(M,1,N))
          WNA(M,1,N) = WN(M,1,N)*FNA + WTMA*WDNA(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFNAB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNAE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 nonaqueous-liquid fluxes on an east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DO M = 1,ISVF
        MN = MNEG(M)
        FNAP = XNA(MN,N)*RHON(MN,N)
        FNAB = XNAB(MN,NB)*RHONB(MN,NB)
        INDX = 4
        FNA = DIFMN( FNAP,FNAB,DXGF(N),DXGF(N),UN(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UN(1,2,N).GT.EPSL ) THEN
            UNA(M,2,N) = UN(M,2,N)*FNA
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UN(1,2,N).LT.-EPSL ) THEN
            UNA(M,2,N) = UN(M,2,N)*FNA
          ENDIF
        ELSE
          UDNA(M,2,N) = -(UDNN(M,2,N)+UDNO(M,2,N)+UDNW(M,2,N))
          UNA(M,2,N) = UN(M,2,N)*FNA + WTMA*UDNA(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFNAE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNAN( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 nonaqueous-liquid fluxes on a north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DO M = 1,ISVF
        MN = MNEG(M)
        FNAP = XNA(MN,N)*RHON(MN,N)
        FNAB = XNAB(MN,NB)*RHONB(MN,NB)
        INDX = 4
        FNA = DIFMN( FNAP,FNAB,DYGF(N),DYGF(N),VN(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VN(1,2,N).GT.EPSL ) THEN
            VNA(M,2,N) = VN(M,2,N)*FNA
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VN(1,2,N).LT.-EPSL ) THEN
            VNA(M,2,N) = VN(M,2,N)*FNA
          ENDIF
        ELSE
          VDNA(M,2,N) = -(VDNN(M,2,N)+VDNO(M,2,N)+VDNW(M,2,N))
          VNA(M,2,N) = VN(M,2,N)*FNA + WTMN*VDNA(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFNAN group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNAS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 nonaqueous-liquid fluxes on a south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DO M = 1,ISVF
        MP = MPOS(M)
        FNAP = XNA(MP,N)*RHON(MP,N)
        FNAB = XNAB(MP,NB)*RHONB(MP,NB)
        INDX = 4
        FNA = DIFMN( FNAB,FNAP,DYGF(N),DYGF(N),VN(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VN(1,1,N).LT.-EPSL ) THEN
            VNA(M,1,N) = VN(M,1,N)*FNA
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VN(1,1,N).GT.EPSL ) THEN
            VNA(M,1,N) = VN(M,1,N)*FNA
          ENDIF
        ELSE
          VDNA(M,1,N) = -(VDNN(M,1,N)+VDNO(M,1,N)+VDNW(M,1,N))
          VNA(M,1,N) = VN(M,1,N)*FNA + WTMA*VDNA(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFNAS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNAT( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 nonaqueous-liquid fluxes on a top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DO M = 1,ISVF
        MN = MNEG(M)
        FNAP = XNA(MN,N)*RHON(MN,N)
        FNAB = XNAB(MN,NB)*RHONB(MN,NB)
        INDX = 4
        FNA = DIFMN( FNAP,FNAB,DZGF(N),DZGF(N),WN(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WN(1,2,N).GT.EPSL ) THEN
            WNA(M,2,N) = WN(M,2,N)*FNA
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WN(1,2,N).LT.-EPSL ) THEN
            WNA(M,2,N) = WN(M,2,N)*FNA
          ENDIF
        ELSE
          WDNA(M,2,N) = -(WDNN(M,2,N)+WDNO(M,2,N)+WDNW(M,2,N))
          WNA(M,2,N) = WN(M,2,N)*FNA + WTMA*WDNA(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFNAT group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNAW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 nonaqueous-liquid fluxes on a west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DO M = 1,ISVF
        MP = MPOS(M)
        FNAP = XNA(MP,N)*RHON(MP,N)
        FNAB = XNAB(MP,NB)*RHONB(MP,NB)
        INDX = 4
        FNA = DIFMN( FNAB,FNAP,DXGF(N),DXGF(N),UN(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UN(1,1,N).LT.-EPSL ) THEN
            UNA(M,1,N) = UN(M,1,N)*FNA
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UN(1,1,N).GT.EPSL ) THEN
            UNA(M,1,N) = UN(M,1,N)*FNA
          ENDIF
        ELSE
          UDNA(M,1,N) = -(UDNN(M,1,N)+UDNO(M,1,N)+UDNW(M,1,N))
          UNA(M,1,N) = UN(M,1,N)*FNA + WTMA*UDNA(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFNAW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNNB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive N2 nonaqueous-liquid fluxes on a bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMNN = XMNNB(2,NB) - XMNN(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FNNP = XNN(MP,N)*RHON(MP,N)
        FNNB = XNNB(MP,NB)*RHONB(MP,NB)
        INDX = 4
        FNN = DIFMN( FNNB,FNNP,DZGF(N),DZGF(N),WN(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WN(1,1,N).LT.-EPSL ) THEN
            WNN(M,1,N) = WN(M,1,N)*FNN
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WN(1,1,N).GT.EPSL ) THEN
            WNN(M,1,N) = WN(M,1,N)*FNN
          ENDIF
        ELSE
          DFP = TORN(MP,N)*PORD(MP,N)*SN(MP,N)*DFNN(MP,N)
     &      *RHOMN(MP,N)
          DFB = TORNB(MP,NB)*PORDB(MP,NB)*SNB(MP,NB)*DFNNB(MP,NB)
     &      *RHOMNB(MP,NB)
          INDX = 20
          DFM = DIFMN( DFB,DFP,DZGF(N),DZGF(N),DXMNN,INDX )
          WDNN(M,1,N) = 2.D+0*DFM*(XMNNB(MP,NB)-XMNN(MP,N))/DZGF(N)
          WNN(M,1,N) = WN(M,1,N)*FNN + WTMN*WDNN(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFNNB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNNE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive N2 nonaqueous-liquid fluxes on an east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMNN = XMNN(2,N) - XMNNB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FNNP = XNN(MN,N)*RHON(MN,N)
        FNNB = XNNB(MN,NB)*RHONB(MN,NB)
        INDX = 4
        FNN = DIFMN( FNNP,FNNB,DXGF(N),DXGF(N),UN(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UN(1,2,N).GT.EPSL ) THEN
            UNN(M,2,N) = UN(M,2,N)*FNN
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UN(1,2,N).LT.-EPSL ) THEN
            UNN(M,2,N) = UN(M,2,N)*FNN
          ENDIF
        ELSE
          DFP = TORN(MN,N)*PORD(MN,N)*SN(MN,N)*DFNN(MN,N)
     &      *RHOMN(MN,N)
          DFB = TORNB(MN,NB)*PORDB(MN,NB)*SNB(MN,NB)*DFNNB(MN,NB)
     &      *RHOMNB(MN,NB)
          INDX = 20
          DFM = DIFMN( DFP,DFB,DXGF(N),DXGF(N),DXMNN,INDX )
          UDNN(M,2,N) = 2.D+0*DFM*(XMNN(MN,N)-XMNNB(MN,NB))/DXGF(N)
          UNN(M,2,N) = UN(M,2,N)*FNN + WTMN*UDNN(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFNNE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNNN( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive N2 nonaqueous-liquid fluxes on a north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMNN = XMNN(2,N) - XMNNB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FNNP = XNN(MN,N)*RHON(MN,N)
        FNNB = XNNB(MN,NB)*RHONB(MN,NB)
        INDX = 4
        FNN = DIFMN( FNNP,FNNB,DYGF(N),DYGF(N),VN(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VN(1,2,N).GT.EPSL ) THEN
            VNN(M,2,N) = VN(M,2,N)*FNN
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VN(1,2,N).LT.-EPSL ) THEN
            VNN(M,2,N) = VN(M,2,N)*FNN
          ENDIF
        ELSE
          DFP = TORN(MN,N)*PORD(MN,N)*SN(MN,N)*DFNN(MN,N)
     &      *RHOMN(MN,N)
          DFB = TORNB(MN,NB)*PORDB(MN,NB)*SNB(MN,NB)*DFNNB(MN,NB)
     &      *RHOMNB(MN,NB)
          INDX = 20
          DFM = DIFMN( DFP,DFB,DYGF(N),DYGF(N),DXMNN,INDX )
          VDNN(M,2,N) = 2.D+0*DFM*(XMNN(MN,N)-XMNNB(MN,NB))
     &      /(DYGF(N)*RP(N))
          VNN(M,2,N) = VN(M,2,N)*FNN + WTMN*VDNN(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFNNN group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNNS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive N2 nonaqueous-liquid fluxes on a south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMNN = XMNNB(2,NB) - XMNN(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FNNP = XNN(MP,N)*RHON(MP,N)
        FNNB = XNNB(MP,NB)*RHONB(MP,NB)
        INDX = 4
        FNN = DIFMN( FNNB,FNNP,DYGF(N),DYGF(N),VN(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VN(1,1,N).LT.-EPSL ) THEN
            VNN(M,1,N) = VN(M,1,N)*FNN
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VN(1,1,N).GT.EPSL ) THEN
            VNN(M,1,N) = VN(M,1,N)*FNN
          ENDIF
        ELSE
          DFP = TORN(MP,N)*PORD(MP,N)*SN(MP,N)*DFNN(MP,N)
     &      *RHOMN(MP,N)
          DFB = TORNB(MP,NB)*PORDB(MP,NB)*SNB(MP,NB)*DFNNB(MP,NB)
     &      *RHOMNB(MP,NB)
          INDX = 20
          DFM = DIFMN( DFB,DFP,DYGF(N),DYGF(N),DXMNN,INDX )
          VDNN(M,1,N) = 2.D+0*DFM*(XMNNB(MP,NB)-XMNN(MP,N))
     &      /(DYGF(N)*RP(N))
          VNN(M,1,N) = VN(M,1,N)*FNN + WTMN*VDNN(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFNNS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNNT( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive N2 nonaqueous-liquid fluxes on a top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMNN = XMNN(2,N)-XMNNB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FNNP = XNN(MN,N)*RHON(MN,N)
        FNNB = XNNB(MN,NB)*RHONB(MN,NB)
        INDX = 4
        FNN = DIFMN( FNNP,FNNB,DZGF(N),DZGF(N),WN(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WN(1,2,N).GT.EPSL ) THEN
            WNN(M,2,N) = WN(M,2,N)*FNN
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WN(1,2,N).LT.-EPSL ) THEN
            WNN(M,2,N) = WN(M,2,N)*FNN
          ENDIF
        ELSE
          DFP = TORN(MN,N)*PORD(MN,N)*SN(MN,N)*DFNN(MN,N)
     &      *RHOMN(MN,N)
          DFB = TORNB(MN,NB)*PORDB(MN,NB)*SNB(MN,NB)*DFNNB(MN,NB)
     &      *RHOMNB(MN,NB)
          INDX = 20
          DFM = DIFMN( DFP,DFB,DZGF(N),DZGF(N),DXMNN,INDX )
          WDNN(M,2,N) = 2.D+0*DFM*(XMNN(MN,N)-XMNNB(MN,NB))/DZGF(N)
          WNN(M,2,N) = WN(M,2,N)*FNN + WTMN*WDNN(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFNNT group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNNW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CO2 nonaqueous-liquid fluxes on a west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMNN = XMNNB(2,NB)-XMNN(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FNNP = XNN(MP,N)*RHON(MP,N)
        FNNB = XNNB(MP,NB)*RHONB(MP,NB)
        INDX = 4
        FNN = DIFMN( FNNB,FNNP,DXGF(N),DXGF(N),UN(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UN(1,1,N).LT.-EPSL ) THEN
            UNN(M,1,N) = UN(M,1,N)*FNN
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UN(1,1,N).GT.EPSL ) THEN
            UNN(M,1,N) = UN(M,1,N)*FNN
          ENDIF
        ELSE
          DFP = TORN(MP,N)*PORD(MP,N)*SN(MP,N)*DFNN(MP,N)
     &      *RHOMN(MP,N)
          DFB = TORNB(MP,NB)*PORDB(MP,NB)*SNB(MP,NB)*DFNNB(MP,NB)
     &      *RHOMNB(MP,NB)
          INDX = 20
          DFM = DIFMN( DFB,DFP,DXGF(N),DXGF(N),DXMNN,INDX )
          UDNN(M,1,N) = 2.D+0*DFM*(XMNNB(MP,NB)-XMNN(MP,N))/DXGF(N)
          UNN(M,1,N) = UN(M,1,N)*FNN + WTMN*UDNN(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFNNW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNOB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CH4 nonaqueous-liquid fluxes on a bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE NAPL
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMNO = XMNOB(2,NB) - XMNO(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FNOP = XNO(MP,N)*RHON(MP,N)
        FNOB = XNOB(MP,NB)*RHONB(MP,NB)
        INDX = 4
        FNO = DIFMN( FNOB,FNOP,DZGF(N),DZGF(N),WN(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WN(1,1,N).LT.-EPSL ) THEN
            WNO(M,1,N) = WN(M,1,N)*FNO
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WN(1,1,N).GT.EPSL ) THEN
            WNO(M,1,N) = WN(M,1,N)*FNO
          ENDIF
        ELSE
          DFP = TORN(MP,N)*PORD(MP,N)*SN(MP,N)*DFNO(MP,N)
     &      *RHOMN(MP,N)
          DFB = TORNB(MP,NB)*PORDB(MP,NB)*SNB(MP,NB)*DFNOB(MP,NB)
     &      *RHOMNB(MP,NB)
          INDX = 20
          DFM = DIFMN( DFB,DFP,DZGF(N),DZGF(N),DXMNO,INDX )
          WDNO(M,1,N) = 2.D+0*DFM*(XMNOB(MP,NB)-XMNO(MP,N))/DZGF(N)
          WNO(M,1,N) = WN(M,1,N)*FNO + WTMO*WDNO(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFNOB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNOE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CH4 nonaqueous-liquid fluxes on an east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE NAPL
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMNO = XMNO(2,N) - XMNOB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FNOP = XNO(MN,N)*RHON(MN,N)
        FNOB = XNOB(MN,NB)*RHONB(MN,NB)
        INDX = 4
        FNO = DIFMN( FNOP,FNOB,DXGF(N),DXGF(N),UN(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UN(1,2,N).GT.EPSL ) THEN
            UNO(M,2,N) = UN(M,2,N)*FNO
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UN(1,2,N).LT.-EPSL ) THEN
            UNO(M,2,N) = UN(M,2,N)*FNO
          ENDIF
        ELSE
          DFP = TORN(MN,N)*PORD(MN,N)*SN(MN,N)*DFNO(MN,N)
     &      *RHOMN(MN,N)
          DFB = TORNB(MN,NB)*PORDB(MN,NB)*SNB(MN,NB)*DFNOB(MN,NB)
     &      *RHOMNB(MN,NB)
          INDX = 20
          DFM = DIFMN( DFP,DFB,DXGF(N),DXGF(N),DXMNO,INDX )
          UDNO(M,2,N) = 2.D+0*DFM*(XMNO(MN,N)-XMNOB(MN,NB))/DXGF(N)
          UNO(M,2,N) = UN(M,2,N)*FNO + WTMO*UDNO(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFNOE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNON( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CH4 nonaqueous-liquid fluxes on a north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE NAPL
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMNO = XMNO(2,N) - XMNOB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FNOP = XNO(MN,N)*RHON(MN,N)
        FNOB = XNOB(MN,NB)*RHONB(MN,NB)
        INDX = 4
        FNO = DIFMN( FNOP,FNOB,DYGF(N),DYGF(N),VN(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VN(1,2,N).GT.EPSL ) THEN
            VNO(M,2,N) = VN(M,2,N)*FNO
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VN(1,2,N).LT.-EPSL ) THEN
            VNO(M,2,N) = VN(M,2,N)*FNO
          ENDIF
        ELSE
          DFP = TORN(MN,N)*PORD(MN,N)*SN(MN,N)*DFNO(MN,N)
     &      *RHOMN(MN,N)
          DFB = TORNB(MN,NB)*PORDB(MN,NB)*SNB(MN,NB)*DFNOB(MN,NB)
     &      *RHOMNB(MN,NB)
          INDX = 20
          DFM = DIFMN( DFP,DFB,DYGF(N),DYGF(N),DXMNO,INDX )
          VDNO(M,2,N) = 2.D+0*DFM*(XMNO(MN,N)-XMNOB(MN,NB))
     &      /(DYGF(N)*RP(N))
          VNO(M,2,N) = VN(M,2,N)*FNO + WTMO*VDNO(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFNON group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNOS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CH4 nonaqueous-liquid fluxes on a south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE NAPL
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMNO = XMNOB(2,NB) - XMNO(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FNOP = XNO(MP,N)*RHON(MP,N)
        FNOB = XNOB(MP,NB)*RHONB(MP,NB)
        INDX = 4
        FNO = DIFMN( FNOB,FNOP,DYGF(N),DYGF(N),VN(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VN(1,1,N).LT.-EPSL ) THEN
            VNO(M,1,N) = VN(M,1,N)*FNO
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VN(1,1,N).GT.EPSL ) THEN
            VNO(M,1,N) = VN(M,1,N)*FNO
          ENDIF
        ELSE
          DFP = TORN(MP,N)*PORD(MP,N)*SN(MP,N)*DFNO(MP,N)
     &      *RHOMN(MP,N)
          DFB = TORNB(MP,NB)*PORDB(MP,NB)*SNB(MP,NB)*DFNOB(MP,NB)
     &      *RHOMNB(MP,NB)
          INDX = 20
          DFM = DIFMN( DFB,DFP,DYGF(N),DYGF(N),DXMNO,INDX )
          VDNO(M,1,N) = 2.D+0*DFM*(XMNOB(MP,NB)-XMNO(MP,N))
     &      /(DYGF(N)*RP(N))
          VNO(M,1,N) = VN(M,1,N)*FNO + WTMO*VDNO(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFNOS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNOT( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CH4 nonaqueous-liquid fluxes on a top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE NAPL
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMNO = XMNO(2,N)-XMNOB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FNOP = XNO(MN,N)*RHON(MN,N)
        FNOB = XNOB(MN,NB)*RHONB(MN,NB)
        INDX = 4
        FNO = DIFMN( FNOP,FNOB,DZGF(N),DZGF(N),WN(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WN(1,2,N).GT.EPSL ) THEN
            WNO(M,2,N) = WN(M,2,N)*FNO
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WN(1,2,N).LT.-EPSL ) THEN
            WNO(M,2,N) = WN(M,2,N)*FNO
          ENDIF
        ELSE
          DFP = TORN(MN,N)*PORD(MN,N)*SN(MN,N)*DFNO(MN,N)
     &      *RHOMN(MN,N)
          DFB = TORNB(MN,NB)*PORDB(MN,NB)*SNB(MN,NB)*DFNOB(MN,NB)
     &      *RHOMNB(MN,NB)
          INDX = 20
          DFM = DIFMN( DFP,DFB,DZGF(N),DZGF(N),DXMNO,INDX )
          WDNO(M,2,N) = 2.D+0*DFM*(XMNO(MN,N)-XMNOB(MN,NB))/DZGF(N)
          WNO(M,2,N) = WN(M,2,N)*FNO + WTMO*WDNO(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFNOT group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNOW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive CH4 nonaqueous-liquid fluxes on a west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE NAPL
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMNO = XMNOB(2,NB)-XMNO(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FNOP = XNO(MP,N)*RHON(MP,N)
        FNOB = XNOB(MP,NB)*RHONB(MP,NB)
        INDX = 4
        FNO = DIFMN( FNOB,FNOP,DXGF(N),DXGF(N),UN(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UN(1,1,N).LT.-EPSL ) THEN
            UNO(M,1,N) = UN(M,1,N)*FNO
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UN(1,1,N).GT.EPSL ) THEN
            UNO(M,1,N) = UN(M,1,N)*FNO
          ENDIF
        ELSE
          DFP = TORN(MP,N)*PORD(MP,N)*SN(MP,N)*DFNO(MP,N)
     &      *RHOMN(MP,N)
          DFB = TORNB(MP,NB)*PORDB(MP,NB)*SNB(MP,NB)*DFNOB(MP,NB)
     &      *RHOMNB(MP,NB)
          INDX = 20
          DFM = DIFMN( DFB,DFP,DXGF(N),DXGF(N),DXMNO,INDX )
          UDNO(M,1,N) = 2.D+0*DFM*(XMNOB(MP,NB)-XMNO(MP,N))/DXGF(N)
          UNO(M,1,N) = UN(M,1,N)*FNO + WTMO*UDNO(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFNOW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNWB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water nonaqueous-liquid fluxes on bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMNW = XMNWB(2,NB) - XMNW(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FNWB = XGWB(MP,NB)*RHONB(MP,NB)
        FNWP = XGW(MP,N)*RHON(MP,N)
        INDX = 4
        FNW = DIFMN( FNWB,FNWP,DZGF(N),DZGF(N),WN(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WN(1,1,N).LT.-EPSL ) THEN
            WNW(M,1,N) = WN(M,1,N)*FNW
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WN(1,1,N).GT.EPSL ) THEN
            WNW(M,1,N) = WN(M,1,N)*FNW
          ENDIF
        ELSE
          DFP = TORN(MP,N)*PORD(MP,N)*SN(MP,N)*DFNW(MP,N)
     &      *RHOMN(MP,N)
          DFB = TORNB(MP,NB)*PORDB(MP,NB)*SNB(MP,NB)*DFNWB(MP,NB)
     &      *RHOMNB(MP,NB)
          INDX = 20
          DFM = DIFMN( DFB,DFP,DZGF(N),DZGF(N),DXMNW,INDX )
          WDNW(M,1,N) = 2.D+0*DFM*(XMNWB(MP,NB)-XMNW(MP,N))/DZGF(N)
          WNW(M,1,N) = WN(M,1,N)*FNW + WTMW*WDNW(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFNWB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNWE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water nonaqueous-liquid fluxes on east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMNW = XMNW(2,N) - XMNWB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FNWB = XGWB(MN,NB)*RHONB(MN,NB)
        FNWP = XGW(MN,N)*RHON(MN,N)
        INDX = 4
        FNW = DIFMN( FNWP,FNWB,DXGF(N),DXGF(N),UN(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UN(1,2,N).GT.EPSL ) THEN
            UNW(M,2,N) = UN(M,2,N)*FNW
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UN(1,2,N).LT.-EPSL ) THEN
            UNW(M,2,N) = UN(M,2,N)*FNW
          ENDIF
        ELSE
          DFP = TORN(MN,N)*PORD(MN,N)*SN(MN,N)*DFNW(MN,N)
     &      *RHOMN(MN,N)
          DFB = TORNB(MN,NB)*PORDB(MN,NB)*SNB(MN,NB)*DFNWB(MN,NB)
     &      *RHOMNB(MN,NB)
          INDX = 20
          DFM = DIFMN( DFP,DFB,DXGF(N),DXGF(N),DXMNW,INDX )
          UDNW(M,2,N) = 2.D+0*DFM*(XMNW(MN,N)-XMNWB(MN,NB))/DXGF(N)
          UNW(M,2,N) = UN(M,2,N)*FNW + WTMW*UDNW(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFNWE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNWN( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water nonaqueous-liquid fluxes on north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMNW = XMNW(2,N) - XMNWB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FNWB = XGWB(MN,NB)*RHONB(MN,NB)
        FNWP = XGW(MN,N)*RHON(MN,N)
        INDX = 4
        FNW = DIFMN( FNWP,FNWB,DYGF(N),DYGF(N),VN(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VN(1,2,N).GT.EPSL ) THEN
            VNW(M,2,N) = VN(M,2,N)*FNW
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VN(1,2,N).LT.-EPSL ) THEN
            VNW(M,2,N) = VN(M,2,N)*FNW
          ENDIF
        ELSE
          DFP = TORN(MN,N)*PORD(MN,N)*SN(MN,N)*DFNW(MN,N)
     &      *RHOMN(MN,N)
          DFB = TORNB(MN,NB)*PORDB(MN,NB)*SNB(MN,NB)*DFNWB(MN,NB)
     &      *RHOMNB(MN,NB)
          INDX = 20
          DFM = DIFMN( DFP,DFB,DYGF(N),DYGF(N),DXMNW,INDX )
          VDNW(M,2,N) = 2.D+0*DFM*(XMNW(MN,N)-XMNWB(MN,NB))
     &      /(DYGF(N)*RP(N))
          VNW(M,2,N) = VN(M,2,N)*FNW + WTMW*VDNW(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFNWN group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNWS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water nonaqueous-liquid fluxes on south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMNW = XMNWB(2,NB) - XMNW(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FNWB = XGWB(MP,NB)*RHONB(MP,NB)
        FNWP = XGW(MP,N)*RHON(MP,N)
        INDX = 4
        FNW = DIFMN( FNWB,FNWP,DYGF(N),DYGF(N),VN(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( VN(1,1,N).LT.-EPSL ) THEN
            VNW(M,1,N) = VN(M,1,N)*FNW
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( VN(1,1,N).GT.EPSL ) THEN
            VNW(M,1,N) = VN(M,1,N)*FNW
          ENDIF
        ELSE
          DFP = TORN(MP,N)*PORD(MP,N)*SN(MP,N)*DFNW(MP,N)
     &      *RHOMN(MP,N)
          DFB = TORNB(MP,NB)*PORDB(MP,NB)*SNB(MP,NB)*DFNWB(MP,NB)
     &      *RHOMNB(MP,NB)
          INDX = 20
          DFM = DIFMN( DFB,DFP,DYGF(N),DYGF(N),DXMNW,INDX )
          VDNW(M,1,N) = 2.D+0*DFM*(XMNWB(MP,NB)-XMNW(MP,N))
     &      /(DYGF(N)*RP(N))
          VNW(M,1,N) = VN(M,1,N)*FNW + WTMW*VDNW(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFNWS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNWT( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water nonaqueous-liquid fluxes on top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMNW = XMNW(2,N)-XMNWB(2,NB)
      DO M = 1,ISVF
        MN = MNEG(M)
        FNWB = XGWB(MN,NB)*RHONB(MN,NB)
        FNWP = XGW(MN,N)*RHON(MN,N)
        INDX = 4
        FNW = DIFMN( FNWP,FNWB,DZGF(N),DZGF(N),WN(1,2,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( WN(1,2,N).GT.EPSL ) THEN
            WNW(M,2,N) = WN(M,2,N)*FNW
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( WN(1,2,N).LT.-EPSL ) THEN
            WNW(M,2,N) = WN(M,2,N)*FNW
          ENDIF
        ELSE
          DFP = TORN(MN,N)*PORD(MN,N)*SN(MN,N)*DFNW(MN,N)
     &      *RHOMN(MN,N)
          DFB = TORNB(MN,NB)*PORDB(MN,NB)*SNB(MN,NB)*DFNWB(MN,NB)
     &      *RHOMNB(MN,NB)
          INDX = 20
          DFM = DIFMN( DFP,DFB,DZGF(N),DZGF(N),DXMNW,INDX )
          WDNW(M,2,N) = 2.D+0*DFM*(XMNW(MN,N)-XMNWB(MN,NB))/DZGF(N)
          WNW(M,2,N) = WN(M,2,N)*FNW + WTMW*WDNW(M,2,N)
        ENDIF
      ENDDO
!
!---  End of DFFNWT group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DFFNWW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Diffusive water nonaqueous-liquid fluxes on west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE CONST
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      IF( ISLC(2).LT.1 ) RETURN
      DXMNW = XMNWB(2,NB)-XMNW(2,N)
      DO M = 1,ISVF
        MP = MPOS(M)
        FNWB = XGWB(MP,NB)*RHONB(MP,NB)
        FNWP = XGW(MP,N)*RHON(MP,N)
        INDX = 4
        FNW = DIFMN( FNWB,FNWP,DXGF(N),DXGF(N),UN(1,1,N),INDX )
!
!---    Dirichlet-Outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          IF( UN(1,1,N).LT.-EPSL ) THEN
            UNW(M,1,N) = UN(M,1,N)*FNW
          ENDIF
!
!---    Dirichlet-Inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          IF( UN(1,1,N).GT.EPSL ) THEN
            UNW(M,1,N) = UN(M,1,N)*FNW
          ENDIF
        ELSE
          DFP = TORN(MP,N)*PORD(MP,N)*SN(MP,N)*DFNW(MP,N)
     &      *RHOMN(MP,N)
          DFB = TORNB(MP,NB)*PORDB(MP,NB)*SNB(MP,NB)*DFNWB(MP,NB)
     &      *RHOMNB(MP,NB)
          INDX = 20
          DFM = DIFMN( DFB,DFP,DXGF(N),DXGF(N),DXMNW,INDX )
          UDNW(M,1,N) = 2.D+0*DFM*(XMNWB(MP,NB)-XMNW(MP,N))/DXGF(N)
          UNW(M,1,N) = UN(M,1,N)*FNW + WTMW*UDNW(M,1,N)
        ENDIF
      ENDDO
!
!---  End of DFFNWW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVGB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the gas-phase Darcy flux from pressure gradients
!     and gravitational body forces on a bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MP = MPOS(M)
        HZ = PGB(MP,NB)-PG(MP,N)-5.D-1*GRVZ(1,N)
     &    *DZGF(N)*RHOGB(MP,NB)
        IF( M.EQ.1 ) HD = HZ
        INDX = 9
        RKM = DIFMN(RKGB(MP,NB),RKG(MP,N),DZGF(N),DZGF(N),HD,INDX)
        INDX = 6
        VM = DIFMN(VISGB(MP,NB),VISG(MP,N),DZGF(N),DZGF(N),HD,INDX)
        PERM_PX = PERMRF(MP,N)*PERM(3,N)
        WG(M,1,N) = 2.D+0*PERM_PX*RKM*HZ/(VM*DZGF(N))
!
!---    Dirichlet-outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          WG(M,1,N) = MIN( 0.D+0,WG(M,1,N) )
!
!---    Dirichlet-inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          WG(M,1,N) = MAX( 0.D+0,WG(M,1,N) )
        ENDIF
      ENDDO
!
!---  End of DRCVGB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVGS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the gas-phase Darcy flux from pressure gradients
!     and gravitational body forces on a south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MP = MPOS(M)
        HY = PGB(MP,NB)-PG(MP,N)-5.D-1*GRVY(1,N)
     &    *DYGF(N)*RP(N)*RHOGB(MP,NB)
        IF( M.EQ.1 ) HD = HY
        INDX = 9
        RKM = DIFMN(RKGB(MP,NB),RKG(MP,N),DYGF(N),DYGF(N),HD,INDX)
        INDX = 6
        VM = DIFMN(VISGB(MP,NB),VISG(MP,N),DYGF(N),DYGF(N),HD,INDX)
        PERM_PX = PERMRF(MP,N)*PERM(2,N)
        VG(M,1,N) = 2.D+0*PERM_PX*RKM*HY/(VM*RP(N)*DYGF(N))
!
!---    Dirchlet-outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          VG(M,1,N) = MIN( 0.D+0,VG(M,1,N) )
!
!---    Dirichlet-inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          VG(M,1,N) = MAX( 0.D+0,VG(M,1,N) )
        ENDIF
      ENDDO
!
!---  End of DRCVGS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVGW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the gas-phase Darcy flux from pressure gradients
!     and gravitational body forces on a west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MP = MPOS(M)
        HX = PGB(MP,NB)-PG(MP,N)-5.D-1*GRVX(1,N)
     &    *DXGF(N)*RHOGB(MP,NB)
        IF( M.EQ.1 ) HD = HX
        INDX = 9
        RKM = DIFMN(RKGB(MP,NB),RKG(MP,N),DXGF(N),DXGF(N),HD,INDX)
        INDX = 6
        VM = DIFMN(VISGB(MP,NB),VISG(MP,N),DXGF(N),DXGF(N),HD,INDX)
        PERM_PX = PERMRF(MP,N)*PERM(1,N)
        UG(M,1,N) = 2.D+0*PERM_PX*RKM*HX/(VM*DXGF(N))
!
!---    Dirichlet-outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          UG(M,1,N) = MIN( 0.D+0,UG(M,1,N) )
!
!---    Dirichlet-inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          UG(M,1,N) = MAX( 0.D+0,UG(M,1,N) )
        ENDIF
      ENDDO
!
!---  End of DRCVGW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVGE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the gas-phase Darcy flux from pressure gradients
!     and gravitational body forces on a east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MN = MNEG(M)
        HX = PG(MN,N)-PGB(MN,NB)-5.D-1*GRVX(2,N)
     &    *DXGF(N)*RHOGB(MN,NB)
        IF( M.EQ.1 ) HD = HX
        INDX = 9
        RKM = DIFMN(RKG(MN,N),RKGB(MN,NB),DXGF(N),DXGF(N),HD,INDX)
        INDX = 6
        VM = DIFMN(VISG(MN,N),VISGB(MN,NB),DXGF(N),DXGF(N),HD,INDX)
        PERM_PX = PERMRF(MN,N)*PERM(1,N)
        UG(M,2,N) = 2.D+0*PERM_PX*RKM*HX/(VM*DXGF(N))
!
!---    Dirichlet-outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          UG(M,2,N) = MAX( 0.D+0,UG(M,2,N) )
!
!---    Dirichlet-inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          UG(M,2,N) = MIN( 0.D+0,UG(M,2,N) )
        ENDIF
      ENDDO
!
!---  End of DRCVGE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVGN( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the gas-phase Darcy flux from pressure gradients
!     and gravitational body forces on a north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MN = MNEG(M)
        HY = PG(MN,N)-PGB(MN,NB)-5.D-1*GRVY(2,N)
     &    *DYGF(N)*RP(N)*RHOGB(MN,NB)
        IF( M.EQ.1 ) HD = HY
        INDX = 9
        RKM = DIFMN(RKG(MN,N),RKGB(MN,NB),DYGF(N),DYGF(N),HD,INDX)
        INDX = 6
        VM = DIFMN(VISG(MN,N),VISGB(MN,NB),DYGF(N),DYGF(N),HD,INDX)
        PERM_PX = PERMRF(MN,N)*PERM(2,N)
        VG(M,2,N) = 2.D+0*PERM_PX*RKM*HY/(VM*RP(N)*DYGF(N))
!
!---    Dirichlet-outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          VG(M,2,N) = MAX( 0.D+0,VG(M,2,N))
!
!---    Dirichlet-inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          VG(M,2,N) = MIN( 0.D+0,VG(M,2,N))
        ENDIF
      ENDDO
!
!---  End of DRCVGN group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVGT( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the gas-phase Darcy flux from pressure gradients
!     and gravitational body forces on a top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCVH
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MN = MNEG(M)
        HZ = PG(MN,N)-PGB(MN,NB)-5.D-1*GRVZ(2,N)
     &    *DZGF(N)*RHOGB(MN,NB)
        IF( M.EQ.1 ) HD = HZ
        INDX = 9
        RKM = DIFMN(RKG(MN,N),RKGB(MN,NB),DZGF(N),DZGF(N),HD,INDX)
        INDX = 6
        VM = DIFMN(VISG(MN,N),VISGB(MN,NB),DZGF(N),DZGF(N),HD,INDX)
        PERM_PX = PERMRF(MN,N)*PERM(3,N)
        WG(M,2,N) = 2.D+0*PERM_PX*RKM*HZ/(VM*DZGF(N))
!
!---    Dirichlet-outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          WG(M,2,N) = MAX( 0.D+0,WG(M,2,N) )
!
!---    Dirichlet-inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          WG(M,2,N) = MIN( 0.D+0,WG(M,2,N) )
        ENDIF
      ENDDO
!
!---  End of DRCVGT group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVLB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the aqueous-phase Darcy flux from pressure gradients
!     and gravitational body forces on a bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MP = MPOS(M)
        HZ = PLB(MP,NB)-PL(MP,N)-5.D-1*GRVZ(1,N)
     &    *DZGF(N)*RHOLB(MP,NB)
        IF( M.EQ.1 ) HD = HZ
        INDX = 8
        RKM = DIFMN(RKLB(MP,NB),RKL(MP,N),DZGF(N),DZGF(N),HD,INDX)
        INDX = 5
        VM = DIFMN(VISLB(MP,NB),VISL(MP,N),DZGF(N),DZGF(N),HD,INDX)
        PERM_PX = PERMRF(MP,N)*PERM(3,N)
        WL(M,1,N) = 2.D+0*PERM_PX*RKM*HZ/(VM*DZGF(N))
!
!---    Dirichlet-outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          WL(M,1,N) = MIN( 0.D+0,WL(M,1,N) )
!
!---    Dirichlet-inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          WL(M,1,N) = MAX( 0.D+0,WL(M,1,N) )
        ENDIF
      ENDDO
!
!---  End of DRCVLB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVLS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the aqueous-phase Darcy flux from pressure gradients
!     and gravitational body forces on a south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MP = MPOS(M)
        HY = PLB(MP,NB)-PL(MP,N)-5.D-1*GRVY(1,N)
     &    *DYGF(N)*RP(N)*RHOLB(MP,NB)
        IF( M.EQ.1 ) HD = HY
        INDX = 8
        RKM = DIFMN(RKLB(MP,NB),RKL(MP,N),DYGF(N),DYGF(N),HD,INDX)
        INDX = 5
        VM = DIFMN(VISLB(MP,NB),VISL(MP,N),DYGF(N),DYGF(N),HD,INDX)
        PERM_PX = PERMRF(MP,N)*PERM(2,N)
        VL(M,1,N) = 2.D+0*PERM_PX*RKM*HY/(VM*RP(N)*DYGF(N))
!
!---    Dirichlet-outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          VL(M,1,N) = MIN( 0.D+0,VL(M,1,N) )
!
!---    Dirichlet-inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          VL(M,1,N) = MAX( 0.D+0,VL(M,1,N) )
        ENDIF
      ENDDO
!
!---  End of DRCVLS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVLW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the aqueous-phase Darcy flux from pressure gradients
!     and gravitational body forces on a west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MP = MPOS(M)
        HX = PLB(MP,NB)-PL(MP,N)-5.D-1*GRVX(1,N)
     &    *DXGF(N)*RHOLB(MP,NB)
        IF( M.EQ.1 ) HD = HX
        INDX = 8
        RKM = DIFMN(RKLB(MP,NB),RKL(MP,N),DXGF(N),DXGF(N),HD,INDX)
        INDX = 5
        VM = DIFMN(VISLB(MP,NB),VISL(MP,N),DXGF(N),DXGF(N),HD,INDX)
        PERM_PX = PERMRF(MP,N)*PERM(1,N)
        UL(M,1,N) = 2.D+0*PERM_PX*RKM*HX/(VM*DXGF(N))
!
!---    Dirichlet-outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          UL(M,1,N) = MIN( 0.D+0,UL(M,1,N) )
!
!---    Dirichlet-inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          UL(M,1,N) = MAX( 0.D+0,UL(M,1,N) )
        ENDIF
      ENDDO
!
!---  End of DRCVLW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVLE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the aqueous-phase Darcy flux from pressure gradients
!     and gravitational body forces on a east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MN = MNEG(M)
        HX = PL(MN,N)-PLB(MN,NB)-5.D-1*GRVX(2,N)
     &    *DXGF(N)*RHOLB(MN,NB)
        IF( M.EQ.1 ) HD = HX
        INDX = 8
        RKM = DIFMN(RKL(MN,N),RKLB(MN,NB),DXGF(N),DXGF(N),HD,INDX)
        INDX = 5
        VM = DIFMN(VISL(MN,N),VISLB(MN,NB),DXGF(N),DXGF(N),HD,INDX)
        PERM_PX = PERMRF(MN,N)*PERM(1,N)
        UL(M,2,N) = 2.D+0*PERM_PX*RKM*HX/(VM*DXGF(N))
!
!---    Dirichlet-outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          UL(M,2,N) = MAX( 0.D+0,UL(M,2,N) )
!
!---    Dirichlet-inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          UL(M,2,N) = MIN( 0.D+0,UL(M,2,N) )
        ENDIF
      ENDDO
!
!---  End of DRCVLE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVLN( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the aqueous-phase Darcy flux from pressure gradients
!     and gravitational body forces on a north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MN = MNEG(M)
        HY = PL(MN,N)-PLB(MN,NB)-5.D-1*GRVY(2,N)
     &    *DYGF(N)*RP(N)*RHOLB(MN,NB)
        IF( M.EQ.1 ) HD = HY
        INDX = 8
        RKM = DIFMN(RKL(MN,N),RKLB(MN,NB),DYGF(N),DYGF(N),HD,INDX)
        INDX = 5
        VM = DIFMN(VISL(MN,N),VISLB(MN,NB),DYGF(N),DYGF(N),HD,INDX)
        PERM_PX = PERMRF(MN,N)*PERM(2,N)
        VL(M,2,N) = 2.D+0*PERM_PX*RKM*HY/(VM*RP(N)*DYGF(N))
!
!---    Dirichlet-outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          VL(M,2,N) = MAX( 0.D+0,VL(M,2,N))
!
!---    Dirichlet-inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          VL(M,2,N) = MIN( 0.D+0,VL(M,2,N))
        ENDIF
      ENDDO
!
!---  End of DRCVLN group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVLT( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the aqueous-phase Darcy flux from pressure gradients
!     and gravitational body forces on a top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MN = MNEG(M)
        HZ = PL(MN,N)-PLB(MN,NB)-5.D-1*GRVZ(2,N)
     &    *DZGF(N)*RHOLB(MN,NB)
        IF( M.EQ.1 ) HD = HZ
        INDX = 8
        RKM = DIFMN(RKL(MN,N),RKLB(MN,NB),DZGF(N),DZGF(N),HD,INDX)
        INDX = 5
        VM = DIFMN(VISL(MN,N),VISLB(MN,NB),DZGF(N),DZGF(N),HD,INDX)
        PERM_PX = PERMRF(MN,N)*PERM(3,N)
        WL(M,2,N) = 2.D+0*PERM_PX*RKM*HZ/(VM*DZGF(N))
!
!---    Dirichlet-outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          WL(M,2,N) = MAX( 0.D+0,WL(M,2,N) )
!
!---    Dirichlet-inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          WL(M,2,N) = MIN( 0.D+0,WL(M,2,N) )
        ENDIF
      ENDDO
!
!---  End of DRCVLT group  ---
!
      RETURN
      END
      
!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVNB( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the gas-phase Darcy flux from pressure gradients
!     and gravitational body forces on a bottom boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MP = MPOS(M)
        HZ = PNB(MP,NB) - PN(MP,N)
     &    -5.D-1*GRVZ(1,N)*DZGF(N)*RHONB(MP,NB)
        IF( M.EQ.1 ) HD = HZ
        INDX = 10
        RKM = DIFMN(RKNB(MP,NB),RKN(MP,N),DZGF(N),DZGF(N),HD,INDX)
        INDX = 7
        VM = DIFMN(VISNB(MP,NB),VISN(MP,N),DZGF(N),DZGF(N),HD,INDX)
        PERM_PX = PERMRF(MP,N)*PERM(3,N)
        WN(M,1,N) = 2.D+0*PERM_PX*RKM*HZ/(VM*DZGF(N))
!
!---    Dirichlet-outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          WN(M,1,N) = MIN( 0.D+0,WN(M,1,N) )
!
!---    Dirichlet-inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          WN(M,1,N) = MAX( 0.D+0,WN(M,1,N) )
        ENDIF
      ENDDO
!
!---  End of DRCVNB group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVNS( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the gas-phase Darcy flux from pressure gradients
!     and gravitational body forces on a south boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MP = MPOS(M)
        HY = PNB(MP,NB) - PN(MP,N)
     &    -5.D-1*GRVY(1,N)*DYGF(N)*RP(N)*RHONB(MP,NB)
        IF( M.EQ.1 ) HD = HY
        INDX = 10
        RKM = DIFMN(RKNB(MP,NB),RKN(MP,N),DYGF(N),DYGF(N),HD,INDX)
        INDX = 7
        VM = DIFMN(VISNB(MP,NB),VISN(MP,N),DYGF(N),DYGF(N),HD,INDX)
        PERM_PX = PERMRF(MP,N)*PERM(2,N)
        VN(M,1,N) = 2.D+0*PERM_PX*RKM*HY/(VM*RP(N)*DYGF(N))
!
!---    Dirichlet-outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          VN(M,1,N) = MIN( 0.D+0,VN(M,1,N) )
!
!---    Dirichlet-inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          VN(M,1,N) = MAX( 0.D+0,VN(M,1,N) )
        ENDIF
      ENDDO
!
!---  End of DRCVNS group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVNW( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the gas-phase Darcy flux from pressure gradients
!     and gravitational body forces on a west boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MP = MPOS(M)
        HX = PNB(MP,NB) - PN(MP,N)
     &    -5.D-1*GRVX(1,N)*DXGF(N)*RHONB(MP,NB)
        IF( M.EQ.1 ) HD = HX
        INDX = 10
        RKM = DIFMN(RKNB(MP,NB),RKN(MP,N),DXGF(N),DXGF(N),HD,INDX)
        INDX = 7
        VM = DIFMN(VISNB(MP,NB),VISN(MP,N),DXGF(N),DXGF(N),HD,INDX)
        PERM_PX = PERMRF(MP,N)*PERM(1,N)
        UN(M,1,N) = 2.D+0*PERM_PX*RKM*HX/(VM*DXGF(N))
!
!---    Dirichlet-outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          UN(M,1,N) = MIN( 0.D+0,UN(M,1,N) )
!
!---    Dirichlet-inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          UN(M,1,N) = MAX( 0.D+0,UN(M,1,N) )
        ENDIF
      ENDDO
!
!---  End of DRCVNW group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVNE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the gas-phase Darcy flux from pressure gradients
!     and gravitational body forces on a east boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MN = MNEG(M)
        HX = PN(MN,N) - PNB(MN,NB)
     &    -5.D-1*GRVX(2,N)*DXGF(N)*RHONB(MN,NB)
        IF( M.EQ.1 ) HD = HX
        INDX = 10
        RKM = DIFMN(RKN(MN,N),RKNB(MN,NB),DXGF(N),DXGF(N),HD,INDX)
        INDX = 7
        VM = DIFMN(VISN(MN,N),VISNB(MN,NB),DXGF(N),DXGF(N),HD,INDX)
        PERM_PX = PERMRF(MN,N)*PERM(1,N)
        UN(M,2,N) = 2.D+0*PERM_PX*RKM*HX/(VM*DXGF(N))
!
!---    Dirichlet-outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          UN(M,2,N) = MAX( 0.D+0,UN(M,2,N) )
!
!---    Dirichlet-inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          UN(M,2,N) = MIN( 0.D+0,UN(M,2,N) )
        ENDIF
      ENDDO
!
!---  End of DRCVNE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVNN( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the gas-phase Darcy flux from pressure gradients
!     and gravitational body forces on a north boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MN = MNEG(M)
        HY = PN(MN,N) - PNB(MN,NB)
     &    -5.D-1*GRVY(2,N)*DYGF(N)*RP(N)*RHONB(MN,NB)
        IF( M.EQ.1 ) HD = HY
        INDX = 10
        RKM = DIFMN(RKN(MN,N),RKNB(MN,NB),DYGF(N),DYGF(N),HD,INDX)
        INDX = 7
        VM = DIFMN(VISN(MN,N),VISNB(MN,NB),DYGF(N),DYGF(N),HD,INDX)
        PERM_PX = PERMRF(MN,N)*PERM(2,N)
        VN(M,2,N) = 2.D+0*PERM_PX*RKM*HY/(VM*RP(N)*DYGF(N))
!
!---    Dirichlet-outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          VN(M,2,N) = MAX( 0.D+0,VN(M,2,N))
!
!---    Dirichlet-inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          VN(M,2,N) = MIN( 0.D+0,VN(M,2,N))
        ENDIF
      ENDDO
!
!---  End of DRCVNN group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE DRCVNT( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the gas-phase Darcy flux from pressure gradients
!     and gravitational body forces on a top boundary.
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MN = MNEG(M)
        HZ = PN(MN,N) - PNB(MN,NB)
     &    -5.D-1*GRVZ(2,N)*DZGF(N)*RHONB(MN,NB)
        IF( M.EQ.1 ) HD = HZ
        INDX = 10
        RKM = DIFMN(RKN(MN,N),RKNB(MN,NB),DZGF(N),DZGF(N),HD,INDX)
        INDX = 7
        VM = DIFMN(VISN(MN,N),VISNB(MN,NB),DZGF(N),DZGF(N),HD,INDX)
        PERM_PX = PERMRF(MN,N)*PERM(3,N)
        WN(M,2,N) = 2.D+0*PERM_PX*RKM*HZ/(VM*DZGF(N))
!
!---    Dirichlet-outflow boundary condition  ---
!
        IF( IBCT(2,NB).EQ.15 .OR. IBCT(2,NB).EQ.26 .OR. 
     &    IBCT(2,NB).EQ.30 ) THEN
          WN(M,2,N) = MAX( 0.D+0,WN(M,2,N) )
!
!---    Dirichlet-inflow boundary condition  ---
!
        ELSEIF( IBCT(2,NB).EQ.14 .OR. IBCT(2,NB).EQ.29 .OR. 
     &    MOD(IBCT(2,NB),10).EQ.7 ) THEN
          WN(M,2,N) = MIN( 0.D+0,WN(M,2,N) )
        ENDIF
      ENDDO
!
!---  End of DRCVNT group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THGB_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a bottom boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MP = MPOS(M)
        HP = HG(MP,N)*RHOG(MP,N)
        HB = HGB(MP,NB)*RHOGB(MP,NB)
!
!---    Energy outflow boundary  ---
!
        IF( IBCT(1,NB).EQ.7 ) THEN
          WQ(M,1,N) = WQ(M,1,N) - HP*MAX(-WG(M,1,N),ZERO)
!
!---    Energy inflow boundary  ---
!
        ELSEIF( IBCT(1,NB).EQ.13 ) THEN
          WQ(M,1,N) = WQ(M,1,N) + HB*MAX(WG(M,1,N),ZERO)
!
!---    Energy boundary  ---
!
        ELSE
          WQ(M,1,N) = WQ(M,1,N) + HB*MAX(WG(M,1,N),ZERO)
     &      - HP*MAX(-WG(M,1,N),ZERO)
        ENDIF
      ENDDO
!
!---  End of THGB_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THGE_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a east boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MN = MNEG(M)
        HP = HG(MN,N)*RHOG(MN,N)
        HB = HGB(MN,NB)*RHOGB(MN,NB)
!
!---    Energy outflow boundary  ---
!
        IF( IBCT(1,NB).EQ.7 ) THEN
          UQ(M,2,N) = UQ(M,2,N) + HP*MAX(UG(M,2,N),ZERO)
!
!---    Energy inflow boundary  ---
!
        ELSEIF( IBCT(1,NB).EQ.13 ) THEN
          UQ(M,2,N) = UQ(M,2,N) - HB*MAX(-UG(M,2,N),ZERO)
!
!---    Energy boundary  ---
!
        ELSE
          UQ(M,2,N) = UQ(M,2,N) + HP*MAX(UG(M,2,N),ZERO)
     &      - HB*MAX(-UG(M,2,N),ZERO)
        ENDIF
      ENDDO
!
!---  End of THGE_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THGN_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a north boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MN = MNEG(M)
        HP = HG(MN,N)*RHOG(MN,N)
        HB = HGB(MN,NB)*RHOGB(MN,NB)
!
!---    Energy outflow boundary  ---
!
        IF( IBCT(1,NB).EQ.7 ) THEN
          VQ(M,2,N) = VQ(M,2,N) + HP*MAX(VG(M,2,N),ZERO)
!
!---    Energy inflow boundary  ---
!
        ELSEIF( IBCT(1,NB).EQ.13 ) THEN
          VQ(M,2,N) = VQ(M,2,N) - HB*MAX(-VG(M,2,N),ZERO)
!
!---    Energy boundary  ---
!
        ELSE
          VQ(M,2,N) = VQ(M,2,N) + HP*MAX(VG(M,2,N),ZERO)
     &      - HB*MAX(-VG(M,2,N),ZERO)
        ENDIF
      ENDDO
!
!---  End of THGN_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THGS_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a south boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MP = MPOS(M)
        HP = HG(MP,N)*RHOG(MP,N)
        HB = HGB(MP,NB)*RHOGB(MP,NB)
!
!---    Energy outflow boundary  ---
!
        IF( IBCT(1,NB).EQ.7 ) THEN
          VQ(M,1,N) = VQ(M,1,N) - HP*MAX(-VG(M,1,N),ZERO)
!
!---    Energy inflow boundary  ---
!
        ELSEIF( IBCT(1,NB).EQ.13 ) THEN
          VQ(M,1,N) = VQ(M,1,N) + HB*MAX(VG(M,1,N),ZERO)
!
!---    Energy boundary  ---
!
        ELSE
          VQ(M,1,N) = VQ(M,1,N) + HB*MAX(VG(M,1,N),ZERO)
     &      - HP*MAX(-VG(M,1,N),ZERO)
        ENDIF
      ENDDO
!
!---  End of THGS_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THGT_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a top boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MN = MNEG(M)
        HP = HG(MN,N)*RHOG(MN,N)
        HB = HGB(MN,NB)*RHOGB(MN,NB)
!
!---    Energy outflow boundary  ---
!
        IF( IBCT(1,NB).EQ.7 ) THEN
          WQ(M,2,N) = WQ(M,2,N) + HP*MAX(WG(M,2,N),ZERO)
!
!---    Energy inflow boundary  ---
!
        ELSEIF( IBCT(1,NB).EQ.13 ) THEN
          WQ(M,2,N) = WQ(M,2,N) - HB*MAX(-WG(M,2,N),ZERO)
!
!---    Energy boundary  ---
!
        ELSE
          WQ(M,2,N) = WQ(M,2,N) + HP*MAX(WG(M,2,N),ZERO)
     &      - HB*MAX(-WG(M,2,N),ZERO)
        ENDIF
      ENDDO
!
!---  End of THGT_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THGW_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a west boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MP = MPOS(M)
        HP = HG(MP,N)*RHOG(MP,N)
        HB = HGB(MP,NB)*RHOGB(MP,NB)
!
!---    Energy outflow boundary  ---
!
        IF( IBCT(1,NB).EQ.7 ) THEN
          UQ(M,1,N) = UQ(M,1,N) - HP*MAX(-UG(M,1,N),ZERO)
!
!---    Energy inflow boundary  ---
!
        ELSEIF( IBCT(1,NB).EQ.13 ) THEN
          UQ(M,1,N) = UQ(M,1,N) + HB*MAX(UG(M,1,N),ZERO)
!
!---    Energy boundary  ---
!
        ELSE
          UQ(M,1,N) = UQ(M,1,N) + HB*MAX(UG(M,1,N),ZERO)
     &      - HP*MAX(-UG(M,1,N),ZERO)
        ENDIF
      ENDDO
!
!---  End of THGW_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THLB_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by aqueous advection
!     on a bottom boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MP = MPOS(M)
        HP = HL(MP,N)*RHOL(MP,N)
        HB = HLB(MP,NB)*RHOLB(MP,NB)
!
!---    Energy outflow boundary  ---
!
        IF( IBCT(1,NB).EQ.7 ) THEN
          WQ(M,1,N) = WQ(M,1,N) - HP*MAX(-WL(M,1,N),ZERO)
!
!---    Energy inflow boundary  ---
!
        ELSEIF( IBCT(1,NB).EQ.13 ) THEN
          WQ(M,1,N) = WQ(M,1,N) + HB*MAX(WL(M,1,N),ZERO)
!
!---    Energy boundary  ---
!
        ELSE
          WQ(M,1,N) = WQ(M,1,N) + HB*MAX(WL(M,1,N),ZERO)
     &      - HP*MAX(-WL(M,1,N),ZERO)
        ENDIF
      ENDDO
!
!---  End of THLB_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THLE_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by aqueous advection
!     on a east boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MN = MNEG(M)
        HP = HL(MN,N)*RHOL(MN,N)
        HB = HLB(MN,NB)*RHOLB(MN,NB)
!
!---    Energy outflow boundary  ---
!
        IF( IBCT(1,NB).EQ.7 ) THEN
          UQ(M,2,N) = UQ(M,2,N) + HP*MAX(UL(M,2,N),ZERO)
!
!---    Energy inflow boundary  ---
!
        ELSEIF( IBCT(1,NB).EQ.13 ) THEN
          UQ(M,2,N) = UQ(M,2,N) - HB*MAX(-UL(M,2,N),ZERO)
!
!---    Energy boundary  ---
!
        ELSE
          UQ(M,2,N) = UQ(M,2,N) + HP*MAX(UL(M,2,N),ZERO)
     &      - HB*MAX(-UL(M,2,N),ZERO)
        ENDIF
      ENDDO
!
!---  End of THLE_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THLN_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by aqueous advection
!     on a north boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MN = MNEG(M)
        HP = HL(MN,N)*RHOL(MN,N)
        HB = HLB(MN,NB)*RHOLB(MN,NB)
!
!---    Energy outflow boundary  ---
!
        IF( IBCT(1,NB).EQ.7 ) THEN
          VQ(M,2,N) = VQ(M,2,N) + HP*MAX(VL(M,2,N),ZERO)
!
!---    Energy inflow boundary  ---
!
        ELSEIF( IBCT(1,NB).EQ.13 ) THEN
          VQ(M,2,N) = VQ(M,2,N) - HB*MAX(-VL(M,2,N),ZERO)
!
!---    Energy boundary  ---
!
        ELSE
          VQ(M,2,N) = VQ(M,2,N) + HP*MAX(VL(M,2,N),ZERO)
     &      - HB*MAX(-VL(M,2,N),ZERO)
        ENDIF
      ENDDO
!
!---  End of THLN_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THLS_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by aqueous advection
!     on a south boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MP = MPOS(M)
        HP = HL(MP,N)*RHOL(MP,N)
        HB = HLB(MP,NB)*RHOLB(MP,NB)
!
!---    Energy outflow boundary  ---
!
        IF( IBCT(1,NB).EQ.7 ) THEN
          VQ(M,1,N) = VQ(M,1,N) - HP*MAX(-VL(M,1,N),ZERO)
!
!---    Energy inflow boundary  ---
!
        ELSEIF( IBCT(1,NB).EQ.13 ) THEN
          VQ(M,1,N) = VQ(M,1,N) + HB*MAX(VL(M,1,N),ZERO)
!
!---    Energy boundary  ---
!
        ELSE
          VQ(M,1,N) = VQ(M,1,N) + HB*MAX(VL(M,1,N),ZERO)
     &      - HP*MAX(-VL(M,1,N),ZERO)
        ENDIF
      ENDDO
!
!---  End of THLS_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THLT_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by aqueous advection
!     on a top boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MN = MNEG(M)
        HP = HL(MN,N)*RHOL(MN,N)
        HB = HLB(MN,NB)*RHOLB(MN,NB)
!
!---    Energy outflow boundary  ---
!
        IF( IBCT(1,NB).EQ.7 ) THEN
          WQ(M,2,N) = WQ(M,2,N) + HP*MAX(WL(M,2,N),ZERO)
!
!---    Energy inflow boundary  ---
!
        ELSEIF( IBCT(1,NB).EQ.13 ) THEN
          WQ(M,2,N) = WQ(M,2,N) - HB*MAX(-WL(M,2,N),ZERO)
!
!---    Energy boundary  ---
!
        ELSE
          WQ(M,2,N) = WQ(M,2,N) + HP*MAX(WL(M,2,N),ZERO)
     &      - HB*MAX(-WL(M,2,N),ZERO)
        ENDIF
      ENDDO
!
!---  End of THLT_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THLW_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by aqueous advection
!     on a west boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MP = MPOS(M)
        HP = HL(MP,N)*RHOL(MP,N)
        HB = HLB(MP,NB)*RHOLB(MP,NB)
!
!---    Energy outflow boundary  ---
!
        IF( IBCT(1,NB).EQ.7 ) THEN
          UQ(M,1,N) = UQ(M,1,N) - HP*MAX(-UL(M,1,N),ZERO)
!
!---    Energy inflow boundary  ---
!
        ELSEIF( IBCT(1,NB).EQ.13 ) THEN
          UQ(M,1,N) = UQ(M,1,N) + HB*MAX(UL(M,1,N),ZERO)
!
!---    Energy boundary  ---
!
        ELSE
          UQ(M,1,N) = UQ(M,1,N) + HB*MAX(UL(M,1,N),ZERO)
     &      - HP*MAX(-UL(M,1,N),ZERO)
        ENDIF
      ENDDO
!
!---  End of THLW_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THNB_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a bottom boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MP = MPOS(M)
        HP = HN(MP,N)*RHON(MP,N)
        HB = HNB(MP,NB)*RHONB(MP,NB)
!
!---    Energy outflow boundary  ---
!
        IF( IBCT(1,NB).EQ.7 ) THEN
          WQ(M,1,N) = WQ(M,1,N) - HP*MAX(-WN(M,1,N),ZERO)
!
!---    Energy inflow boundary  ---
!
        ELSEIF( IBCT(1,NB).EQ.13 ) THEN
          WQ(M,1,N) = WQ(M,1,N) + HB*MAX(WN(M,1,N),ZERO)
!
!---    Energy boundary  ---
!
        ELSE
          WQ(M,1,N) = WQ(M,1,N) + HB*MAX(WN(M,1,N),ZERO)
     &      - HP*MAX(-WN(M,1,N),ZERO)
        ENDIF
      ENDDO
!
!---  End of THNB_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THNE_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a east boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MN = MNEG(M)
        HP = HN(MN,N)*RHON(MN,N)
        HB = HNB(MN,NB)*RHONB(MN,NB)
!
!---    Energy outflow boundary  ---
!
        IF( IBCT(1,NB).EQ.7 ) THEN
          UQ(M,2,N) = UQ(M,2,N) + HP*MAX(UN(M,2,N),ZERO)
!
!---    Energy inflow boundary  ---
!
        ELSEIF( IBCT(1,NB).EQ.13 ) THEN
          UQ(M,2,N) = UQ(M,2,N) - HB*MAX(-UN(M,2,N),ZERO)
!
!---    Energy boundary  ---
!
        ELSE
          UQ(M,2,N) = UQ(M,2,N) + HP*MAX(UN(M,2,N),ZERO)
     &      - HB*MAX(-UN(M,2,N),ZERO)
        ENDIF
      ENDDO
!
!---  End of THNE_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THNN_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a north boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MN = MNEG(M)
        HP = HN(MN,N)*RHON(MN,N)
        HB = HNB(MN,NB)*RHONB(MN,NB)
!
!---    Energy outflow boundary  ---
!
        IF( IBCT(1,NB).EQ.7 ) THEN
          VQ(M,2,N) = VQ(M,2,N) + HP*MAX(VN(M,2,N),ZERO)
!
!---    Energy inflow boundary  ---
!
        ELSEIF( IBCT(1,NB).EQ.13 ) THEN
          VQ(M,2,N) = VQ(M,2,N) - HB*MAX(-VN(M,2,N),ZERO)
!
!---    Energy boundary  ---
!
        ELSE
          VQ(M,2,N) = VQ(M,2,N) + HP*MAX(VN(M,2,N),ZERO)
     &      - HB*MAX(-VN(M,2,N),ZERO)
        ENDIF
      ENDDO
!
!---  End of THNN_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THNS_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a south boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MP = MPOS(M)
        HP = HN(MP,N)*RHON(MP,N)
        HB = HNB(MP,NB)*RHONB(MP,NB)
!
!---    Energy outflow boundary  ---
!
        IF( IBCT(1,NB).EQ.7 ) THEN
          VQ(M,1,N) = VQ(M,1,N) - HP*MAX(-VN(M,1,N),ZERO)
!
!---    Energy inflow boundary  ---
!
        ELSEIF( IBCT(1,NB).EQ.13 ) THEN
          VQ(M,1,N) = VQ(M,1,N) + HB*MAX(VN(M,1,N),ZERO)
!
!---    Energy boundary  ---
!
        ELSE
          VQ(M,1,N) = VQ(M,1,N) + HB*MAX(VN(M,1,N),ZERO)
     &      - HP*MAX(-VN(M,1,N),ZERO)
        ENDIF
      ENDDO
!
!---  End of THNS_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THNT_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a top boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MN = MNEG(M)
        HP = HN(MN,N)*RHON(MN,N)
        HB = HNB(MN,NB)*RHONB(MN,NB)
!
!---    Energy outflow boundary  ---
!
        IF( IBCT(1,NB).EQ.7 ) THEN
          WQ(M,2,N) = WQ(M,2,N) + HP*MAX(WN(M,2,N),ZERO)
!
!---    Energy inflow boundary  ---
!
        ELSEIF( IBCT(1,NB).EQ.13 ) THEN
          WQ(M,2,N) = WQ(M,2,N) - HB*MAX(-WN(M,2,N),ZERO)
!
!---    Energy boundary  ---
!
        ELSE
          WQ(M,2,N) = WQ(M,2,N) + HP*MAX(WN(M,2,N),ZERO)
     &      - HB*MAX(-WN(M,2,N),ZERO)
        ENDIF
      ENDDO
!
!---  End of THNT_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THNW_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by gas advection
!     on a west boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE GRID
      USE FLUX
      USE FDVP
      USE CONST
      USE BCVP
      USE BCV
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
      DO M = 1,ISVF
        MP = MPOS(M)
        HP = HN(MP,N)*RHON(MP,N)
        HB = HNB(MP,NB)*RHONB(MP,NB)
!
!---    Energy outflow boundary  ---
!
        IF( IBCT(1,NB).EQ.7 ) THEN
          UQ(M,1,N) = UQ(M,1,N) - HP*MAX(-UN(M,1,N),ZERO)
!
!---    Energy inflow boundary  ---
!
        ELSEIF( IBCT(1,NB).EQ.13 ) THEN
          UQ(M,1,N) = UQ(M,1,N) + HB*MAX(UN(M,1,N),ZERO)
!
!---    Energy boundary  ---
!
        ELSE
          UQ(M,1,N) = UQ(M,1,N) + HB*MAX(UN(M,1,N),ZERO)
     &      - HP*MAX(-UN(M,1,N),ZERO)
        ENDIF
      ENDDO
!
!---  End of THNW_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THDB_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by thermal conduction
!     on a bottom boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE BCVP
      USE BCVH
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
!
!---  Parallel function  ---
!
      IF( ITHK(N).EQ.2 ) THEN
        DO M = 1,ISVF
          MP = MPOS(M)
          TKP = MAX(1.D+0-PORD(MP,N),0.D+0)*THKS(3,N) 
     &      + PORD(MP,N)*(THKL(MP,N)*SL(MP,N) 
     &      + THKH(MP,N)*SH(MP,N) + THKI(MP,N)*SI(MP,N) 
     &      + THKN(MP,N)*SN(MP,N) + THKG(MP,N)*SG(MP,N))
          INDX = 1
          WQ(M,1,N) = 2.D+0*TKP*(TB(MP,NB)-T(MP,N))/DZGF(N)
        ENDDO
!
!---  Somerton function  ---
!
      ELSEIF( ITHK(N).EQ.4 ) THEN
        DO M = 1,ISVF
          MP = MPOS(M)
          TKP = THKS(3,N) 
     &      + SQRT(SL(MP,N))*(THKS(6,N)-THKS(3,N))
          INDX = 1
          WQ(M,1,N) = 2.D+0*TKP*(TB(MP,NB)-T(MP,N))/DZGF(N)
        ENDDO
!
!---  Composite function  ---
!
      ELSEIF( ITHK(N).EQ.8 ) THEN
        DO M = 1,ISVF
          MP = MPOS(M)
          TKP = THKS(1,N) + (SQRT(SL(MP,N)) + SQRT(SH(MP,N)))*
     &      (THKS(2,N)-THKS(1,N)) +
     &      PORD(MP,N)*THKI(MP,N)*SI(MP,N)
          INDX = 1
          WQ(M,1,N) = 2.D+0*TKP*(TB(MP,NB)-T(MP,N))/DZGF(N)
        ENDDO
      ENDIF
!
!---  End of THDB_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THDE_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by thermal conduction
!     on a east boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE BCVP
      USE BCVH
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
!
!---  Parallel function  ---
!
      IF( ITHK(N).EQ.2 ) THEN
        DO M = 1,ISVF
          MN = MNEG(M)
          TKP = MAX(1.D+0-PORD(MN,N),0.D+0)*THKS(1,N) 
     &      + PORD(MN,N)*(THKL(MN,N)*SL(MN,N) 
     &      + THKH(MN,N)*SH(MN,N) + THKI(MN,N)*SI(MN,N) 
     &      + THKN(MN,N)*SN(MN,N) + THKG(MN,N)*SG(MN,N))
          UQ(M,2,N) = 2.D+0*TKP*(T(MN,N)-TB(MN,NB))/DXGF(N)
        ENDDO
!
!---  Somerton function  ---
!
      ELSEIF( ITHK(N).EQ.4 ) THEN
        DO M = 1,ISVF
          MN = MNEG(M)
          TKP = THKS(1,N) 
     &      + SQRT(SL(MN,N))*(THKS(4,N)-THKS(1,N))
          UQ(M,2,N) = 2.D+0*TKP*(T(MN,N)-TB(MN,NB))/DXGF(N)
        ENDDO
!
!---  Composite function  ---
!
      ELSEIF( ITHK(N).EQ.8 ) THEN
        DO M = 1,ISVF
          MN = MNEG(M)
          TKP = THKS(1,N) + (SQRT(SL(MN,N)) + SQRT(SH(MN,N)))*
     &      (THKS(2,N)-THKS(1,N)) +
     &      PORD(MN,N)*THKI(MN,N)*SI(MN,N)
          UQ(M,2,N) = 2.D+0*TKP*(T(MN,N)-TB(MN,NB))/DXGF(N)
        ENDDO
      ENDIF
!
!---  End of THDE_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THDN_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by thermal conduction
!     on a north boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE BCVP
      USE BCVH
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
!
!---  Parallel function  ---
!
      IF( ITHK(N).EQ.2 ) THEN
        DO M = 1,ISVF
          MN = MNEG(M)
          TKP = MAX(1.D+0-PORD(MN,N),0.D+0)*THKS(2,N) 
     &      + PORD(MN,N)*(THKL(MN,N)*SL(MN,N)
     &      + THKH(MN,N)*SH(MN,N) + THKI(MN,N)*SI(MN,N) 
     &      + THKN(MN,N)*SN(MN,N) + THKG(MN,N)*SG(MN,N))
          VQ(M,2,N) = 2.D+0*TKP*(T(MN,N)-TB(MN,NB))/((DYGF(N))*RP(N))
        ENDDO
!
!---  Somerton function  ---
!
      ELSEIF( ITHK(N).EQ.4 ) THEN
        DO M = 1,ISVF
          MN = MNEG(M)
          TKP = THKS(2,N) 
     &      + SQRT(SL(MN,N))*(THKS(5,N)-THKS(2,N))
          VQ(M,2,N) = 2.D+0*TKP*(T(MN,N)-TB(MN,NB))/((DYGF(N))*RP(N))
        ENDDO
!
!---  Composite function  ---
!
      ELSEIF( ITHK(N).EQ.8 ) THEN
        DO M = 1,ISVF
          MN = MNEG(M)
          TKP = THKS(1,N) + (SQRT(SL(MN,N)) + SQRT(SH(MN,N)))*
     &      (THKS(2,N)-THKS(1,N)) +
     &      PORD(MN,N)*THKI(MN,N)*SI(MN,N)
          VQ(M,2,N) = 2.D+0*TKP*(T(MN,N)-TB(MN,NB))/((DYGF(N))*RP(N))
        ENDDO
      ENDIF
!
!---  End of THDN_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THDS_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by thermal conduction
!     on a south boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE BCVP
      USE BCVH
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
!
!---  Parallel function  ---
!
      IF( ITHK(N).EQ.2 ) THEN
        DO M = 1,ISVF
          MP = MPOS(M)
          TKP = MAX(1.D+0-PORD(MP,N),0.D+0)*THKS(2,N) 
     &      + PORD(MP,N)*(THKL(MP,N)*SL(MP,N)
     &      + THKH(MP,N)*SH(MP,N) + THKI(MP,N)*SI(MP,N) 
     &      + THKN(MP,N)*SN(MP,N) + THKG(MP,N)*SG(MP,N))
          VQ(M,1,N) = 2.D+0*TKP*(TB(MP,NB)-T(MP,N))/((DYGF(N))*RP(N))
        ENDDO
!
!---  Somerton function  ---
!
      ELSEIF( ITHK(N).EQ.4 ) THEN
        DO M = 1,ISVF
          MP = MPOS(M)
          TKP = THKS(2,N) 
     &      + SQRT(SL(MP,N))*(THKS(5,N)-THKS(2,N))
          VQ(M,1,N) = 2.D+0*TKP*(TB(MP,NB)-T(MP,N))/((DYGF(N))*RP(N))
        ENDDO
!
!---  Composite function  ---
!
      ELSEIF( ITHK(N).EQ.8 ) THEN
        DO M = 1,ISVF
          MP = MPOS(M)
          TKP = THKS(1,N) + (SQRT(SL(MP,N)) + SQRT(SH(MP,N)))*
     &      (THKS(2,N)-THKS(1,N)) +
     &      PORD(MP,N)*THKI(MP,N)*SI(MP,N)
          VQ(M,1,N) = 2.D+0*TKP*(TB(MP,NB)-T(MP,N))/((DYGF(N))*RP(N))
        ENDDO
      ENDIF
!
!---  End of THDS_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THDT_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by thermal conduction
!     on a top boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE BCVP
      USE BCVH
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
!
!---  Parallel function  ---
!
      IF( ITHK(N).EQ.2 ) THEN
        DO M = 1,ISVF
          MN = MNEG(M)
          TKP = MAX(1.D+0-PORD(MN,N),0.D+0)*THKS(3,N) 
     &      + PORD(MN,N)*(THKL(MN,N)*SL(MN,N)
     &      + THKH(MN,N)*SH(MN,N) + THKI(MN,N)*SI(MN,N) 
     &      + THKN(MN,N)*SN(MN,N)  + THKG(MN,N)*SG(MN,N))
          WQ(M,2,N) = 2.D+0*TKP*(T(MN,N)-TB(MN,NB))/DZGF(N)
        ENDDO
!
!---  Somerton function  ---
!
      ELSEIF( ITHK(N).EQ.4 ) THEN
        DO M = 1,ISVF
          MN = MNEG(M)
          TKP = THKS(3,N) 
     &      + SQRT(SL(MN,N))*(THKS(6,N)-THKS(3,N))
          WQ(M,2,N) = 2.D+0*TKP*(T(MN,N)-TB(MN,NB))/DZGF(N)
        ENDDO
!
!---  Composite function  ---
!
      ELSEIF( ITHK(N).EQ.8 ) THEN
        DO M = 1,ISVF
          MN = MNEG(M)
          TKP = THKS(1,N) + (SQRT(SL(MN,N)) + SQRT(SH(MN,N)))*
     &      (THKS(2,N)-THKS(1,N)) +
     &      PORD(MN,N)*THKI(MN,N)*SI(MN,N)
          WQ(M,2,N) = 2.D+0*TKP*(T(MN,N)-TB(MN,NB))/DZGF(N)
        ENDDO
      ENDIF
!
!---  End of THDT_HYDT_KE group  ---
!
      RETURN
      END

!----------------------Subroutine--------------------------------------!
!
      SUBROUTINE THDW_HYDT_KE( N,NB )
!
!-------------------------Disclaimer-----------------------------------!
!
!     This material was prepared as an account of work sponsored by
!     an agency of the United States Government. Neither the
!     United States Government nor the United States Department of
!     Energy, nor Battelle, nor any of their employees, makes any
!     warranty, express or implied, or assumes any legal liability or
!     responsibility for the accuracy, completeness, or usefulness
!     of any information, apparatus, product, software or process
!     disclosed, or represents that its use would not infringe
!     privately owned rights.
!
!----------------------Acknowledgement---------------------------------!
!
!     This software and its documentation were produced with Government
!     support under Contract Number DE-AC06-76RLO-1830 awarded by the
!     United Department of Energy. The Government retains a paid-up
!     non-exclusive, irrevocable worldwide license to reproduce,
!     prepare derivative works, perform publicly and display publicly
!     by or for the Government, including the right to distribute to
!     other Government contractors.
!
!---------------------Copyright Notices--------------------------------!
!
!            Copyright Battelle Memorial Institute, 1996
!                    All Rights Reserved.
!
!----------------------Description-------------------------------------!
!
!     Compute the contribution to the energy flux by thermal conduction
!     on a west boundary
!
!----------------------Authors-----------------------------------------!
!
!     Written by M.D. White, PNNL, 19 June 2021.
!
!----------------------Fortran 90 Modules------------------------------!
!
      USE GLB_PAR
      USE SOLTN
      USE PROP
      USE GRID
      USE FLUX
      USE FDVP
      USE FDVH
      USE BCVP
      USE BCVH
!
!----------------------Implicit Double Precision-----------------------!
!
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
!
!----------------------Executable Lines--------------------------------!
!
!
!---  Parallel function  ---
!
      IF( ITHK(N).EQ.2 ) THEN
        DO M = 1,ISVF
          MP = MPOS(M)
          TKP = MAX(1.D+0-PORD(MP,N),0.D+0)*THKS(1,N) 
     &      + PORD(MP,N)*(THKL(MP,N)*SL(MP,N)
     &      + THKH(MP,N)*SH(MP,N) + THKI(MP,N)*SI(MP,N) 
     &      + THKN(MP,N)*SN(MP,N) + THKG(MP,N)*SG(MP,N))
          UQ(M,1,N) = 2.D+0*TKP*(TB(MP,NB)-T(MP,N))/DXGF(N)
        ENDDO
!
!---  Somerton function  ---
!
      ELSEIF( ITHK(N).EQ.4 ) THEN
        DO M = 1,ISVF
          MP = MPOS(M)
          TKP = THKS(3,N) 
     &      + SQRT(SL(MP,N))*(THKS(6,N)-THKS(3,N))
          UQ(M,1,N) = 2.D+0*TKP*(TB(MP,NB)-T(MP,N))/DXGF(N)
        ENDDO
!
!---  Composite function  ---
!
      ELSEIF( ITHK(N).EQ.8 ) THEN
        DO M = 1,ISVF
          MP = MPOS(M)
          TKP = THKS(1,N) + (SQRT(SL(MP,N)) + SQRT(SH(MP,N)))*
     &      (THKS(2,N)-THKS(1,N)) +
     &      PORD(MP,N)*THKI(MP,N)*SI(MP,N)
          UQ(M,1,N) = 2.D+0*TKP*(TB(MP,NB)-T(MP,N))/DXGF(N)
        ENDDO
      ENDIF
!
!---  End of THDW_HYDT_KE group  ---
!
      RETURN
      END


